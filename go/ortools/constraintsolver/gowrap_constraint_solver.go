/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /Users/brett/src/or-tools/ortools/constraint_solver/go/routing.i

package constraintsolver

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stddef.h>
#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;



#cgo LDFLAGS: -lgoortools

typedef _goslice_ swig_type_1;
typedef _goslice_ swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef _goslice_ swig_type_12;
typedef _goslice_ swig_type_13;
typedef long long swig_type_14;
typedef long long swig_type_15;
typedef long long swig_type_16;
typedef long long swig_type_17;
typedef long long swig_type_18;
typedef long long swig_type_19;
typedef long long swig_type_20;
typedef long long swig_type_21;
typedef long long swig_type_22;
typedef long long swig_type_23;
typedef long long swig_type_24;
typedef long long swig_type_25;
typedef long long swig_type_26;
typedef long long swig_type_27;
typedef long long swig_type_28;
typedef long long swig_type_29;
typedef long long swig_type_30;
typedef long long swig_type_31;
typedef long long swig_type_32;
typedef long long swig_type_33;
typedef long long swig_type_34;
typedef long long swig_type_35;
typedef long long swig_type_36;
typedef long long swig_type_37;
typedef long long swig_type_38;
typedef long long swig_type_39;
typedef long long swig_type_40;
typedef long long swig_type_41;
typedef long long swig_type_42;
typedef long long swig_type_43;
typedef long long swig_type_44;
typedef long long swig_type_45;
typedef long long swig_type_46;
typedef long long swig_type_47;
typedef _gostring_ swig_type_48;
typedef _gostring_ swig_type_49;
typedef _goslice_ swig_type_50;
typedef _goslice_ swig_type_51;
typedef _goslice_ swig_type_52;
typedef _gostring_ swig_type_53;
typedef long long swig_type_54;
typedef long long swig_type_55;
typedef long long swig_type_56;
typedef long long swig_type_57;
typedef long long swig_type_58;
typedef long long swig_type_59;
typedef long long swig_type_60;
typedef long long swig_type_61;
typedef long long swig_type_62;
typedef long long swig_type_63;
typedef long long swig_type_64;
typedef long long swig_type_65;
typedef _gostring_ swig_type_66;
typedef long long swig_type_67;
typedef long long swig_type_68;
typedef _gostring_ swig_type_69;
typedef _goslice_ swig_type_70;
typedef _gostring_ swig_type_71;
typedef _goslice_ swig_type_72;
typedef _gostring_ swig_type_73;
typedef long long swig_type_74;
typedef long long swig_type_75;
typedef _goslice_ swig_type_76;
typedef _goslice_ swig_type_77;
typedef _gostring_ swig_type_78;
typedef long long swig_type_79;
typedef _gostring_ swig_type_80;
typedef long long swig_type_81;
typedef long long swig_type_82;
typedef _goslice_ swig_type_83;
typedef _goslice_ swig_type_84;
typedef long long swig_type_85;
typedef long long swig_type_86;
typedef long long swig_type_87;
typedef long long swig_type_88;
typedef _goslice_ swig_type_89;
typedef _goslice_ swig_type_90;
typedef long long swig_type_91;
typedef long long swig_type_92;
typedef long long swig_type_93;
typedef long long swig_type_94;
typedef long long swig_type_95;
typedef long long swig_type_96;
typedef long long swig_type_97;
typedef long long swig_type_98;
typedef long long swig_type_99;
typedef long long swig_type_100;
typedef long long swig_type_101;
typedef _gostring_ swig_type_102;
typedef long long swig_type_103;
typedef long long swig_type_104;
typedef long long swig_type_105;
typedef long long swig_type_106;
typedef long long swig_type_107;
typedef long long swig_type_108;
typedef long long swig_type_109;
typedef long long swig_type_110;
typedef long long swig_type_111;
typedef long long swig_type_112;
typedef long long swig_type_113;
typedef long long swig_type_114;
typedef long long swig_type_115;
typedef long long swig_type_116;
typedef long long swig_type_117;
typedef long long swig_type_118;
typedef long long swig_type_119;
typedef long long swig_type_120;
typedef long long swig_type_121;
typedef long long swig_type_122;
typedef long long swig_type_123;
typedef _goslice_ swig_type_124;
typedef long long swig_type_125;
typedef _goslice_ swig_type_126;
typedef long long swig_type_127;
typedef _goslice_ swig_type_128;
typedef _goslice_ swig_type_129;
typedef _goslice_ swig_type_130;
typedef long long swig_type_131;
typedef _goslice_ swig_type_132;
typedef long long swig_type_133;
typedef _goslice_ swig_type_134;
typedef long long swig_type_135;
typedef _goslice_ swig_type_136;
typedef long long swig_type_137;
typedef _goslice_ swig_type_138;
typedef _goslice_ swig_type_139;
typedef long long swig_type_140;
typedef long long swig_type_141;
typedef long long swig_type_142;
typedef long long swig_type_143;
typedef long long swig_type_144;
typedef long long swig_type_145;
typedef long long swig_type_146;
typedef long long swig_type_147;
typedef long long swig_type_148;
typedef long long swig_type_149;
typedef _goslice_ swig_type_150;
typedef _goslice_ swig_type_151;
typedef _goslice_ swig_type_152;
typedef _goslice_ swig_type_153;
typedef _goslice_ swig_type_154;
typedef _goslice_ swig_type_155;
typedef _goslice_ swig_type_156;
typedef _goslice_ swig_type_157;
typedef _goslice_ swig_type_158;
typedef _goslice_ swig_type_159;
typedef _goslice_ swig_type_160;
typedef _goslice_ swig_type_161;
typedef long long swig_type_162;
typedef long long swig_type_163;
typedef long long swig_type_164;
typedef _goslice_ swig_type_165;
typedef _goslice_ swig_type_166;
typedef long long swig_type_167;
typedef long long swig_type_168;
typedef long long swig_type_169;
typedef _goslice_ swig_type_170;
typedef _goslice_ swig_type_171;
typedef _goslice_ swig_type_172;
typedef _goslice_ swig_type_173;
typedef _goslice_ swig_type_174;
typedef _goslice_ swig_type_175;
typedef _goslice_ swig_type_176;
typedef _goslice_ swig_type_177;
typedef _goslice_ swig_type_178;
typedef _goslice_ swig_type_179;
typedef long long swig_type_180;
typedef long long swig_type_181;
typedef _goslice_ swig_type_182;
typedef _goslice_ swig_type_183;
typedef long long swig_type_184;
typedef _goslice_ swig_type_185;
typedef _goslice_ swig_type_186;
typedef long long swig_type_187;
typedef _goslice_ swig_type_188;
typedef long long swig_type_189;
typedef _goslice_ swig_type_190;
typedef long long swig_type_191;
typedef long long swig_type_192;
typedef long long swig_type_193;
typedef _gostring_ swig_type_194;
typedef long long swig_type_195;
typedef _gostring_ swig_type_196;
typedef long long swig_type_197;
typedef _gostring_ swig_type_198;
typedef long long swig_type_199;
typedef long long swig_type_200;
typedef _gostring_ swig_type_201;
typedef long long swig_type_202;
typedef long long swig_type_203;
typedef long long swig_type_204;
typedef long long swig_type_205;
typedef long long swig_type_206;
typedef long long swig_type_207;
typedef _gostring_ swig_type_208;
typedef long long swig_type_209;
typedef long long swig_type_210;
typedef long long swig_type_211;
typedef long long swig_type_212;
typedef long long swig_type_213;
typedef long long swig_type_214;
typedef long long swig_type_215;
typedef long long swig_type_216;
typedef long long swig_type_217;
typedef long long swig_type_218;
typedef long long swig_type_219;
typedef long long swig_type_220;
typedef long long swig_type_221;
typedef long long swig_type_222;
typedef long long swig_type_223;
typedef long long swig_type_224;
typedef _gostring_ swig_type_225;
typedef _gostring_ swig_type_226;
typedef _goslice_ swig_type_227;
typedef long long swig_type_228;
typedef _gostring_ swig_type_229;
typedef _goslice_ swig_type_230;
typedef long long swig_type_231;
typedef _gostring_ swig_type_232;
typedef _goslice_ swig_type_233;
typedef _goslice_ swig_type_234;
typedef _gostring_ swig_type_235;
typedef long long swig_type_236;
typedef _gostring_ swig_type_237;
typedef _gostring_ swig_type_238;
typedef long long swig_type_239;
typedef long long swig_type_240;
typedef long long swig_type_241;
typedef _goslice_ swig_type_242;
typedef long long swig_type_243;
typedef _goslice_ swig_type_244;
typedef long long swig_type_245;
typedef _goslice_ swig_type_246;
typedef long long swig_type_247;
typedef _goslice_ swig_type_248;
typedef long long swig_type_249;
typedef _goslice_ swig_type_250;
typedef long long swig_type_251;
typedef _goslice_ swig_type_252;
typedef long long swig_type_253;
typedef _goslice_ swig_type_254;
typedef long long swig_type_255;
typedef long long swig_type_256;
typedef long long swig_type_257;
typedef _goslice_ swig_type_258;
typedef long long swig_type_259;
typedef long long swig_type_260;
typedef long long swig_type_261;
typedef long long swig_type_262;
typedef long long swig_type_263;
typedef long long swig_type_264;
typedef _goslice_ swig_type_265;
typedef _goslice_ swig_type_266;
typedef long long swig_type_267;
typedef long long swig_type_268;
typedef long long swig_type_269;
typedef long long swig_type_270;
typedef long long swig_type_271;
typedef long long swig_type_272;
typedef long long swig_type_273;
typedef long long swig_type_274;
typedef long long swig_type_275;
typedef long long swig_type_276;
typedef long long swig_type_277;
typedef long long swig_type_278;
typedef long long swig_type_279;
typedef long long swig_type_280;
typedef long long swig_type_281;
typedef long long swig_type_282;
typedef long long swig_type_283;
typedef _goslice_ swig_type_284;
typedef long long swig_type_285;
typedef long long swig_type_286;
typedef long long swig_type_287;
typedef long long swig_type_288;
typedef long long swig_type_289;
typedef long long swig_type_290;
typedef long long swig_type_291;
typedef long long swig_type_292;
typedef long long swig_type_293;
typedef long long swig_type_294;
typedef long long swig_type_295;
typedef long long swig_type_296;
typedef _goslice_ swig_type_297;
typedef _gostring_ swig_type_298;
typedef long long swig_type_299;
typedef long long swig_type_300;
typedef long long swig_type_301;
typedef long long swig_type_302;
typedef long long swig_type_303;
typedef long long swig_type_304;
typedef _goslice_ swig_type_305;
typedef _goslice_ swig_type_306;
typedef _goslice_ swig_type_307;
typedef long long swig_type_308;
typedef long long swig_type_309;
typedef long long swig_type_310;
typedef long long swig_type_311;
typedef long long swig_type_312;
typedef long long swig_type_313;
typedef long long swig_type_314;
typedef long long swig_type_315;
typedef _goslice_ swig_type_316;
typedef long long swig_type_317;
typedef long long swig_type_318;
typedef long long swig_type_319;
typedef _gostring_ swig_type_320;
typedef _gostring_ swig_type_321;
typedef _gostring_ swig_type_322;
typedef long long swig_type_323;
typedef long long swig_type_324;
typedef _gostring_ swig_type_325;
typedef _gostring_ swig_type_326;
typedef _gostring_ swig_type_327;
typedef _gostring_ swig_type_328;
typedef _gostring_ swig_type_329;
typedef _gostring_ swig_type_330;
typedef long long swig_type_331;
typedef long long swig_type_332;
typedef long long swig_type_333;
typedef long long swig_type_334;
typedef _gostring_ swig_type_335;
typedef _gostring_ swig_type_336;
typedef _gostring_ swig_type_337;
typedef _gostring_ swig_type_338;
typedef _gostring_ swig_type_339;
typedef _gostring_ swig_type_340;
typedef _gostring_ swig_type_341;
typedef _gostring_ swig_type_342;
typedef _gostring_ swig_type_343;
typedef _gostring_ swig_type_344;
typedef _gostring_ swig_type_345;
typedef _gostring_ swig_type_346;
typedef _gostring_ swig_type_347;
typedef _gostring_ swig_type_348;
typedef _gostring_ swig_type_349;
typedef _gostring_ swig_type_350;
typedef _gostring_ swig_type_351;
typedef _gostring_ swig_type_352;
typedef _gostring_ swig_type_353;
typedef _gostring_ swig_type_354;
typedef _gostring_ swig_type_355;
typedef _gostring_ swig_type_356;
typedef _gostring_ swig_type_357;
typedef _gostring_ swig_type_358;
typedef _gostring_ swig_type_359;
typedef _gostring_ swig_type_360;
typedef _gostring_ swig_type_361;
typedef _gostring_ swig_type_362;
typedef _gostring_ swig_type_363;
typedef _gostring_ swig_type_364;
typedef _gostring_ swig_type_365;
typedef _gostring_ swig_type_366;
typedef _gostring_ swig_type_367;
typedef _gostring_ swig_type_368;
typedef _gostring_ swig_type_369;
typedef _gostring_ swig_type_370;
typedef _gostring_ swig_type_371;
typedef _gostring_ swig_type_372;
typedef _gostring_ swig_type_373;
typedef _gostring_ swig_type_374;
typedef _gostring_ swig_type_375;
typedef _gostring_ swig_type_376;
typedef _gostring_ swig_type_377;
typedef _gostring_ swig_type_378;
typedef _gostring_ swig_type_379;
typedef _gostring_ swig_type_380;
typedef _gostring_ swig_type_381;
typedef _gostring_ swig_type_382;
typedef _gostring_ swig_type_383;
typedef _gostring_ swig_type_384;
typedef _gostring_ swig_type_385;
typedef _gostring_ swig_type_386;
typedef _gostring_ swig_type_387;
typedef _gostring_ swig_type_388;
typedef _gostring_ swig_type_389;
typedef _gostring_ swig_type_390;
typedef _gostring_ swig_type_391;
typedef _gostring_ swig_type_392;
typedef _gostring_ swig_type_393;
typedef _gostring_ swig_type_394;
typedef _gostring_ swig_type_395;
typedef _gostring_ swig_type_396;
typedef _gostring_ swig_type_397;
typedef _gostring_ swig_type_398;
typedef _gostring_ swig_type_399;
typedef _gostring_ swig_type_400;
typedef _gostring_ swig_type_401;
typedef _gostring_ swig_type_402;
typedef _gostring_ swig_type_403;
typedef _gostring_ swig_type_404;
typedef _gostring_ swig_type_405;
typedef _gostring_ swig_type_406;
typedef _gostring_ swig_type_407;
typedef _gostring_ swig_type_408;
typedef _gostring_ swig_type_409;
typedef _gostring_ swig_type_410;
typedef _gostring_ swig_type_411;
typedef _gostring_ swig_type_412;
typedef _gostring_ swig_type_413;
typedef _gostring_ swig_type_414;
typedef _gostring_ swig_type_415;
typedef _gostring_ swig_type_416;
typedef _gostring_ swig_type_417;
typedef _gostring_ swig_type_418;
typedef _gostring_ swig_type_419;
typedef _gostring_ swig_type_420;
typedef _gostring_ swig_type_421;
typedef _gostring_ swig_type_422;
typedef _gostring_ swig_type_423;
typedef _gostring_ swig_type_424;
typedef _gostring_ swig_type_425;
typedef _gostring_ swig_type_426;
typedef _gostring_ swig_type_427;
typedef _gostring_ swig_type_428;
typedef _gostring_ swig_type_429;
typedef _gostring_ swig_type_430;
typedef _gostring_ swig_type_431;
typedef _gostring_ swig_type_432;
typedef _gostring_ swig_type_433;
typedef _gostring_ swig_type_434;
typedef _gostring_ swig_type_435;
typedef _gostring_ swig_type_436;
typedef _gostring_ swig_type_437;
typedef _gostring_ swig_type_438;
typedef _gostring_ swig_type_439;
typedef _gostring_ swig_type_440;
typedef _gostring_ swig_type_441;
typedef _gostring_ swig_type_442;
typedef _gostring_ swig_type_443;
typedef _gostring_ swig_type_444;
typedef _gostring_ swig_type_445;
typedef _gostring_ swig_type_446;
typedef _gostring_ swig_type_447;
typedef _gostring_ swig_type_448;
typedef _gostring_ swig_type_449;
typedef _gostring_ swig_type_450;
typedef _gostring_ swig_type_451;
typedef _gostring_ swig_type_452;
typedef _gostring_ swig_type_453;
typedef _gostring_ swig_type_454;
typedef _gostring_ swig_type_455;
typedef _gostring_ swig_type_456;
typedef _gostring_ swig_type_457;
typedef _gostring_ swig_type_458;
typedef _gostring_ swig_type_459;
typedef _gostring_ swig_type_460;
typedef _gostring_ swig_type_461;
typedef _gostring_ swig_type_462;
typedef _gostring_ swig_type_463;
typedef _gostring_ swig_type_464;
typedef _gostring_ swig_type_465;
typedef _gostring_ swig_type_466;
typedef _gostring_ swig_type_467;
typedef _gostring_ swig_type_468;
typedef _gostring_ swig_type_469;
typedef _gostring_ swig_type_470;
typedef _gostring_ swig_type_471;
typedef _gostring_ swig_type_472;
typedef _gostring_ swig_type_473;
typedef _gostring_ swig_type_474;
typedef _gostring_ swig_type_475;
typedef _gostring_ swig_type_476;
typedef _gostring_ swig_type_477;
typedef _gostring_ swig_type_478;
typedef _gostring_ swig_type_479;
typedef _gostring_ swig_type_480;
typedef _gostring_ swig_type_481;
typedef _gostring_ swig_type_482;
typedef _gostring_ swig_type_483;
typedef _gostring_ swig_type_484;
typedef _gostring_ swig_type_485;
typedef _gostring_ swig_type_486;
typedef _gostring_ swig_type_487;
typedef _gostring_ swig_type_488;
typedef _gostring_ swig_type_489;
typedef _gostring_ swig_type_490;
typedef _gostring_ swig_type_491;
typedef _gostring_ swig_type_492;
typedef _gostring_ swig_type_493;
typedef _gostring_ swig_type_494;
typedef _gostring_ swig_type_495;
typedef _gostring_ swig_type_496;
typedef _gostring_ swig_type_497;
typedef _gostring_ swig_type_498;
typedef _gostring_ swig_type_499;
typedef _gostring_ swig_type_500;
typedef _gostring_ swig_type_501;
typedef _gostring_ swig_type_502;
typedef _gostring_ swig_type_503;
typedef _gostring_ swig_type_504;
typedef _gostring_ swig_type_505;
typedef _gostring_ swig_type_506;
typedef _gostring_ swig_type_507;
typedef _gostring_ swig_type_508;
typedef _gostring_ swig_type_509;
typedef _gostring_ swig_type_510;
typedef _gostring_ swig_type_511;
typedef _gostring_ swig_type_512;
typedef _gostring_ swig_type_513;
typedef long long swig_type_514;
typedef _gostring_ swig_type_515;
typedef long long swig_type_516;
typedef _gostring_ swig_type_517;
typedef long long swig_type_518;
typedef _gostring_ swig_type_519;
typedef _goslice_ swig_type_520;
typedef _gostring_ swig_type_521;
typedef _gostring_ swig_type_522;
typedef _gostring_ swig_type_523;
typedef _gostring_ swig_type_524;
typedef _gostring_ swig_type_525;
typedef _gostring_ swig_type_526;
typedef _gostring_ swig_type_527;
typedef _gostring_ swig_type_528;
typedef _gostring_ swig_type_529;
typedef _gostring_ swig_type_530;
typedef _gostring_ swig_type_531;
typedef _gostring_ swig_type_532;
typedef _gostring_ swig_type_533;
typedef _gostring_ swig_type_534;
typedef _gostring_ swig_type_535;
typedef _gostring_ swig_type_536;
typedef _gostring_ swig_type_537;
typedef _gostring_ swig_type_538;
typedef _gostring_ swig_type_539;
typedef long long swig_type_540;
typedef long long swig_type_541;
typedef long long swig_type_542;
typedef long long swig_type_543;
typedef _goslice_ swig_type_544;
typedef _goslice_ swig_type_545;
typedef long long swig_type_546;
typedef long long swig_type_547;
typedef long long swig_type_548;
typedef _gostring_ swig_type_549;
typedef _gostring_ swig_type_550;
typedef _gostring_ swig_type_551;
typedef _gostring_ swig_type_552;
typedef long long swig_type_553;
typedef _gostring_ swig_type_554;
typedef long long swig_type_555;
typedef long long swig_type_556;
typedef long long swig_type_557;
typedef long long swig_type_558;
typedef _goslice_ swig_type_559;
typedef _goslice_ swig_type_560;
typedef long long swig_type_561;
typedef long long swig_type_562;
typedef long long swig_type_563;
typedef long long swig_type_564;
typedef long long swig_type_565;
typedef long long swig_type_566;
typedef long long swig_type_567;
typedef long long swig_type_568;
typedef long long swig_type_569;
typedef long long swig_type_570;
typedef long long swig_type_571;
typedef long long swig_type_572;
typedef _goslice_ swig_type_573;
typedef _goslice_ swig_type_574;
typedef long long swig_type_575;
typedef long long swig_type_576;
typedef long long swig_type_577;
typedef _gostring_ swig_type_578;
typedef _gostring_ swig_type_579;
typedef _gostring_ swig_type_580;
typedef _gostring_ swig_type_581;
typedef _gostring_ swig_type_582;
typedef _gostring_ swig_type_583;
typedef long long swig_type_584;
typedef long long swig_type_585;
typedef long long swig_type_586;
typedef long long swig_type_587;
typedef long long swig_type_588;
typedef long long swig_type_589;
typedef long long swig_type_590;
typedef long long swig_type_591;
typedef long long swig_type_592;
typedef long long swig_type_593;
typedef _goslice_ swig_type_594;
typedef _goslice_ swig_type_595;
typedef _goslice_ swig_type_596;
typedef _goslice_ swig_type_597;
typedef long long swig_type_598;
typedef long long swig_type_599;
typedef _gostring_ swig_type_600;
typedef long long swig_type_601;
typedef _goslice_ swig_type_602;
typedef _gostring_ swig_type_603;
typedef _gostring_ swig_type_604;
typedef long long swig_type_605;
typedef _gostring_ swig_type_606;
typedef _gostring_ swig_type_607;
typedef long long swig_type_608;
typedef long long swig_type_609;
typedef _gostring_ swig_type_610;
typedef _gostring_ swig_type_611;
typedef long long swig_type_612;
typedef long long swig_type_613;
typedef long long swig_type_614;
typedef _gostring_ swig_type_615;
typedef long long swig_type_616;
typedef long long swig_type_617;
typedef long long swig_type_618;
typedef long long swig_type_619;
typedef long long swig_type_620;
typedef long long swig_type_621;
typedef long long swig_type_622;
typedef _gostring_ swig_type_623;
typedef _gostring_ swig_type_624;
typedef long long swig_type_625;
typedef long long swig_type_626;
typedef long long swig_type_627;
typedef long long swig_type_628;
typedef long long swig_type_629;
typedef long long swig_type_630;
typedef long long swig_type_631;
typedef long long swig_type_632;
typedef long long swig_type_633;
typedef long long swig_type_634;
typedef long long swig_type_635;
typedef long long swig_type_636;
typedef long long swig_type_637;
typedef long long swig_type_638;
typedef long long swig_type_639;
typedef long long swig_type_640;
typedef long long swig_type_641;
typedef long long swig_type_642;
typedef long long swig_type_643;
typedef long long swig_type_644;
typedef long long swig_type_645;
typedef long long swig_type_646;
typedef long long swig_type_647;
typedef long long swig_type_648;
typedef long long swig_type_649;
typedef long long swig_type_650;
typedef long long swig_type_651;
typedef long long swig_type_652;
typedef long long swig_type_653;
typedef long long swig_type_654;
typedef long long swig_type_655;
typedef long long swig_type_656;
typedef long long swig_type_657;
typedef long long swig_type_658;
typedef long long swig_type_659;
typedef long long swig_type_660;
typedef long long swig_type_661;
typedef long long swig_type_662;
typedef long long swig_type_663;
typedef long long swig_type_664;
typedef long long swig_type_665;
typedef long long swig_type_666;
typedef long long swig_type_667;
typedef long long swig_type_668;
typedef long long swig_type_669;
typedef _gostring_ swig_type_670;
typedef _gostring_ swig_type_671;
typedef _gostring_ swig_type_672;
typedef _gostring_ swig_type_673;
typedef _gostring_ swig_type_674;
typedef _goslice_ swig_type_675;
typedef _goslice_ swig_type_676;
typedef _goslice_ swig_type_677;
typedef long long swig_type_678;
typedef _gostring_ swig_type_679;
typedef _gostring_ swig_type_680;
typedef long long swig_type_681;
typedef long long swig_type_682;
typedef long long swig_type_683;
typedef long long swig_type_684;
typedef long long swig_type_685;
typedef long long swig_type_686;
typedef long long swig_type_687;
typedef long long swig_type_688;
typedef _gostring_ swig_type_689;
typedef long long swig_type_690;
typedef long long swig_type_691;
typedef long long swig_type_692;
typedef long long swig_type_693;
typedef long long swig_type_694;
typedef long long swig_type_695;
typedef long long swig_type_696;
typedef long long swig_type_697;
typedef long long swig_type_698;
typedef long long swig_type_699;
typedef long long swig_type_700;
typedef long long swig_type_701;
typedef long long swig_type_702;
typedef long long swig_type_703;
typedef long long swig_type_704;
typedef long long swig_type_705;
typedef long long swig_type_706;
typedef long long swig_type_707;
typedef long long swig_type_708;
typedef long long swig_type_709;
typedef long long swig_type_710;
typedef long long swig_type_711;
typedef long long swig_type_712;
typedef long long swig_type_713;
typedef long long swig_type_714;
typedef long long swig_type_715;
typedef long long swig_type_716;
typedef long long swig_type_717;
typedef long long swig_type_718;
typedef long long swig_type_719;
typedef long long swig_type_720;
typedef long long swig_type_721;
typedef _gostring_ swig_type_722;
typedef _goslice_ swig_type_723;
typedef _goslice_ swig_type_724;
typedef _goslice_ swig_type_725;
typedef _goslice_ swig_type_726;
typedef _goslice_ swig_type_727;
typedef _goslice_ swig_type_728;
typedef _goslice_ swig_type_729;
typedef _goslice_ swig_type_730;
typedef _goslice_ swig_type_731;
typedef _gostring_ swig_type_732;
typedef long long swig_type_733;
typedef long long swig_type_734;
typedef long long swig_type_735;
typedef long long swig_type_736;
typedef long long swig_type_737;
typedef long long swig_type_738;
typedef long long swig_type_739;
typedef long long swig_type_740;
typedef long long swig_type_741;
typedef long long swig_type_742;
typedef long long swig_type_743;
typedef long long swig_type_744;
typedef long long swig_type_745;
typedef long long swig_type_746;
typedef long long swig_type_747;
typedef long long swig_type_748;
typedef long long swig_type_749;
typedef long long swig_type_750;
typedef long long swig_type_751;
typedef long long swig_type_752;
typedef long long swig_type_753;
typedef long long swig_type_754;
typedef long long swig_type_755;
typedef long long swig_type_756;
typedef long long swig_type_757;
typedef long long swig_type_758;
typedef long long swig_type_759;
typedef long long swig_type_760;
typedef long long swig_type_761;
typedef long long swig_type_762;
typedef long long swig_type_763;
typedef long long swig_type_764;
typedef long long swig_type_765;
typedef long long swig_type_766;
typedef long long swig_type_767;
typedef long long swig_type_768;
typedef long long swig_type_769;
typedef long long swig_type_770;
typedef long long swig_type_771;
typedef long long swig_type_772;
typedef long long swig_type_773;
typedef long long swig_type_774;
typedef long long swig_type_775;
typedef long long swig_type_776;
typedef long long swig_type_777;
typedef long long swig_type_778;
typedef long long swig_type_779;
typedef long long swig_type_780;
typedef long long swig_type_781;
typedef long long swig_type_782;
typedef long long swig_type_783;
typedef long long swig_type_784;
typedef long long swig_type_785;
typedef long long swig_type_786;
typedef long long swig_type_787;
typedef long long swig_type_788;
typedef _goslice_ swig_type_789;
typedef _goslice_ swig_type_790;
typedef _goslice_ swig_type_791;
typedef _goslice_ swig_type_792;
typedef _goslice_ swig_type_793;
typedef _goslice_ swig_type_794;
typedef _goslice_ swig_type_795;
typedef _goslice_ swig_type_796;
typedef _goslice_ swig_type_797;
typedef _gostring_ swig_type_798;
typedef _gostring_ swig_type_799;
typedef _gostring_ swig_type_800;
typedef _goslice_ swig_type_801;
typedef _goslice_ swig_type_802;
typedef _goslice_ swig_type_803;
typedef _goslice_ swig_type_804;
typedef _goslice_ swig_type_805;
typedef _goslice_ swig_type_806;
typedef _goslice_ swig_type_807;
typedef _gostring_ swig_type_808;
typedef _gostring_ swig_type_809;
typedef _gostring_ swig_type_810;
typedef long long swig_type_811;
typedef _gostring_ swig_type_812;
typedef _gostring_ swig_type_813;
typedef _gostring_ swig_type_814;
typedef _gostring_ swig_type_815;
typedef long long swig_type_816;
typedef long long swig_type_817;
typedef _gostring_ swig_type_818;
typedef _gostring_ swig_type_819;
typedef _gostring_ swig_type_820;
typedef _gostring_ swig_type_821;
typedef _gostring_ swig_type_822;
typedef long long swig_type_823;
typedef long long swig_type_824;
typedef long long swig_type_825;
typedef long long swig_type_826;
typedef long long swig_type_827;
typedef long long swig_type_828;
typedef long long swig_type_829;
typedef long long swig_type_830;
typedef long long swig_type_831;
typedef long long swig_type_832;
typedef _goslice_ swig_type_833;
typedef _goslice_ swig_type_834;
typedef long long swig_type_835;
typedef long long swig_type_836;
typedef long long swig_type_837;
typedef long long swig_type_838;
typedef _gostring_ swig_type_839;
typedef long long swig_type_840;
typedef long long swig_type_841;
typedef long long swig_type_842;
typedef long long swig_type_843;
typedef long long swig_type_844;
typedef long long swig_type_845;
typedef long long swig_type_846;
typedef long long swig_type_847;
typedef long long swig_type_848;
typedef long long swig_type_849;
typedef long long swig_type_850;
typedef long long swig_type_851;
typedef _gostring_ swig_type_852;
typedef _gostring_ swig_type_853;
typedef long long swig_type_854;
typedef long long swig_type_855;
typedef long long swig_type_856;
typedef long long swig_type_857;
typedef long long swig_type_858;
typedef long long swig_type_859;
typedef long long swig_type_860;
typedef long long swig_type_861;
typedef long long swig_type_862;
typedef long long swig_type_863;
typedef long long swig_type_864;
typedef long long swig_type_865;
typedef _gostring_ swig_type_866;
typedef _gostring_ swig_type_867;
typedef long long swig_type_868;
typedef long long swig_type_869;
typedef long long swig_type_870;
typedef long long swig_type_871;
typedef long long swig_type_872;
typedef long long swig_type_873;
typedef _gostring_ swig_type_874;
typedef _gostring_ swig_type_875;
typedef long long swig_type_876;
typedef long long swig_type_877;
typedef long long swig_type_878;
typedef long long swig_type_879;
typedef long long swig_type_880;
typedef long long swig_type_881;
typedef long long swig_type_882;
typedef long long swig_type_883;
typedef long long swig_type_884;
typedef _gostring_ swig_type_885;
typedef _gostring_ swig_type_886;
typedef long long swig_type_887;
typedef long long swig_type_888;
typedef long long swig_type_889;
typedef long long swig_type_890;
typedef long long swig_type_891;
typedef long long swig_type_892;
typedef _gostring_ swig_type_893;
typedef _gostring_ swig_type_894;
typedef long long swig_type_895;
typedef long long swig_type_896;
typedef long long swig_type_897;
typedef long long swig_type_898;
typedef _gostring_ swig_type_899;
typedef long long swig_type_900;
typedef long long swig_type_901;
typedef long long swig_type_902;
typedef long long swig_type_903;
typedef long long swig_type_904;
typedef long long swig_type_905;
typedef long long swig_type_906;
typedef _gostring_ swig_type_907;
typedef _gostring_ swig_type_908;
typedef _gostring_ swig_type_909;
typedef long long swig_type_910;
typedef long long swig_type_911;
typedef long long swig_type_912;
typedef long long swig_type_913;
typedef long long swig_type_914;
typedef long long swig_type_915;
typedef long long swig_type_916;
typedef long long swig_type_917;
typedef long long swig_type_918;
typedef long long swig_type_919;
typedef long long swig_type_920;
typedef long long swig_type_921;
typedef _goslice_ swig_type_922;
typedef _goslice_ swig_type_923;
typedef long long swig_type_924;
typedef long long swig_type_925;
typedef long long swig_type_926;
typedef long long swig_type_927;
typedef long long swig_type_928;
typedef long long swig_type_929;
typedef long long swig_type_930;
typedef long long swig_type_931;
typedef long long swig_type_932;
typedef long long swig_type_933;
typedef long long swig_type_934;
typedef long long swig_type_935;
typedef _goslice_ swig_type_936;
typedef _goslice_ swig_type_937;
typedef _goslice_ swig_type_938;
typedef _gostring_ swig_type_939;
typedef long long swig_type_940;
typedef long long swig_type_941;
typedef long long swig_type_942;
typedef long long swig_type_943;
typedef long long swig_type_944;
typedef long long swig_type_945;
typedef long long swig_type_946;
typedef long long swig_type_947;
typedef long long swig_type_948;
typedef long long swig_type_949;
typedef long long swig_type_950;
typedef long long swig_type_951;
typedef _gostring_ swig_type_952;
typedef long long swig_type_953;
typedef long long swig_type_954;
typedef long long swig_type_955;
typedef long long swig_type_956;
typedef _gostring_ swig_type_957;
typedef _goslice_ swig_type_958;
typedef _goslice_ swig_type_959;
typedef long long swig_type_960;
typedef long long swig_type_961;
typedef _gostring_ swig_type_962;
typedef long long swig_type_963;
typedef long long swig_type_964;
typedef long long swig_type_965;
typedef long long swig_type_966;
typedef long long swig_type_967;
typedef long long swig_type_968;
typedef long long swig_type_969;
typedef _gostring_ swig_type_970;
typedef _gostring_ swig_type_971;
typedef _gostring_ swig_type_972;
typedef long long swig_type_973;
typedef long long swig_type_974;
typedef long long swig_type_975;
typedef long long swig_type_976;
typedef long long swig_type_977;
typedef long long swig_type_978;
typedef long long swig_type_979;
typedef long long swig_type_980;
typedef long long swig_type_981;
typedef long long swig_type_982;
typedef long long swig_type_983;
typedef long long swig_type_984;
typedef long long swig_type_985;
typedef long long swig_type_986;
typedef _goslice_ swig_type_987;
typedef _goslice_ swig_type_988;
typedef _goslice_ swig_type_989;
typedef _goslice_ swig_type_990;
typedef long long swig_type_991;
typedef long long swig_type_992;
typedef _goslice_ swig_type_993;
typedef _gostring_ swig_type_994;
typedef long long swig_type_995;
typedef long long swig_type_996;
typedef long long swig_type_997;
typedef long long swig_type_998;
typedef long long swig_type_999;
typedef long long swig_type_1000;
typedef long long swig_type_1001;
typedef long long swig_type_1002;
typedef long long swig_type_1003;
typedef _goslice_ swig_type_1004;
typedef _goslice_ swig_type_1005;
typedef long long swig_type_1006;
typedef long long swig_type_1007;
typedef long long swig_type_1008;
typedef long long swig_type_1009;
typedef long long swig_type_1010;
typedef long long swig_type_1011;
typedef long long swig_type_1012;
typedef long long swig_type_1013;
typedef long long swig_type_1014;
typedef long long swig_type_1015;
typedef long long swig_type_1016;
typedef long long swig_type_1017;
typedef long long swig_type_1018;
typedef long long swig_type_1019;
typedef long long swig_type_1020;
typedef long long swig_type_1021;
typedef _goslice_ swig_type_1022;
typedef _goslice_ swig_type_1023;
typedef long long swig_type_1024;
typedef long long swig_type_1025;
typedef long long swig_type_1026;
typedef _goslice_ swig_type_1027;
typedef _goslice_ swig_type_1028;
typedef long long swig_type_1029;
typedef _goslice_ swig_type_1030;
typedef _goslice_ swig_type_1031;
typedef _goslice_ swig_type_1032;
typedef _gostring_ swig_type_1033;
typedef _goslice_ swig_type_1034;
typedef _goslice_ swig_type_1035;
typedef long long swig_type_1036;
typedef long long swig_type_1037;
typedef long long swig_type_1038;
typedef _goslice_ swig_type_1039;
typedef _goslice_ swig_type_1040;
typedef _goslice_ swig_type_1041;
typedef long long swig_type_1042;
typedef _goslice_ swig_type_1043;
typedef _goslice_ swig_type_1044;
typedef long long swig_type_1045;
typedef long long swig_type_1046;
typedef _gostring_ swig_type_1047;
typedef _goslice_ swig_type_1048;
typedef long long swig_type_1049;
typedef long long swig_type_1050;
typedef _gostring_ swig_type_1051;
typedef long long swig_type_1052;
typedef _goslice_ swig_type_1053;
typedef _gostring_ swig_type_1054;
typedef _goslice_ swig_type_1055;
typedef long long swig_type_1056;
typedef _goslice_ swig_type_1057;
typedef _gostring_ swig_type_1058;
typedef long long swig_type_1059;
typedef long long swig_type_1060;
typedef long long swig_type_1061;
typedef _gostring_ swig_type_1062;
typedef long long swig_type_1063;
typedef long long swig_type_1064;
typedef _gostring_ swig_type_1065;
typedef _goslice_ swig_type_1066;
typedef long long swig_type_1067;
typedef _gostring_ swig_type_1068;
typedef long long swig_type_1069;
typedef _gostring_ swig_type_1070;
typedef _gostring_ swig_type_1071;
typedef _gostring_ swig_type_1072;
typedef _gostring_ swig_type_1073;
typedef _gostring_ swig_type_1074;
typedef _goslice_ swig_type_1075;
typedef _goslice_ swig_type_1076;
typedef long long swig_type_1077;
typedef long long swig_type_1078;
typedef _goslice_ swig_type_1079;
typedef long long swig_type_1080;
typedef _goslice_ swig_type_1081;
typedef _goslice_ swig_type_1082;
typedef long long swig_type_1083;
typedef _goslice_ swig_type_1084;
typedef long long swig_type_1085;
typedef long long swig_type_1086;
typedef _goslice_ swig_type_1087;
typedef long long swig_type_1088;
typedef _goslice_ swig_type_1089;
typedef long long swig_type_1090;
typedef long long swig_type_1091;
typedef long long swig_type_1092;
typedef long long swig_type_1093;
typedef long long swig_type_1094;
typedef long long swig_type_1095;
typedef long long swig_type_1096;
typedef long long swig_type_1097;
typedef long long swig_type_1098;
typedef long long swig_type_1099;
typedef _goslice_ swig_type_1100;
typedef _goslice_ swig_type_1101;
typedef long long swig_type_1102;
typedef long long swig_type_1103;
typedef long long swig_type_1104;
typedef long long swig_type_1105;
typedef long long swig_type_1106;
typedef long long swig_type_1107;
typedef long long swig_type_1108;
typedef long long swig_type_1109;
typedef long long swig_type_1110;
typedef long long swig_type_1111;
typedef _gostring_ swig_type_1112;
typedef _gostring_ swig_type_1113;
typedef long long swig_type_1114;
typedef long long swig_type_1115;
typedef long long swig_type_1116;
typedef long long swig_type_1117;
typedef long long swig_type_1118;
typedef _goslice_ swig_type_1119;
typedef _goslice_ swig_type_1120;
typedef long long swig_type_1121;
typedef long long swig_type_1122;
typedef long long swig_type_1123;
typedef long long swig_type_1124;
typedef long long swig_type_1125;
typedef _goslice_ swig_type_1126;
typedef _goslice_ swig_type_1127;
typedef _goslice_ swig_type_1128;
typedef _goslice_ swig_type_1129;
typedef _goslice_ swig_type_1130;
typedef _goslice_ swig_type_1131;
typedef _goslice_ swig_type_1132;
typedef long long swig_type_1133;
typedef long long swig_type_1134;
typedef _goslice_ swig_type_1135;
typedef _gostring_ swig_type_1136;
typedef _gostring_ swig_type_1137;
typedef long long swig_type_1138;
typedef long long swig_type_1139;
typedef long long swig_type_1140;
typedef long long swig_type_1141;
typedef long long swig_type_1142;
typedef long long swig_type_1143;
typedef long long swig_type_1144;
typedef long long swig_type_1145;
typedef long long swig_type_1146;
typedef long long swig_type_1147;
typedef long long swig_type_1148;
typedef long long swig_type_1149;
typedef long long swig_type_1150;
typedef long long swig_type_1151;
typedef long long swig_type_1152;
typedef long long swig_type_1153;
typedef long long swig_type_1154;
typedef long long swig_type_1155;
typedef long long swig_type_1156;
typedef long long swig_type_1157;
typedef long long swig_type_1158;
typedef long long swig_type_1159;
typedef long long swig_type_1160;
typedef long long swig_type_1161;
typedef long long swig_type_1162;
typedef long long swig_type_1163;
typedef long long swig_type_1164;
typedef long long swig_type_1165;
typedef _goslice_ swig_type_1166;
typedef long long swig_type_1167;
typedef long long swig_type_1168;
typedef long long swig_type_1169;
typedef _gostring_ swig_type_1170;
typedef _gostring_ swig_type_1171;
typedef long long swig_type_1172;
typedef long long swig_type_1173;
typedef _goslice_ swig_type_1174;
typedef long long swig_type_1175;
typedef _goslice_ swig_type_1176;
typedef _goslice_ swig_type_1177;
typedef _gostring_ swig_type_1178;
typedef _gostring_ swig_type_1179;
typedef _gostring_ swig_type_1180;
typedef _gostring_ swig_type_1181;
typedef _gostring_ swig_type_1182;
typedef _gostring_ swig_type_1183;
typedef _gostring_ swig_type_1184;
typedef _gostring_ swig_type_1185;
typedef _gostring_ swig_type_1186;
typedef _gostring_ swig_type_1187;
typedef long long swig_type_1188;
typedef long long swig_type_1189;
typedef long long swig_type_1190;
typedef long long swig_type_1191;
typedef long long swig_type_1192;
typedef long long swig_type_1193;
typedef long long swig_type_1194;
typedef long long swig_type_1195;
typedef long long swig_type_1196;
typedef long long swig_type_1197;
typedef long long swig_type_1198;
typedef long long swig_type_1199;
typedef long long swig_type_1200;
typedef long long swig_type_1201;
typedef long long swig_type_1202;
typedef long long swig_type_1203;
typedef long long swig_type_1204;
typedef long long swig_type_1205;
typedef long long swig_type_1206;
typedef long long swig_type_1207;
typedef long long swig_type_1208;
typedef long long swig_type_1209;
typedef long long swig_type_1210;
typedef long long swig_type_1211;
typedef long long swig_type_1212;
typedef long long swig_type_1213;
typedef long long swig_type_1214;
typedef long long swig_type_1215;
typedef long long swig_type_1216;
typedef long long swig_type_1217;
typedef long long swig_type_1218;
typedef long long swig_type_1219;
typedef long long swig_type_1220;
typedef long long swig_type_1221;
typedef long long swig_type_1222;
typedef long long swig_type_1223;
typedef long long swig_type_1224;
typedef long long swig_type_1225;
typedef long long swig_type_1226;
typedef long long swig_type_1227;
typedef _goslice_ swig_type_1228;
typedef long long swig_type_1229;
typedef long long swig_type_1230;
typedef _goslice_ swig_type_1231;
typedef long long swig_type_1232;
typedef long long swig_type_1233;
typedef _gostring_ swig_type_1234;
typedef long long swig_type_1235;
typedef long long swig_type_1236;
typedef long long swig_type_1237;
typedef long long swig_type_1238;
typedef long long swig_type_1239;
typedef long long swig_type_1240;
typedef long long swig_type_1241;
typedef long long swig_type_1242;
typedef long long swig_type_1243;
typedef _goslice_ swig_type_1244;
extern void _wrap_Swig_free_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_constraintsolver_e5a2167dd134d32d(swig_intgo arg1);
extern uintptr_t _wrap_new_IntTupleSet__SWIG_0_constraintsolver_e5a2167dd134d32d(swig_intgo arg1);
extern uintptr_t _wrap_new_IntTupleSet__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_IntTupleSet_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntTupleSet_Clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_IntTupleSet_Insert__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1 arg2);
extern swig_intgo _wrap_IntTupleSet_Insert__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_2 arg2);
extern swig_intgo _wrap_IntTupleSet_Insert2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_3 arg2, swig_type_4 arg3);
extern swig_intgo _wrap_IntTupleSet_Insert3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_5 arg2, swig_type_6 arg3, swig_type_7 arg4);
extern swig_intgo _wrap_IntTupleSet_Insert4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_8 arg2, swig_type_9 arg3, swig_type_10 arg4, swig_type_11 arg5);
extern void _wrap_IntTupleSet_InsertAll__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntTupleSet_InsertAll__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_IntTupleSet_Contains__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_12 arg2);
extern _Bool _wrap_IntTupleSet_Contains__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_13 arg2);
extern swig_intgo _wrap_IntTupleSet_NumTuples_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_14 _wrap_IntTupleSet_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_intgo _wrap_IntTupleSet_Arity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_IntTupleSet_NumDifferentValuesInColumn_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_IntTupleSet_SortedByColumn_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_IntTupleSet_SortedLexicographically_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_LocalSearchPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_LocalSearchPhaseParameters_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_IntVarVector__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_IntVarVector__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_15 arg1);
extern uintptr_t _wrap_new_IntVarVector__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_16 _wrap_IntVarVector_size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_17 _wrap_IntVarVector_capacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarVector_reserve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_18 arg2);
extern _Bool _wrap_IntVarVector_isEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarVector_clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarVector_add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntVarVector_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_IntVarVector_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_IntVarVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_SearchMonitorVector__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_SearchMonitorVector__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_19 arg1);
extern uintptr_t _wrap_new_SearchMonitorVector__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_20 _wrap_SearchMonitorVector_size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_21 _wrap_SearchMonitorVector_capacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitorVector_reserve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_22 arg2);
extern _Bool _wrap_SearchMonitorVector_isEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitorVector_clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitorVector_add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SearchMonitorVector_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SearchMonitorVector_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_SearchMonitorVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_DecisionBuilderVector__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_DecisionBuilderVector__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_23 arg1);
extern uintptr_t _wrap_new_DecisionBuilderVector__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_24 _wrap_DecisionBuilderVector_size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_25 _wrap_DecisionBuilderVector_capacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DecisionBuilderVector_reserve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_26 arg2);
extern _Bool _wrap_DecisionBuilderVector_isEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DecisionBuilderVector_clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DecisionBuilderVector_add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DecisionBuilderVector_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_DecisionBuilderVector_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_DecisionBuilderVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_IntervalVarVector__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_IntervalVarVector__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_27 arg1);
extern uintptr_t _wrap_new_IntervalVarVector__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_28 _wrap_IntervalVarVector_size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_29 _wrap_IntervalVarVector_capacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarVector_reserve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_30 arg2);
extern _Bool _wrap_IntervalVarVector_isEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarVector_clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarVector_add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVarVector_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_IntervalVarVector_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_IntervalVarVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_SequenceVarVector__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_SequenceVarVector__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_31 arg1);
extern uintptr_t _wrap_new_SequenceVarVector__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_32 _wrap_SequenceVarVector_size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_33 _wrap_SequenceVarVector_capacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarVector_reserve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_34 arg2);
extern _Bool _wrap_SequenceVarVector_isEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarVector_clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarVector_add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SequenceVarVector_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SequenceVarVector_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_SequenceVarVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_LocalSearchOperatorVector__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_LocalSearchOperatorVector__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_35 arg1);
extern uintptr_t _wrap_new_LocalSearchOperatorVector__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_36 _wrap_LocalSearchOperatorVector_size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_37 _wrap_LocalSearchOperatorVector_capacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchOperatorVector_reserve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_38 arg2);
extern _Bool _wrap_LocalSearchOperatorVector_isEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchOperatorVector_clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchOperatorVector_add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LocalSearchOperatorVector_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_LocalSearchOperatorVector_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_LocalSearchOperatorVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_LocalSearchFilterVector__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_LocalSearchFilterVector__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_39 arg1);
extern uintptr_t _wrap_new_LocalSearchFilterVector__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_40 _wrap_LocalSearchFilterVector_size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_41 _wrap_LocalSearchFilterVector_capacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchFilterVector_reserve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_42 arg2);
extern _Bool _wrap_LocalSearchFilterVector_isEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchFilterVector_clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchFilterVector_add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LocalSearchFilterVector_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_LocalSearchFilterVector_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_LocalSearchFilterVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_SymmetryBreakerVector__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_SymmetryBreakerVector__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_43 arg1);
extern uintptr_t _wrap_new_SymmetryBreakerVector__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_44 _wrap_SymmetryBreakerVector_size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_45 _wrap_SymmetryBreakerVector_capacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SymmetryBreakerVector_reserve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_46 arg2);
extern _Bool _wrap_SymmetryBreakerVector_isEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SymmetryBreakerVector_clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SymmetryBreakerVector_add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SymmetryBreakerVector_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SymmetryBreakerVector_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_SymmetryBreakerVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_47 _wrap_CpRandomSeed_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MAX_SUM_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MAX_AVERAGE_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MAX_VALUE_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SELECT_MIN_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SELECT_MAX_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_NONE_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_NORMAL_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VERBOSE_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_DefaultPhaseParameters_var_selection_schema_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DefaultPhaseParameters_var_selection_schema_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_value_selection_schema_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DefaultPhaseParameters_value_selection_schema_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_initialization_splits_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DefaultPhaseParameters_initialization_splits_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_run_all_heuristics_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DefaultPhaseParameters_run_all_heuristics_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_heuristic_period_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DefaultPhaseParameters_heuristic_period_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_heuristic_num_failures_limit_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DefaultPhaseParameters_heuristic_num_failures_limit_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_persistent_impact_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DefaultPhaseParameters_persistent_impact_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_random_seed_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DefaultPhaseParameters_random_seed_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_display_level_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DefaultPhaseParameters_display_level_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_use_last_conflict_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DefaultPhaseParameters_use_last_conflict_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DefaultPhaseParameters_decision_builder_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DefaultPhaseParameters_decision_builder_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Solver_kNumPriorities_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INT_VAR_DEFAULT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INT_VAR_SIMPLE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_FIRST_UNBOUND_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_RANDOM_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MIN_SIZE_LOWEST_MIN_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MIN_SIZE_HIGHEST_MIN_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MIN_SIZE_LOWEST_MAX_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MIN_SIZE_HIGHEST_MAX_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_LOWEST_MIN_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_HIGHEST_MAX_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MIN_SIZE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MAX_SIZE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MAX_REGRET_ON_MIN_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_PATH_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INT_VALUE_DEFAULT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INT_VALUE_SIMPLE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ASSIGN_MIN_VALUE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ASSIGN_MAX_VALUE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ASSIGN_RANDOM_VALUE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ASSIGN_CENTER_VALUE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SPLIT_LOWER_HALF_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SPLIT_UPPER_HALF_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_STATIC_GLOBAL_BEST_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_DYNAMIC_GLOBAL_BEST_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SEQUENCE_DEFAULT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SEQUENCE_SIMPLE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_MIN_SLACK_RANK_FORWARD_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOOSE_RANDOM_RANK_FORWARD_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INTERVAL_DEFAULT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INTERVAL_SIMPLE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INTERVAL_SET_TIMES_FORWARD_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INTERVAL_SET_TIMES_BACKWARD_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_TWOOPT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_OROPT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_RELOCATE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXCHANGE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CROSS_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_MAKEACTIVE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_MAKEINACTIVE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_MAKECHAININACTIVE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SWAPACTIVE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXTENDEDSWAPACTIVE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_PATHLNS_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_FULLPATHLNS_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_UNACTIVELNS_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_INCREMENT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_DECREMENT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SIMPLELNS_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_LK_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_TSPOPT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_TSPLNS_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_GE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_LE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EQ_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_DELAYED_PRIORITY_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_PRIORITY_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_NORMAL_PRIORITY_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ENDS_AFTER_END_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ENDS_AFTER_START_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ENDS_AT_END_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ENDS_AT_START_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_STARTS_AFTER_END_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_STARTS_AFTER_START_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_STARTS_AT_END_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_STARTS_AT_START_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_STAYS_IN_SYNC_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ENDS_AFTER_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ENDS_AT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ENDS_BEFORE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_STARTS_AFTER_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_STARTS_AT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_STARTS_BEFORE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CROSS_DATE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_AVOID_DATE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_NO_CHANGE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_KEEP_LEFT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_KEEP_RIGHT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_KILL_BOTH_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SWITCH_BRANCHES_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SENTINEL_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_SIMPLE_MARKER_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CHOICE_POINT_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_REVERSIBLE_ACTION_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_OUTSIDE_SEARCH_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_IN_ROOT_NODE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_IN_SEARCH_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_AT_SOLUTION_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_NO_MORE_SOLUTIONS_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_PROBLEM_INFEASIBLE_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_NOT_SET_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_MAXIMIZATION_Solver_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_MINIMIZATION_Solver_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_Solver__SWIG_0_constraintsolver_e5a2167dd134d32d(swig_type_48 arg1);
extern uintptr_t _wrap_new_Solver__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_49 arg1, swig_type_50 arg2);
extern void _wrap_delete_Solver_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_51 _wrap_Solver_Parameters_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_voidp _wrap_Solver_ConstParameters_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_52 _wrap_Solver_DefaultSolverParameters_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_Solver_AddConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Solver_AddCastConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_Solver_Solve__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_Solver_Solve__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Solver_Solve__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_Solver_Solve__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_Solver_Solve__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern _Bool _wrap_Solver_Solve__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern void _wrap_Solver_NewSearch__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Solver_NewSearch__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Solver_NewSearch__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Solver_NewSearch__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_Solver_NewSearch__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern void _wrap_Solver_NewSearch__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern _Bool _wrap_Solver_NextSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_EndSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Solver_SolveAndCommit__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_Solver_SolveAndCommit__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Solver_SolveAndCommit__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_Solver_SolveAndCommit__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_Solver_SolveAndCommit__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern _Bool _wrap_Solver_CheckAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Solver_CheckConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Solver_State_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_Fail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_53 _wrap_Solver_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_54 _wrap_Solver_MemoryUsage_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_55 _wrap_Solver_WallTime_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_56 _wrap_Solver_Branches_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_57 _wrap_Solver_Solutions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_58 _wrap_Solver_UncheckedSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_59 _wrap_Solver_DemonRuns_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_60 _wrap_Solver_Failures_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_61 _wrap_Solver_Neighbors_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_ClearNeighbors_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_IncrementNeighbors_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_62 _wrap_Solver_FilteredNeighbors_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_63 _wrap_Solver_AcceptedNeighbors_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_64 _wrap_Solver_Stamp_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_65 _wrap_Solver_FailStamp_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_SetContext_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_66 _wrap_Solver_Context_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_SetOptimizationDirection_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Solver_MakeIntVar__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_67 arg2, swig_type_68 arg3, swig_type_69 arg4);
extern uintptr_t _wrap_Solver_MakeIntVar__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_70 arg2, swig_type_71 arg3);
extern uintptr_t _wrap_Solver_MakeIntVar__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_72 arg2, swig_type_73 arg3);
extern uintptr_t _wrap_Solver_MakeIntVar__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_74 arg2, swig_type_75 arg3);
extern uintptr_t _wrap_Solver_MakeIntVar__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_76 arg2);
extern uintptr_t _wrap_Solver_MakeIntVar__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_77 arg2);
extern uintptr_t _wrap_Solver_MakeBoolVar__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_78 arg2);
extern uintptr_t _wrap_Solver_MakeBoolVar__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeIntConst__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_79 arg2, swig_type_80 arg3);
extern uintptr_t _wrap_Solver_MakeIntConst__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_81 arg2);
extern uintptr_t _wrap_Solver_MakeSum__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeSum__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_82 arg3);
extern uintptr_t _wrap_Solver_MakeSum__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeScalProd__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_83 arg3);
extern uintptr_t _wrap_Solver_MakeScalProd__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_84 arg3);
extern uintptr_t _wrap_Solver_MakeDifference__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeDifference__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_85 arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeOpposite_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeProd__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeProd__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_86 arg3);
extern uintptr_t _wrap_Solver_MakeDiv__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_87 arg3);
extern uintptr_t _wrap_Solver_MakeDiv__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeAbs_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeSquare_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakePower_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_88 arg3);
extern uintptr_t _wrap_Solver_MakeElement__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_89 arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeElement__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_90 arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeElement__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeMonotonicElement_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeElement__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeElement__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIndexExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_91 arg3);
extern uintptr_t _wrap_Solver_MakeIfThenElseCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeMin__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeMin__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeMin__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_92 arg3);
extern uintptr_t _wrap_Solver_MakeMin__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeMax__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeMax__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeMax__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_93 arg3);
extern uintptr_t _wrap_Solver_MakeMax__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeConvexPiecewiseExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_94 arg3, swig_type_95 arg4, swig_type_96 arg5, swig_type_97 arg6);
extern uintptr_t _wrap_Solver_MakeSemiContinuousExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_98 arg3, swig_type_99 arg4);
extern uintptr_t _wrap_Solver_MakeModulo__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_100 arg3);
extern uintptr_t _wrap_Solver_MakeModulo__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeConditionalExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_101 arg4);
extern uintptr_t _wrap_Solver_MakeTrueConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeFalseConstraint__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeFalseConstraint__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_102 arg2);
extern uintptr_t _wrap_Solver_MakeIsEqualCstCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_103 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsEqualCstVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_104 arg3);
extern uintptr_t _wrap_Solver_MakeIsEqualCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsEqualVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_105 arg3);
extern uintptr_t _wrap_Solver_MakeEquality__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeIsDifferentCstCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_106 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsDifferentCstVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_107 arg3);
extern uintptr_t _wrap_Solver_MakeIsDifferentVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIsDifferentCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeNonEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeNonEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_108 arg3);
extern uintptr_t _wrap_Solver_MakeNonEquality__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeIsLessOrEqualCstCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_109 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsLessOrEqualCstVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_110 arg3);
extern uintptr_t _wrap_Solver_MakeIsLessOrEqualVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIsLessOrEqualCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeLessOrEqual__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeLessOrEqual__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_111 arg3);
extern uintptr_t _wrap_Solver_MakeLessOrEqual__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeIsGreaterOrEqualCstCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_112 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsGreaterOrEqualCstVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_113 arg3);
extern uintptr_t _wrap_Solver_MakeIsGreaterOrEqualVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIsGreaterOrEqualCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeGreaterOrEqual__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeGreaterOrEqual__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_114 arg3);
extern uintptr_t _wrap_Solver_MakeGreaterOrEqual__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeIsGreaterCstCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_115 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsGreaterCstVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_116 arg3);
extern uintptr_t _wrap_Solver_MakeIsGreaterVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIsGreaterCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeGreater__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeGreater__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_117 arg3);
extern uintptr_t _wrap_Solver_MakeGreater__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeIsLessCstCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_118 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsLessCstVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_119 arg3);
extern uintptr_t _wrap_Solver_MakeIsLessVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIsLessCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeLess__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeLess__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_120 arg3);
extern uintptr_t _wrap_Solver_MakeLess__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeSumLessOrEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_121 arg3);
extern uintptr_t _wrap_Solver_MakeSumGreaterOrEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_122 arg3);
extern uintptr_t _wrap_Solver_MakeSumEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_123 arg3);
extern uintptr_t _wrap_Solver_MakeSumEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeScalProdEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_124 arg3, swig_type_125 arg4);
extern uintptr_t _wrap_Solver_MakeScalProdEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_126 arg3, swig_type_127 arg4);
extern uintptr_t _wrap_Solver_MakeScalProdEquality__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_128 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeScalProdEquality__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_129 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeScalProdGreaterOrEqual__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_130 arg3, swig_type_131 arg4);
extern uintptr_t _wrap_Solver_MakeScalProdGreaterOrEqual__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_132 arg3, swig_type_133 arg4);
extern uintptr_t _wrap_Solver_MakeScalProdLessOrEqual__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_134 arg3, swig_type_135 arg4);
extern uintptr_t _wrap_Solver_MakeScalProdLessOrEqual__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_136 arg3, swig_type_137 arg4);
extern uintptr_t _wrap_Solver_MakeMinEquality_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeMaxEquality_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeElementEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_138 arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeElementEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_139 arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeElementEquality__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeElementEquality__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_140 arg4);
extern uintptr_t _wrap_Solver_MakeAbsEquality_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIndexOfConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_141 arg4);
extern uintptr_t _wrap_Solver_MakeConstraintInitialPropagateCallback_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeDelayedConstraintInitialPropagateCallback_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeClosureDemon_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeBetweenCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_142 arg3, swig_type_143 arg4);
extern uintptr_t _wrap_Solver_MakeNotBetweenCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_144 arg3, swig_type_145 arg4);
extern uintptr_t _wrap_Solver_MakeIsBetweenCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_146 arg3, swig_type_147 arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeIsBetweenVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_148 arg3, swig_type_149 arg4);
extern uintptr_t _wrap_Solver_MakeMemberCt__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_150 arg3);
extern uintptr_t _wrap_Solver_MakeMemberCt__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_151 arg3);
extern uintptr_t _wrap_Solver_MakeNotMemberCt__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_152 arg3);
extern uintptr_t _wrap_Solver_MakeNotMemberCt__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_153 arg3);
extern uintptr_t _wrap_Solver_MakeNotMemberCt__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_154 arg3, swig_type_155 arg4);
extern uintptr_t _wrap_Solver_MakeNotMemberCt__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_156 arg3, swig_type_157 arg4);
extern uintptr_t _wrap_Solver_MakeIsMemberCt__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_158 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsMemberCt__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_159 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIsMemberVar__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_160 arg3);
extern uintptr_t _wrap_Solver_MakeIsMemberVar__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_161 arg3);
extern uintptr_t _wrap_Solver_MakeCount__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_162 arg3, swig_type_163 arg4);
extern uintptr_t _wrap_Solver_MakeCount__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_164 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeDistribute__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_165 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeDistribute__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_166 arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeDistribute__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeDistribute__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_167 arg3, swig_type_168 arg4, swig_type_169 arg5);
extern uintptr_t _wrap_Solver_MakeDistribute__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_170 arg3, swig_type_171 arg4);
extern uintptr_t _wrap_Solver_MakeDistribute__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_172 arg3, swig_type_173 arg4);
extern uintptr_t _wrap_Solver_MakeDistribute__SWIG_6_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_174 arg3, swig_type_175 arg4, swig_type_176 arg5);
extern uintptr_t _wrap_Solver_MakeDistribute__SWIG_7_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_177 arg3, swig_type_178 arg4, swig_type_179 arg5);
extern uintptr_t _wrap_Solver_MakeDeviation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_180 arg4);
extern uintptr_t _wrap_Solver_MakeAllDifferent__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeAllDifferent__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern uintptr_t _wrap_Solver_MakeAllDifferentExcept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_181 arg3);
extern uintptr_t _wrap_Solver_MakeSortingConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeLexicalLess_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeLexicalLessOrEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeLexicalLessOrEqualWithOffsets_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_182 arg4);
extern uintptr_t _wrap_Solver_MakeIsLexicalLessOrEqualWithOffsetsCt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_183 arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeInversePermutationConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIndexOfFirstMaxValueConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeIndexOfFirstMinValueConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeNullIntersect_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeNullIntersectExcept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_184 arg4);
extern uintptr_t _wrap_Solver_MakeNoCycle__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeNoCycle__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeNoCycle__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, _Bool arg5);
extern uintptr_t _wrap_Solver_MakeCircuit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeSubCircuit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakePathCumul__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeDelayedPathCumul_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakePathCumul__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakePathCumul__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern uintptr_t _wrap_Solver_MakePathConnected_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_185 arg3, swig_type_186 arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeMapDomain_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeAllowedAssignments_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeTransitionConstraint__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_187 arg4, swig_type_188 arg5);
extern uintptr_t _wrap_Solver_MakeTransitionConstraint__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_189 arg4, swig_type_190 arg5);
extern uintptr_t _wrap_Solver_MakeNonOverlappingBoxesConstraint__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeNonOverlappingBoxesConstraint__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeNonOverlappingBoxesConstraint__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeNonOverlappingNonStrictBoxesConstraint__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeNonOverlappingNonStrictBoxesConstraint__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeNonOverlappingNonStrictBoxesConstraint__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakePack_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeFixedDurationIntervalVar__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_191 arg2, swig_type_192 arg3, swig_type_193 arg4, _Bool arg5, swig_type_194 arg6);
extern uintptr_t _wrap_Solver_MakeFixedDurationIntervalVar__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_195 arg3, swig_type_196 arg4);
extern uintptr_t _wrap_Solver_MakeFixedDurationIntervalVar__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_197 arg3, uintptr_t arg4, swig_type_198 arg5);
extern uintptr_t _wrap_Solver_MakeFixedInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_199 arg2, swig_type_200 arg3, swig_type_201 arg4);
extern uintptr_t _wrap_Solver_MakeIntervalVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_202 arg2, swig_type_203 arg3, swig_type_204 arg4, swig_type_205 arg5, swig_type_206 arg6, swig_type_207 arg7, _Bool arg8, swig_type_208 arg9);
extern void _wrap_Solver_MakeIntervalVarArray_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_type_209 arg3, swig_type_210 arg4, swig_type_211 arg5, swig_type_212 arg6, swig_type_213 arg7, swig_type_214 arg8, _Bool arg9, uintptr_t arg10, uintptr_t arg11);
extern uintptr_t _wrap_Solver_MakeMirrorInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeFixedDurationStartSyncedOnStartIntervalVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_215 arg3, swig_type_216 arg4);
extern uintptr_t _wrap_Solver_MakeFixedDurationStartSyncedOnEndIntervalVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_217 arg3, swig_type_218 arg4);
extern uintptr_t _wrap_Solver_MakeFixedDurationEndSyncedOnStartIntervalVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_219 arg3, swig_type_220 arg4);
extern uintptr_t _wrap_Solver_MakeFixedDurationEndSyncedOnEndIntervalVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_221 arg3, swig_type_222 arg4);
extern uintptr_t _wrap_Solver_MakeIntervalRelaxedMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeIntervalRelaxedMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeIntervalVarRelation__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_type_223 arg4);
extern uintptr_t _wrap_Solver_MakeIntervalVarRelation__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeIntervalVarRelationWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4, swig_type_224 arg5);
extern uintptr_t _wrap_Solver_MakeTemporalDisjunction__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeTemporalDisjunction__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeDisjunctiveConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_225 arg3);
extern uintptr_t _wrap_Solver_MakeStrictDisjunctiveConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_226 arg3);
extern uintptr_t _wrap_Solver_MakeCumulative__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_227 arg3, swig_type_228 arg4, swig_type_229 arg5);
extern uintptr_t _wrap_Solver_MakeCumulative__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_230 arg3, swig_type_231 arg4, swig_type_232 arg5);
extern uintptr_t _wrap_Solver_MakeCumulative__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_233 arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeCumulative__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_234 arg3, uintptr_t arg4, swig_type_235 arg5);
extern uintptr_t _wrap_Solver_MakeCumulative__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_236 arg4, swig_type_237 arg5);
extern uintptr_t _wrap_Solver_MakeCumulative__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_type_238 arg5);
extern uintptr_t _wrap_Solver_MakeCover_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeEquality__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeAssignment__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeAssignment__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeFirstSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeFirstSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeLastSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeLastSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeBestValueSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern uintptr_t _wrap_Solver_MakeBestLexicographicValueSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeBestValueSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_Solver_MakeBestLexicographicValueSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeNBestValueSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, _Bool arg4);
extern uintptr_t _wrap_Solver_MakeNBestValueSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, _Bool arg3);
extern uintptr_t _wrap_Solver_MakeNBestLexicographicValueSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeNBestLexicographicValueSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeAllSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeAllSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeMinimize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_239 arg3);
extern uintptr_t _wrap_Solver_MakeMaximize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_240 arg3);
extern uintptr_t _wrap_Solver_MakeOptimize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, swig_type_241 arg4);
extern uintptr_t _wrap_Solver_MakeWeightedMinimize__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_242 arg3, swig_type_243 arg4);
extern uintptr_t _wrap_Solver_MakeWeightedMinimize__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_244 arg3, swig_type_245 arg4);
extern uintptr_t _wrap_Solver_MakeWeightedMaximize__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_246 arg3, swig_type_247 arg4);
extern uintptr_t _wrap_Solver_MakeWeightedMaximize__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_248 arg3, swig_type_249 arg4);
extern uintptr_t _wrap_Solver_MakeWeightedOptimize__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, swig_type_250 arg4, swig_type_251 arg5);
extern uintptr_t _wrap_Solver_MakeWeightedOptimize__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, swig_type_252 arg4, swig_type_253 arg5);
extern uintptr_t _wrap_Solver_MakeLexicographicOptimize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_254 arg4);
extern uintptr_t _wrap_Solver_MakeTabuSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, swig_type_255 arg4, uintptr_t arg5, swig_type_256 arg6, swig_type_257 arg7, double arg8);
extern uintptr_t _wrap_Solver_MakeLexicographicTabuSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_258 arg4, uintptr_t arg5, swig_type_259 arg6, swig_type_260 arg7, double arg8);
extern uintptr_t _wrap_Solver_MakeGenericTabuSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, swig_type_261 arg4, uintptr_t arg5, swig_type_262 arg6);
extern uintptr_t _wrap_Solver_MakeSimulatedAnnealing_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, swig_type_263 arg4, swig_type_264 arg5);
extern uintptr_t _wrap_Solver_MakeLexicographicSimulatedAnnealing_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_265 arg4, swig_type_266 arg5);
extern uintptr_t _wrap_Solver_MakeGuidedLocalSearch__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, uintptr_t arg4, swig_type_267 arg5, uintptr_t arg6, double arg7, _Bool arg8);
extern uintptr_t _wrap_Solver_MakeGuidedLocalSearch__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, uintptr_t arg4, swig_type_268 arg5, uintptr_t arg6, double arg7);
extern uintptr_t _wrap_Solver_MakeGuidedLocalSearch__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, uintptr_t arg4, swig_type_269 arg5, uintptr_t arg6, uintptr_t arg7, double arg8, _Bool arg9);
extern uintptr_t _wrap_Solver_MakeGuidedLocalSearch__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, uintptr_t arg4, swig_type_270 arg5, uintptr_t arg6, uintptr_t arg7, double arg8);
extern uintptr_t _wrap_Solver_MakeLubyRestart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Solver_MakeConstantRestart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Solver_MakeTimeLimit__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeTimeLimit__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_271 arg2);
extern uintptr_t _wrap_Solver_MakeBranchesLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_272 arg2);
extern uintptr_t _wrap_Solver_MakeFailuresLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_273 arg2);
extern uintptr_t _wrap_Solver_MakeSolutionsLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_274 arg2);
extern uintptr_t _wrap_Solver_MakeLimit__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_275 arg3, swig_type_276 arg4, swig_type_277 arg5, _Bool arg6, _Bool arg7);
extern uintptr_t _wrap_Solver_MakeLimit__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_278 arg3, swig_type_279 arg4, swig_type_280 arg5, _Bool arg6);
extern uintptr_t _wrap_Solver_MakeLimit__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_281 arg3, swig_type_282 arg4, swig_type_283 arg5);
extern uintptr_t _wrap_Solver_MakeLimit__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_284 arg2);
extern uintptr_t _wrap_Solver_MakeLimit__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_285 arg2, swig_type_286 arg3, swig_type_287 arg4, swig_type_288 arg5, _Bool arg6, _Bool arg7);
extern uintptr_t _wrap_Solver_MakeLimit__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_289 arg2, swig_type_290 arg3, swig_type_291 arg4, swig_type_292 arg5, _Bool arg6);
extern uintptr_t _wrap_Solver_MakeLimit__SWIG_6_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_293 arg2, swig_type_294 arg3, swig_type_295 arg4, swig_type_296 arg5);
extern swig_type_297 _wrap_Solver_MakeDefaultRegularLimitParameters_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeLimit__SWIG_7_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeImprovementLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3, double arg4, double arg5, double arg6, swig_intgo arg7);
extern uintptr_t _wrap_Solver_MakeLexicographicImprovementLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, double arg6, swig_intgo arg7);
extern uintptr_t _wrap_Solver_MakeCustomLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeSearchLog__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Solver_MakeSearchLog__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeSearchLog__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeSearchLog__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeSearchLog__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeSearchLog__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeSearchLog__SWIG_6_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeSearchTrace_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_298 arg2);
extern uintptr_t _wrap_Solver_MakeEnterSearchCallback_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeExitSearchCallback_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeAtSolutionCallback_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakePrintModelVisitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeStatisticsModelVisitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeSymmetryManager__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeSymmetryManager__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeSymmetryManager__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeSymmetryManager__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeSymmetryManager__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeAssignVariableValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_299 arg3);
extern uintptr_t _wrap_Solver_MakeVariableLessOrEqualValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_300 arg3);
extern uintptr_t _wrap_Solver_MakeVariableGreaterOrEqualValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_301 arg3);
extern uintptr_t _wrap_Solver_MakeSplitVariableDomain_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_302 arg3, _Bool arg4);
extern uintptr_t _wrap_Solver_MakeAssignVariableValueOrFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_303 arg3);
extern uintptr_t _wrap_Solver_MakeAssignVariableValueOrDoNothing_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_304 arg3);
extern uintptr_t _wrap_Solver_MakeAssignVariablesValues_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_305 arg3);
extern uintptr_t _wrap_Solver_MakeAssignVariablesValuesOrDoNothing_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_306 arg3);
extern uintptr_t _wrap_Solver_MakeAssignVariablesValuesOrFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_307 arg3);
extern uintptr_t _wrap_Solver_MakeFailDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_Compose__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_Compose__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_Compose__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_Compose__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_Try__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_Try__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_Try__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_Try__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_6_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeDefaultPhase__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeDefaultPhase__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_7_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_8_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_9_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5, swig_intgo arg6);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_10_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_intgo arg6, swig_intgo arg7);
extern uintptr_t _wrap_Solver_MakeScheduleOrPostpone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_308 arg3, swig_voidp arg4);
extern uintptr_t _wrap_Solver_MakeScheduleOrExpedite_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_309 arg3, swig_voidp arg4);
extern uintptr_t _wrap_Solver_MakeRankFirstInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeRankLastInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_11_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_12_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_13_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakePhase__SWIG_14_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeDecisionBuilderFromAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeConstraintAdder_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeSolveOnce__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeSolveOnce__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeSolveOnce__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeSolveOnce__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeSolveOnce__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern uintptr_t _wrap_Solver_MakeSolveOnce__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeNestedOptimize__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_type_310 arg5);
extern uintptr_t _wrap_Solver_MakeNestedOptimize__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_type_311 arg5, uintptr_t arg6);
extern uintptr_t _wrap_Solver_MakeNestedOptimize__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_type_312 arg5, uintptr_t arg6, uintptr_t arg7);
extern uintptr_t _wrap_Solver_MakeNestedOptimize__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_type_313 arg5, uintptr_t arg6, uintptr_t arg7, uintptr_t arg8);
extern uintptr_t _wrap_Solver_MakeNestedOptimize__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_type_314 arg5, uintptr_t arg6, uintptr_t arg7, uintptr_t arg8, uintptr_t arg9);
extern uintptr_t _wrap_Solver_MakeNestedOptimize__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_type_315 arg5, uintptr_t arg6);
extern uintptr_t _wrap_Solver_MakeRestoreAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeStoreAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeOperator__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeOperator__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_Solver_MakeOperator__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_Solver_MakeOperator__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern uintptr_t _wrap_Solver_MakeRandomLnsOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MakeRandomLnsOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_Solver_MakeMoveTowardTargetOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_MakeMoveTowardTargetOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_316 arg3);
extern uintptr_t _wrap_Solver_ConcatenateOperators__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_ConcatenateOperators__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern uintptr_t _wrap_Solver_ConcatenateOperators__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_RandomConcatenateOperators__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_RandomConcatenateOperators__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Solver_MultiArmedBanditConcatenateOperators_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, double arg3, double arg4, _Bool arg5);
extern uintptr_t _wrap_Solver_MakeNeighborhoodLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_317 arg3);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhase__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhase__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhase__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhase__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_RunUncheckedLocalSearch__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7);
extern uintptr_t _wrap_Solver_RunUncheckedLocalSearch__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern uintptr_t _wrap_Solver_MakeDefaultSolutionPool_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern uintptr_t _wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7);
extern uintptr_t _wrap_Solver_MakeAcceptFilter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeRejectFilter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeVariableDomainFilter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeSumObjectiveFilter__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_Solver_MakeSumObjectiveFilter__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern void _wrap_Solver_TopPeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Solver_TopProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_PushState_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_PopState_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Solver_SearchDepth_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Solver_SearchLeftDepth_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Solver_SolveDepth_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_318 _wrap_Solver_Rand64_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_319 arg2);
extern swig_intgo _wrap_Solver_Rand32_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Solver_ReSeed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Solver_ExportProfilingOverview_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_320 arg2);
extern swig_type_321 _wrap_Solver_LocalSearchProfile_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Solver_CurrentlyInSolve_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Solver_Constraints_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_BalancingDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_ClearFailIntercept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_SetUseFastLocalSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_Solver_UseFastLocalSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Solver_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_RegisterDemon_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_RegisterIntExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_RegisterIntVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_RegisterIntervalVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_Cache_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Solver_InstrumentsDemons_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Solver_IsProfilingEnabled_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Solver_IsLocalSearchProfilingEnabled_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Solver_InstrumentsVariables_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Solver_NameAllVariables_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_322 _wrap_Solver_ModelName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_GetPropagationMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_AddPropagationMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_GetLocalSearchMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_AddLocalSearchMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_GetOrCreateLocalSearchState_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_ClearLocalSearchState_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_CastExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Solver_FinishCurrentSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_RestartCurrentSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_ShouldFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Solver_CheckFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Solver_MakeProfiledDecisionBuilderWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_323 _wrap_Zero_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_324 _wrap_One_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_BaseObject_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_BaseObject_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_325 _wrap_BaseObject_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_PropagationBaseObject_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_PropagationBaseObject_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_326 _wrap_PropagationBaseObject_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_PropagationBaseObject_solver_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PropagationBaseObject_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PropagationBaseObject_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PropagationBaseObject_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationBaseObject_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationBaseObject_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PropagationBaseObject_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_327 _wrap_PropagationBaseObject_Name_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PropagationBaseObject_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_PropagationBaseObject_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_328 _wrap_PropagationBaseObject_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorDecisionDecision_constraintsolver_e5a2167dd134d32d(int);
extern void _wrap_DeleteDirectorDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_329 _wrap__swig_DirectorDecision_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorDecision_upcall_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t visitor);
extern void _wrap_delete_Decision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Decision_ApplyWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Decision_RefuteWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_330 _wrap_Decision_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Decision_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_DecisionVisitor_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_DecisionVisitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DecisionVisitor_VisitSetVariableValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_331 arg3);
extern void _wrap_DecisionVisitor_VisitSplitVariableDomain_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_332 arg3, _Bool arg4);
extern void _wrap_DecisionVisitor_VisitScheduleOrPostpone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_333 arg3);
extern void _wrap_DecisionVisitor_VisitScheduleOrExpedite_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_334 arg3);
extern void _wrap_DecisionVisitor_VisitRankFirstInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_DecisionVisitor_VisitRankLastInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_DecisionVisitor_VisitUnknownDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_335 _wrap_DecisionVisitor_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorDecisionBuilderDecisionBuilder_constraintsolver_e5a2167dd134d32d(int);
extern void _wrap_DeleteDirectorDecisionBuilder_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_336 _wrap__swig_DirectorDecisionBuilder_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_delete_DecisionBuilder_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_DecisionBuilder_NextWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_337 _wrap_DecisionBuilder_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DecisionBuilder_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_338 _wrap_DecisionBuilder_GetName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorDemonDemon_constraintsolver_e5a2167dd134d32d(int);
extern void _wrap_DeleteDirectorDemon_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_339 _wrap__swig_DirectorDemon_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_intgo _wrap__swig_DirectorDemon_upcall_Priority_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_delete_Demon_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Demon_RunWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Demon_Priority_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_340 _wrap_Demon_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Demon_Inhibit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Demon_Desinhibit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_341 _wrap_ModelVisitor_kAbs_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_342 _wrap_ModelVisitor_kAbsEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_343 _wrap_ModelVisitor_kAllDifferent_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_344 _wrap_ModelVisitor_kAllowedAssignments_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_345 _wrap_ModelVisitor_kAtMost_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_346 _wrap_ModelVisitor_kIndexOf_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_347 _wrap_ModelVisitor_kBetween_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_348 _wrap_ModelVisitor_kConditionalExpr_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_349 _wrap_ModelVisitor_kCircuit_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_350 _wrap_ModelVisitor_kConvexPiecewise_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_351 _wrap_ModelVisitor_kCountEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_352 _wrap_ModelVisitor_kCover_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_353 _wrap_ModelVisitor_kCumulative_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_354 _wrap_ModelVisitor_kDeviation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_355 _wrap_ModelVisitor_kDifference_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_356 _wrap_ModelVisitor_kDisjunctive_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_357 _wrap_ModelVisitor_kDistribute_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_358 _wrap_ModelVisitor_kDivide_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_359 _wrap_ModelVisitor_kDurationExpr_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_360 _wrap_ModelVisitor_kElement_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_361 _wrap_ModelVisitor_kLightElementEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_362 _wrap_ModelVisitor_kElementEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_363 _wrap_ModelVisitor_kEndExpr_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_364 _wrap_ModelVisitor_kEquality_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_365 _wrap_ModelVisitor_kFalseConstraint_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_366 _wrap_ModelVisitor_kGlobalCardinality_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_367 _wrap_ModelVisitor_kGreater_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_368 _wrap_ModelVisitor_kGreaterOrEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_369 _wrap_ModelVisitor_kIntegerVariable_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_370 _wrap_ModelVisitor_kIntervalBinaryRelation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_371 _wrap_ModelVisitor_kIntervalDisjunction_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_372 _wrap_ModelVisitor_kIntervalUnaryRelation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_373 _wrap_ModelVisitor_kIntervalVariable_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_374 _wrap_ModelVisitor_kInversePermutation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_375 _wrap_ModelVisitor_kIsBetween_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_376 _wrap_ModelVisitor_kIsDifferent_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_377 _wrap_ModelVisitor_kIsEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_378 _wrap_ModelVisitor_kIsGreater_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_379 _wrap_ModelVisitor_kIsGreaterOrEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_380 _wrap_ModelVisitor_kIsLess_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_381 _wrap_ModelVisitor_kIsLessOrEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_382 _wrap_ModelVisitor_kIsMember_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_383 _wrap_ModelVisitor_kLess_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_384 _wrap_ModelVisitor_kLessOrEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_385 _wrap_ModelVisitor_kLexLess_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_386 _wrap_ModelVisitor_kLinkExprVar_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_387 _wrap_ModelVisitor_kMapDomain_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_388 _wrap_ModelVisitor_kMax_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_389 _wrap_ModelVisitor_kMaxEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_390 _wrap_ModelVisitor_kMember_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_391 _wrap_ModelVisitor_kMin_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_392 _wrap_ModelVisitor_kMinEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_393 _wrap_ModelVisitor_kModulo_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_394 _wrap_ModelVisitor_kNoCycle_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_395 _wrap_ModelVisitor_kNonEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_396 _wrap_ModelVisitor_kNotBetween_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_397 _wrap_ModelVisitor_kNotMember_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_398 _wrap_ModelVisitor_kNullIntersect_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_399 _wrap_ModelVisitor_kOpposite_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_400 _wrap_ModelVisitor_kPack_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_401 _wrap_ModelVisitor_kPathCumul_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_402 _wrap_ModelVisitor_kDelayedPathCumul_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_403 _wrap_ModelVisitor_kPerformedExpr_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_404 _wrap_ModelVisitor_kPower_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_405 _wrap_ModelVisitor_kProduct_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_406 _wrap_ModelVisitor_kScalProd_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_407 _wrap_ModelVisitor_kScalProdEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_408 _wrap_ModelVisitor_kScalProdGreaterOrEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_409 _wrap_ModelVisitor_kScalProdLessOrEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_410 _wrap_ModelVisitor_kSemiContinuous_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_411 _wrap_ModelVisitor_kSequenceVariable_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_412 _wrap_ModelVisitor_kSortingConstraint_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_413 _wrap_ModelVisitor_kSquare_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_414 _wrap_ModelVisitor_kStartExpr_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_415 _wrap_ModelVisitor_kSum_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_416 _wrap_ModelVisitor_kSumEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_417 _wrap_ModelVisitor_kSumGreaterOrEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_418 _wrap_ModelVisitor_kSumLessOrEqual_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_419 _wrap_ModelVisitor_kTrace_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_420 _wrap_ModelVisitor_kTransition_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_421 _wrap_ModelVisitor_kTrueConstraint_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_422 _wrap_ModelVisitor_kVarBoundWatcher_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_423 _wrap_ModelVisitor_kVarValueWatcher_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_424 _wrap_ModelVisitor_kCountAssignedItemsExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_425 _wrap_ModelVisitor_kCountUsedBinsExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_426 _wrap_ModelVisitor_kInt64ToBoolExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_427 _wrap_ModelVisitor_kInt64ToInt64Extension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_428 _wrap_ModelVisitor_kObjectiveExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_429 _wrap_ModelVisitor_kSearchLimitExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_430 _wrap_ModelVisitor_kUsageEqualVariableExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_431 _wrap_ModelVisitor_kUsageLessConstantExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_432 _wrap_ModelVisitor_kVariableGroupExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_433 _wrap_ModelVisitor_kVariableUsageLessConstantExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_434 _wrap_ModelVisitor_kWeightedSumOfAssignedEqualVariableExtension_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_435 _wrap_ModelVisitor_kActiveArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_436 _wrap_ModelVisitor_kAssumePathsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_437 _wrap_ModelVisitor_kBranchesLimitArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_438 _wrap_ModelVisitor_kCapacityArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_439 _wrap_ModelVisitor_kCardsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_440 _wrap_ModelVisitor_kCoefficientsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_441 _wrap_ModelVisitor_kCountArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_442 _wrap_ModelVisitor_kCumulativeArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_443 _wrap_ModelVisitor_kCumulsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_444 _wrap_ModelVisitor_kDemandsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_445 _wrap_ModelVisitor_kDurationMaxArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_446 _wrap_ModelVisitor_kDurationMinArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_447 _wrap_ModelVisitor_kEarlyCostArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_448 _wrap_ModelVisitor_kEarlyDateArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_449 _wrap_ModelVisitor_kEndMaxArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_450 _wrap_ModelVisitor_kEndMinArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_451 _wrap_ModelVisitor_kEndsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_452 _wrap_ModelVisitor_kExpressionArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_453 _wrap_ModelVisitor_kFailuresLimitArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_454 _wrap_ModelVisitor_kFinalStatesArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_455 _wrap_ModelVisitor_kFixedChargeArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_456 _wrap_ModelVisitor_kIndex2Argument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_457 _wrap_ModelVisitor_kIndexArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_458 _wrap_ModelVisitor_kInitialState_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_459 _wrap_ModelVisitor_kIntervalArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_460 _wrap_ModelVisitor_kIntervalsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_461 _wrap_ModelVisitor_kLateCostArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_462 _wrap_ModelVisitor_kLateDateArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_463 _wrap_ModelVisitor_kLeftArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_464 _wrap_ModelVisitor_kMaxArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_465 _wrap_ModelVisitor_kMaximizeArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_466 _wrap_ModelVisitor_kMinArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_467 _wrap_ModelVisitor_kModuloArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_468 _wrap_ModelVisitor_kNextsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_469 _wrap_ModelVisitor_kOptionalArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_470 _wrap_ModelVisitor_kPartialArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_471 _wrap_ModelVisitor_kPositionXArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_472 _wrap_ModelVisitor_kPositionYArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_473 _wrap_ModelVisitor_kRangeArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_474 _wrap_ModelVisitor_kRelationArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_475 _wrap_ModelVisitor_kRightArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_476 _wrap_ModelVisitor_kSequenceArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_477 _wrap_ModelVisitor_kSequencesArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_478 _wrap_ModelVisitor_kSizeArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_479 _wrap_ModelVisitor_kSizeXArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_480 _wrap_ModelVisitor_kSizeYArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_481 _wrap_ModelVisitor_kSmartTimeCheckArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_482 _wrap_ModelVisitor_kSolutionLimitArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_483 _wrap_ModelVisitor_kStartMaxArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_484 _wrap_ModelVisitor_kStartMinArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_485 _wrap_ModelVisitor_kStartsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_486 _wrap_ModelVisitor_kStepArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_487 _wrap_ModelVisitor_kTargetArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_488 _wrap_ModelVisitor_kTimeLimitArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_489 _wrap_ModelVisitor_kTransitsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_490 _wrap_ModelVisitor_kTuplesArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_491 _wrap_ModelVisitor_kValueArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_492 _wrap_ModelVisitor_kValuesArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_493 _wrap_ModelVisitor_kVariableArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_494 _wrap_ModelVisitor_kVarsArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_495 _wrap_ModelVisitor_kEvaluatorArgument_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_496 _wrap_ModelVisitor_kMirrorOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_497 _wrap_ModelVisitor_kRelaxedMaxOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_498 _wrap_ModelVisitor_kRelaxedMinOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_499 _wrap_ModelVisitor_kSumOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_500 _wrap_ModelVisitor_kDifferenceOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_501 _wrap_ModelVisitor_kProductOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_502 _wrap_ModelVisitor_kStartSyncOnStartOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_503 _wrap_ModelVisitor_kStartSyncOnEndOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_504 _wrap_ModelVisitor_kTraceOperation_get_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_ModelVisitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_ModelVisitor_BeginVisitModel_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_505 arg2);
extern void _wrap_ModelVisitor_EndVisitModel_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_506 arg2);
extern void _wrap_ModelVisitor_BeginVisitConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_507 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_EndVisitConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_508 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_BeginVisitExtension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_509 arg2);
extern void _wrap_ModelVisitor_EndVisitExtension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_510 arg2);
extern void _wrap_ModelVisitor_BeginVisitIntegerExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_511 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_EndVisitIntegerExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_512 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_VisitIntegerVariable__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_VisitIntegerVariable__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_513 arg3, swig_type_514 arg4, uintptr_t arg5);
extern void _wrap_ModelVisitor_VisitIntervalVariable_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_515 arg3, swig_type_516 arg4, uintptr_t arg5);
extern void _wrap_ModelVisitor_VisitSequenceVariable_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ModelVisitor_VisitIntegerArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_517 arg2, swig_type_518 arg3);
extern void _wrap_ModelVisitor_VisitIntegerArrayArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_519 arg2, swig_type_520 arg3);
extern void _wrap_ModelVisitor_VisitIntegerMatrixArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_521 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_VisitIntegerExpressionArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_522 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_VisitIntegerVariableArrayArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_523 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_VisitIntervalArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_524 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_VisitIntervalArrayArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_525 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_VisitSequenceArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_526 arg2, uintptr_t arg3);
extern void _wrap_ModelVisitor_VisitSequenceArrayArgument_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_527 arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_ModelVisitor_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_528 _wrap_ModelVisitor_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorConstraintConstraint_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1);
extern void _wrap_DeleteDirectorConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_529 _wrap__swig_DirectorConstraint_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_type_530 _wrap__swig_DirectorConstraint_upcall_Name_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_type_531 _wrap__swig_DirectorConstraint_upcall_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_delete_Constraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Constraint_Post_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Constraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_532 _wrap_Constraint_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Constraint_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Constraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Constraint_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Constraint_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Constraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Constraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Constraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Constraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Constraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Constraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_533 _wrap_Constraint_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Constraint_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_Constraint_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_534 _wrap_Constraint_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_CastConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_CastConstraint_TargetVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_CastConstraint_Post_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_CastConstraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_535 _wrap_CastConstraint_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_CastConstraint_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_CastConstraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_CastConstraint_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_CastConstraint_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_CastConstraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_CastConstraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_CastConstraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_CastConstraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_CastConstraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_CastConstraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_536 _wrap_CastConstraint_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_CastConstraint_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_CastConstraint_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_537 _wrap_CastConstraint_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorSearchMonitorSearchMonitor_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1);
extern void _wrap_DeleteDirectorSearchMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_538 _wrap__swig_DirectorSearchMonitor_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b);
extern void _wrap__swig_DirectorSearchMonitor_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b, uintptr_t d);
extern void _wrap__swig_DirectorSearchMonitor_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorSearchMonitor_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorSearchMonitor_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d, _Bool apply);
extern void _wrap__swig_DirectorSearchMonitor_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchMonitor_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchMonitor_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchMonitor_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchMonitor_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern void _wrap__swig_DirectorSearchMonitor_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchMonitor_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_intgo _wrap__swig_DirectorSearchMonitor_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchMonitor_upcall_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t visitor);
extern void _wrap__swig_DirectorSearchMonitor_upcall_Install_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_intgo _wrap_SearchMonitor_kNoProgress_SearchMonitor_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_SearchMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_SearchMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchMonitor_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_SearchMonitor_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchMonitor_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchMonitor_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_SearchMonitor_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchMonitor_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchMonitor_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchMonitor_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchMonitor_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_SearchMonitor_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchMonitor_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_SearchMonitor_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchMonitor_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchMonitor_Install_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_SearchMonitor_solver_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_539 _wrap_SearchMonitor_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_IntExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_540 _wrap_IntExpr_Min_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntExpr_SetMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_541 arg2);
extern swig_type_542 _wrap_IntExpr_Max_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntExpr_SetMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_543 arg2);
extern void _wrap_IntExpr_Range_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_544 arg2, swig_type_545 arg3);
extern void _wrap_IntExpr_SetRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_546 arg2, swig_type_547 arg3);
extern void _wrap_IntExpr_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_548 arg2);
extern _Bool _wrap_IntExpr_Bound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntExpr_IsVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntExpr_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntExpr_VarWithName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_549 arg2);
extern void _wrap_IntExpr_WhenRange__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntExpr_WhenRange__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntExpr_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_550 _wrap_IntExpr_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_IntExpr_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntExpr_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntExpr_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntExpr_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_IntExpr_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_IntExpr_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntExpr_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_551 _wrap_IntExpr_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntExpr_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_IntExpr_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_552 _wrap_IntExpr_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_IntVarIterator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarIterator_Init_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntVarIterator_Ok_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_553 _wrap_IntVarIterator_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarIterator_Next_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_554 _wrap_IntVarIterator_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_IntVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntVar_IsVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntVar_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_555 _wrap_IntVar_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVar_RemoveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_556 arg2);
extern void _wrap_IntVar_RemoveInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_557 arg2, swig_type_558 arg3);
extern void _wrap_IntVar_RemoveValues_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_559 arg2);
extern void _wrap_IntVar_SetValues_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_560 arg2);
extern void _wrap_IntVar_WhenBound__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntVar_WhenBound__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntVar_WhenDomain__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntVar_WhenDomain__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_561 _wrap_IntVar_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntVar_Contains_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_562 arg2);
extern swig_type_563 _wrap_IntVar_OldMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_564 _wrap_IntVar_OldMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_IntVar_VarType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVar_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntVar_IsEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_565 arg2);
extern uintptr_t _wrap_IntVar_IsDifferent_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_566 arg2);
extern uintptr_t _wrap_IntVar_IsGreaterOrEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_567 arg2);
extern uintptr_t _wrap_IntVar_IsLessOrEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_568 arg2);
extern swig_intgo _wrap_IntVar_Index_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntVar_GetDomain_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntVar_GetHoles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_569 _wrap_IntVar_Min_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVar_SetMin_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_570 arg1);
extern swig_type_571 _wrap_IntVar_Max_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVar_SetMax_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_572 arg1);
extern void _wrap_IntVar_Range_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_573 arg1, swig_type_574 arg2);
extern void _wrap_IntVar_SetRange_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_575 arg1, swig_type_576 arg2);
extern void _wrap_IntVar_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_577 arg1);
extern _Bool _wrap_IntVar_Bound_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_IntVar_VarWithName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_578 arg1);
extern void _wrap_IntVar_WhenRange__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_IntVar_WhenRange__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_579 _wrap_IntVar_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_IntVar_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVar_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVar_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVar_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_IntVar_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_IntVar_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVar_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_580 _wrap_IntVar_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVar_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_IntVar_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_581 _wrap_IntVar_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorSolutionCollectorSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap__swig_NewDirectorSolutionCollectorSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1);
extern void _wrap_DeleteDirectorSolutionCollector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_582 _wrap__swig_DirectorSolutionCollector_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b);
extern void _wrap__swig_DirectorSolutionCollector_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b, uintptr_t d);
extern void _wrap__swig_DirectorSolutionCollector_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorSolutionCollector_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorSolutionCollector_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d, _Bool apply);
extern void _wrap__swig_DirectorSolutionCollector_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSolutionCollector_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSolutionCollector_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSolutionCollector_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSolutionCollector_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern void _wrap__swig_DirectorSolutionCollector_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSolutionCollector_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_intgo _wrap__swig_DirectorSolutionCollector_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSolutionCollector_upcall_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t visitor);
extern void _wrap__swig_DirectorSolutionCollector_upcall_Install_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern uintptr_t _wrap_new_SolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_SolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_SolutionCollector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SolutionCollector_Install_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_583 _wrap_SolutionCollector_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SolutionCollector_Add__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_Add__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_Add__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_Add__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_Add__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_Add__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_AddObjective_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_AddObjectives_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_SolutionCollector_SolutionCount_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SolutionCollector_HasSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_SolutionCollector_Solution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_SolutionCollector_LastSolutionOrNull_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_584 _wrap_SolutionCollector_WallTime_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_585 _wrap_SolutionCollector_Branches_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_586 _wrap_SolutionCollector_Failures_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_587 _wrap_SolutionCollector_ObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_588 _wrap_SolutionCollector_ObjectiveValueFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_type_589 _wrap_SolutionCollector_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_type_590 _wrap_SolutionCollector_StartValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_type_591 _wrap_SolutionCollector_EndValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_type_592 _wrap_SolutionCollector_DurationValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_type_593 _wrap_SolutionCollector_PerformedValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_type_594 _wrap_SolutionCollector_ForwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_type_595 _wrap_SolutionCollector_BackwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_type_596 _wrap_SolutionCollector_Unperformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_SolutionCollector_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SolutionCollector_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SolutionCollector_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SolutionCollector_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_SolutionCollector_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SolutionCollector_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SolutionCollector_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SolutionCollector_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SolutionCollector_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionCollector_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SolutionCollector_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_SolutionCollector_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SolutionCollector_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_SolutionCollector_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_ObjectiveMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_597 arg4);
extern void _wrap_delete_ObjectiveMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_ObjectiveMonitor_ObjectiveVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_ObjectiveMonitor_MinimizationVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_598 _wrap_ObjectiveMonitor_Step_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_ObjectiveMonitor_Maximize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_599 _wrap_ObjectiveMonitor_BestValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ObjectiveMonitor_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_ObjectiveMonitor_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_ObjectiveMonitor_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_ObjectiveMonitor_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_ObjectiveMonitor_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ObjectiveMonitor_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ObjectiveMonitor_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ObjectiveMonitor_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ObjectiveMonitor_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ObjectiveMonitor_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_ObjectiveMonitor_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ObjectiveMonitor_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ObjectiveMonitor_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ObjectiveMonitor_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_ObjectiveMonitor_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ObjectiveMonitor_Install_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_ObjectiveMonitor_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_600 _wrap_ObjectiveMonitor_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorOptimizeVarOptimizeVar__SWIG_0_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1, _Bool arg2, uintptr_t arg3, swig_type_601 arg4);
extern uintptr_t _wrap__swig_NewDirectorOptimizeVarOptimizeVar__SWIG_1_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_602 arg4);
extern void _wrap_DeleteDirectorOptimizeVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_603 _wrap__swig_DirectorOptimizeVar_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t db);
extern void _wrap__swig_DirectorOptimizeVar_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b, uintptr_t d);
extern void _wrap__swig_DirectorOptimizeVar_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorOptimizeVar_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorOptimizeVar_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d, _Bool apply);
extern void _wrap__swig_DirectorOptimizeVar_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorOptimizeVar_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorOptimizeVar_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorOptimizeVar_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorOptimizeVar_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern void _wrap__swig_DirectorOptimizeVar_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorOptimizeVar_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_intgo _wrap__swig_DirectorOptimizeVar_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorOptimizeVar_upcall_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t visitor);
extern void _wrap__swig_DirectorOptimizeVar_upcall_Install_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_type_604 _wrap__swig_DirectorOptimizeVar_upcall_Name_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern uintptr_t _wrap_new_OptimizeVar__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, uintptr_t arg3, swig_type_601 arg4);
extern uintptr_t _wrap_new_OptimizeVar__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_602 arg4);
extern swig_type_605 _wrap_OptimizeVar_Best_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_OptimizeVar_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_OptimizeVar_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_OptimizeVar_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_OptimizeVar_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_OptimizeVar_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_606 _wrap_OptimizeVar_Name_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_607 _wrap_OptimizeVar_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_OptimizeVar_ApplyBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_OptimizeVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_OptimizeVar_ObjectiveVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_intgo arg1);
extern uintptr_t _wrap_OptimizeVar_MinimizationVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_intgo arg1);
extern swig_type_608 _wrap_OptimizeVar_Step_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_intgo arg1);
extern _Bool _wrap_OptimizeVar_Maximize_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_intgo arg1);
extern swig_type_609 _wrap_OptimizeVar_BestValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_OptimizeVar_Size_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_OptimizeVar_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_OptimizeVar_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_OptimizeVar_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_OptimizeVar_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_OptimizeVar_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_OptimizeVar_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_OptimizeVar_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_OptimizeVar_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_OptimizeVar_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_OptimizeVar_Install_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_OptimizeVar_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorSearchLimitSearchLimit_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1);
extern void _wrap_DeleteDirectorSearchLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_610 _wrap__swig_DirectorSearchLimit_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b);
extern void _wrap__swig_DirectorSearchLimit_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b, uintptr_t d);
extern void _wrap__swig_DirectorSearchLimit_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorSearchLimit_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorSearchLimit_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d, _Bool apply);
extern void _wrap__swig_DirectorSearchLimit_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchLimit_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchLimit_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchLimit_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchLimit_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern void _wrap__swig_DirectorSearchLimit_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorSearchLimit_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_intgo _wrap__swig_DirectorSearchLimit_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorSearchLimit_upcall_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t visitor);
extern void _wrap__swig_DirectorSearchLimit_upcall_Install_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_delete_SearchLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchLimit_IsCrossed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchLimit_Check_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchLimit_CheckWithOffset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchLimit_Init_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLimit_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SearchLimit_MakeClone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLimit_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLimit_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchLimit_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLimit_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_611 _wrap_SearchLimit_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLimit_Install_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLimit_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLimit_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLimit_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchLimit_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SearchLimit_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_SearchLimit_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLimit_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLimit_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLimit_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLimit_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLimit_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLimit_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLimit_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLimit_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchLimit_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLimit_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLimit_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_SearchLimit_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLimit_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_SearchLimit_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorRegularLimitRegularLimit_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1, uintptr_t arg2, swig_type_612 arg3, swig_type_613 arg4, swig_type_614 arg5, _Bool arg6, _Bool arg7);
extern void _wrap_DeleteDirectorRegularLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_615 _wrap__swig_DirectorRegularLimit_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b);
extern void _wrap__swig_DirectorRegularLimit_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t b, uintptr_t d);
extern void _wrap__swig_DirectorRegularLimit_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorRegularLimit_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d);
extern void _wrap__swig_DirectorRegularLimit_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t d, _Bool apply);
extern void _wrap__swig_DirectorRegularLimit_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorRegularLimit_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorRegularLimit_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorRegularLimit_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorRegularLimit_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern void _wrap__swig_DirectorRegularLimit_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorRegularLimit_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_intgo _wrap__swig_DirectorRegularLimit_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t visitor);
extern void _wrap__swig_DirectorRegularLimit_upcall_Install_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorRegularLimit_upcall_CheckWithOffset_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t offset);
extern void _wrap__swig_DirectorRegularLimit_upcall_Init_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorRegularLimit_upcall_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t limit);
extern uintptr_t _wrap__swig_DirectorRegularLimit_upcall_MakeClone_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern uintptr_t _wrap_new_RegularLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_612 arg3, swig_type_613 arg4, swig_type_614 arg5, _Bool arg6, _Bool arg7);
extern void _wrap_delete_RegularLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RegularLimit_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RegularLimit_MakeClone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RegularLimit_MakeIdenticalClone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RegularLimit_CheckWithOffset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RegularLimit_Init_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RegularLimit_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RegularLimit_UpdateLimits_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_616 arg3, swig_type_617 arg4, swig_type_618 arg5);
extern swig_type_619 _wrap_RegularLimit_WallTime_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_620 _wrap_RegularLimit_Branches_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_621 _wrap_RegularLimit_Failures_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_622 _wrap_RegularLimit_Solutions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RegularLimit_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RegularLimit_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_623 _wrap_RegularLimit_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RegularLimit_Install_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RegularLimit_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_RegularLimit_IsCrossed_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_RegularLimit_Check_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_RegularLimit_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_RegularLimit_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RegularLimit_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_RegularLimit_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_RegularLimit_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_RegularLimit_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_RegularLimit_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_RegularLimit_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_RegularLimit_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RegularLimit_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_RegularLimit_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_RegularLimit_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_ImprovementSearchLimit__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3, double arg4, double arg5, double arg6, swig_intgo arg7);
extern uintptr_t _wrap_new_ImprovementSearchLimit__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, double arg6, swig_intgo arg7);
extern void _wrap_delete_ImprovementSearchLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_ImprovementSearchLimit_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ImprovementSearchLimit_MakeClone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_ImprovementSearchLimit_CheckWithOffset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_ImprovementSearchLimit_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_ImprovementSearchLimit_Init_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_ImprovementSearchLimit_Install_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_ImprovementSearchLimit_IsCrossed_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ImprovementSearchLimit_Check_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ImprovementSearchLimit_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_624 _wrap_ImprovementSearchLimit_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ImprovementSearchLimit_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ImprovementSearchLimit_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_ImprovementSearchLimit_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ImprovementSearchLimit_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ImprovementSearchLimit_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ImprovementSearchLimit_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ImprovementSearchLimit_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ImprovementSearchLimit_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_ImprovementSearchLimit_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ImprovementSearchLimit_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_ImprovementSearchLimit_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_625 _wrap_IntervalVar_kMinValidValue_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_626 _wrap_IntervalVar_kMaxValidValue_get_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_IntervalVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_627 _wrap_IntervalVar_StartMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_628 _wrap_IntervalVar_StartMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVar_SetStartMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_629 arg2);
extern void _wrap_IntervalVar_SetStartMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_630 arg2);
extern void _wrap_IntervalVar_SetStartRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_631 arg2, swig_type_632 arg3);
extern swig_type_633 _wrap_IntervalVar_OldStartMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_634 _wrap_IntervalVar_OldStartMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVar_WhenStartRange__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenStartRange__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenStartBound__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenStartBound__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_635 _wrap_IntervalVar_DurationMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_636 _wrap_IntervalVar_DurationMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVar_SetDurationMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_637 arg2);
extern void _wrap_IntervalVar_SetDurationMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_638 arg2);
extern void _wrap_IntervalVar_SetDurationRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_639 arg2, swig_type_640 arg3);
extern swig_type_641 _wrap_IntervalVar_OldDurationMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_642 _wrap_IntervalVar_OldDurationMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVar_WhenDurationRange__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenDurationRange__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenDurationBound__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenDurationBound__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_643 _wrap_IntervalVar_EndMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_644 _wrap_IntervalVar_EndMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVar_SetEndMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_645 arg2);
extern void _wrap_IntervalVar_SetEndMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_646 arg2);
extern void _wrap_IntervalVar_SetEndRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_647 arg2, swig_type_648 arg3);
extern swig_type_649 _wrap_IntervalVar_OldEndMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_650 _wrap_IntervalVar_OldEndMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVar_WhenEndRange__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenEndRange__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenEndBound__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenEndBound__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_IntervalVar_MustBePerformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntervalVar_MayBePerformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntervalVar_CannotBePerformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntervalVar_IsPerformedBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVar_SetPerformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IntervalVar_WasPerformedBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVar_WhenPerformedBound__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenPerformedBound__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenAnything__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntervalVar_WhenAnything__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_StartExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntervalVar_DurationExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntervalVar_EndExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntervalVar_PerformedExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntervalVar_SafeStartExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_651 arg2);
extern uintptr_t _wrap_IntervalVar_SafeDurationExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_652 arg2);
extern uintptr_t _wrap_IntervalVar_SafeEndExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_653 arg2);
extern void _wrap_IntervalVar_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_EndsAfterEnd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_EndsAfterStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_EndsAtEnd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_EndsAtStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_StartsAfterEnd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_StartsAfterStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_StartsAtEnd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_StartsAtStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVar_EndsAfterEndWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_654 arg3);
extern uintptr_t _wrap_IntervalVar_EndsAfterStartWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_655 arg3);
extern uintptr_t _wrap_IntervalVar_EndsAtEndWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_656 arg3);
extern uintptr_t _wrap_IntervalVar_EndsAtStartWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_657 arg3);
extern uintptr_t _wrap_IntervalVar_StartsAfterEndWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_658 arg3);
extern uintptr_t _wrap_IntervalVar_StartsAfterStartWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_659 arg3);
extern uintptr_t _wrap_IntervalVar_StartsAtEndWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_660 arg3);
extern uintptr_t _wrap_IntervalVar_StartsAtStartWithDelay_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_661 arg3);
extern uintptr_t _wrap_IntervalVar_EndsAfter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_662 arg2);
extern uintptr_t _wrap_IntervalVar_EndsAt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_663 arg2);
extern uintptr_t _wrap_IntervalVar_EndsBefore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_664 arg2);
extern uintptr_t _wrap_IntervalVar_StartsAfter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_665 arg2);
extern uintptr_t _wrap_IntervalVar_StartsAt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_666 arg2);
extern uintptr_t _wrap_IntervalVar_StartsBefore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_667 arg2);
extern uintptr_t _wrap_IntervalVar_CrossesDate_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_668 arg2);
extern uintptr_t _wrap_IntervalVar_AvoidsDate_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_669 arg2);
extern uintptr_t _wrap_IntervalVar_RelaxedMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntervalVar_RelaxedMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_670 _wrap_IntervalVar_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_IntervalVar_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntervalVar_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntervalVar_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntervalVar_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_IntervalVar_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_IntervalVar_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntervalVar_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_671 _wrap_IntervalVar_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntervalVar_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_IntervalVar_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_672 _wrap_IntervalVar_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_SequenceVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_673 arg4);
extern void _wrap_delete_SequenceVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_674 _wrap_SequenceVar_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVar_RankFirst_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SequenceVar_RankNotFirst_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SequenceVar_RankLast_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SequenceVar_RankNotLast_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SequenceVar_RankSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_675 arg2, swig_type_676 arg3, swig_type_677 arg4);
extern uintptr_t _wrap_SequenceVar_Interval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_SequenceVar_Next_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_678 _wrap_SequenceVar_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVar_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SequenceVar_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SequenceVar_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SequenceVar_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SequenceVar_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SequenceVar_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SequenceVar_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SequenceVar_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_679 _wrap_SequenceVar_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SequenceVar_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_SequenceVar_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_680 _wrap_SequenceVar_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_AssignmentElement_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_AssignmentElement_Activate_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentElement_Deactivate_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_AssignmentElement_Activated_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_AssignmentElement_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_IntVarElement__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_IntVarElement__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarElement_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntVarElement_Clone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarElement_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntVarElement_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarElement_Store_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarElement_Restore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_681 _wrap_IntVarElement_Min_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarElement_SetMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_682 arg2);
extern swig_type_683 _wrap_IntVarElement_Max_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarElement_SetMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_684 arg2);
extern swig_type_685 _wrap_IntVarElement_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntVarElement_Bound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarElement_SetRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_686 arg2, swig_type_687 arg3);
extern void _wrap_IntVarElement_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_688 arg2);
extern swig_type_689 _wrap_IntVarElement_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_IntVarElement_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarElement_Activate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVarElement_Deactivate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_IntVarElement_Activated_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_IntervalVarElement__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_IntervalVarElement__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarElement_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVarElement_Clone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarElement_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IntervalVarElement_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarElement_Store_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarElement_Restore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_690 _wrap_IntervalVarElement_StartMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_691 _wrap_IntervalVarElement_StartMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_692 _wrap_IntervalVarElement_StartValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_693 _wrap_IntervalVarElement_DurationMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_694 _wrap_IntervalVarElement_DurationMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_695 _wrap_IntervalVarElement_DurationValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_696 _wrap_IntervalVarElement_EndMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_697 _wrap_IntervalVarElement_EndMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_698 _wrap_IntervalVarElement_EndValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_699 _wrap_IntervalVarElement_PerformedMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_700 _wrap_IntervalVarElement_PerformedMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_701 _wrap_IntervalVarElement_PerformedValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarElement_SetStartMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_702 arg2);
extern void _wrap_IntervalVarElement_SetStartMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_703 arg2);
extern void _wrap_IntervalVarElement_SetStartRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_704 arg2, swig_type_705 arg3);
extern void _wrap_IntervalVarElement_SetStartValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_706 arg2);
extern void _wrap_IntervalVarElement_SetDurationMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_707 arg2);
extern void _wrap_IntervalVarElement_SetDurationMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_708 arg2);
extern void _wrap_IntervalVarElement_SetDurationRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_709 arg2, swig_type_710 arg3);
extern void _wrap_IntervalVarElement_SetDurationValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_711 arg2);
extern void _wrap_IntervalVarElement_SetEndMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_712 arg2);
extern void _wrap_IntervalVarElement_SetEndMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_713 arg2);
extern void _wrap_IntervalVarElement_SetEndRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_714 arg2, swig_type_715 arg3);
extern void _wrap_IntervalVarElement_SetEndValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_716 arg2);
extern void _wrap_IntervalVarElement_SetPerformedMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_717 arg2);
extern void _wrap_IntervalVarElement_SetPerformedMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_718 arg2);
extern void _wrap_IntervalVarElement_SetPerformedRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_719 arg2, swig_type_720 arg3);
extern void _wrap_IntervalVarElement_SetPerformedValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_721 arg2);
extern _Bool _wrap_IntervalVarElement_Bound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_722 _wrap_IntervalVarElement_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_IntervalVarElement_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntervalVarElement_Activate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntervalVarElement_Deactivate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_IntervalVarElement_Activated_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_SequenceVarElement__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_SequenceVarElement__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarElement_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SequenceVarElement_Clone_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarElement_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SequenceVarElement_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarElement_Store_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarElement_Restore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_723 _wrap_SequenceVarElement_ForwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_724 _wrap_SequenceVarElement_BackwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_725 _wrap_SequenceVarElement_Unperformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarElement_SetSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_726 arg2, swig_type_727 arg3, swig_type_728 arg4);
extern void _wrap_SequenceVarElement_SetForwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_729 arg2);
extern void _wrap_SequenceVarElement_SetBackwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_730 arg2);
extern void _wrap_SequenceVarElement_SetUnperformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_731 arg2);
extern _Bool _wrap_SequenceVarElement_Bound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_732 _wrap_SequenceVarElement_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_SequenceVarElement_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SequenceVarElement_Activate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SequenceVarElement_Deactivate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SequenceVarElement_Activated_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_Assignment__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_Assignment__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_Assignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Assignment_Clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Assignment_Empty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Assignment_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Assignment_NumIntVars_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Assignment_NumIntervalVars_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Assignment_NumSequenceVars_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Assignment_Store_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Assignment_Restore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Assignment_AddObjective_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_AddObjectives_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_ClearObjective_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_Assignment_NumObjectives_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Assignment_Objective_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Assignment_ObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_Assignment_HasObjective_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Assignment_HasObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_733 _wrap_Assignment_ObjectiveMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_734 _wrap_Assignment_ObjectiveMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_735 _wrap_Assignment_ObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Assignment_ObjectiveBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Assignment_SetObjectiveMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_736 arg2);
extern void _wrap_Assignment_SetObjectiveMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_737 arg2);
extern void _wrap_Assignment_SetObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_738 arg2);
extern void _wrap_Assignment_SetObjectiveRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_739 arg2, swig_type_740 arg3);
extern swig_type_741 _wrap_Assignment_ObjectiveMinFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_742 _wrap_Assignment_ObjectiveMaxFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_743 _wrap_Assignment_ObjectiveValueFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_Assignment_ObjectiveBoundFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Assignment_SetObjectiveMinFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_type_744 arg3);
extern void _wrap_Assignment_SetObjectiveMaxFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_type_745 arg3);
extern void _wrap_Assignment_SetObjectiveValueFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_type_746 arg3);
extern void _wrap_Assignment_SetObjectiveRangeFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_type_747 arg3, swig_type_748 arg4);
extern uintptr_t _wrap_Assignment_Add__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Add__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Assignment_FastAdd__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_749 _wrap_Assignment_Min_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_750 _wrap_Assignment_Max_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_751 _wrap_Assignment_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Assignment_Bound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_SetMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_752 arg3);
extern void _wrap_Assignment_SetMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_753 arg3);
extern void _wrap_Assignment_SetRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_754 arg3, swig_type_755 arg4);
extern void _wrap_Assignment_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_756 arg3);
extern uintptr_t _wrap_Assignment_Add__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Add__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Assignment_FastAdd__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_757 _wrap_Assignment_StartMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_758 _wrap_Assignment_StartMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_759 _wrap_Assignment_StartValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_760 _wrap_Assignment_DurationMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_761 _wrap_Assignment_DurationMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_762 _wrap_Assignment_DurationValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_763 _wrap_Assignment_EndMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_764 _wrap_Assignment_EndMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_765 _wrap_Assignment_EndValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_766 _wrap_Assignment_PerformedMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_767 _wrap_Assignment_PerformedMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_768 _wrap_Assignment_PerformedValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_SetStartMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_769 arg3);
extern void _wrap_Assignment_SetStartMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_770 arg3);
extern void _wrap_Assignment_SetStartRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_771 arg3, swig_type_772 arg4);
extern void _wrap_Assignment_SetStartValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_773 arg3);
extern void _wrap_Assignment_SetDurationMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_774 arg3);
extern void _wrap_Assignment_SetDurationMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_775 arg3);
extern void _wrap_Assignment_SetDurationRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_776 arg3, swig_type_777 arg4);
extern void _wrap_Assignment_SetDurationValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_778 arg3);
extern void _wrap_Assignment_SetEndMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_779 arg3);
extern void _wrap_Assignment_SetEndMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_780 arg3);
extern void _wrap_Assignment_SetEndRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_781 arg3, swig_type_782 arg4);
extern void _wrap_Assignment_SetEndValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_783 arg3);
extern void _wrap_Assignment_SetPerformedMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_784 arg3);
extern void _wrap_Assignment_SetPerformedMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_785 arg3);
extern void _wrap_Assignment_SetPerformedRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_786 arg3, swig_type_787 arg4);
extern void _wrap_Assignment_SetPerformedValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_788 arg3);
extern uintptr_t _wrap_Assignment_Add__SWIG_4_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Add__SWIG_5_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Assignment_FastAdd__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_789 _wrap_Assignment_ForwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_790 _wrap_Assignment_BackwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_791 _wrap_Assignment_Unperformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_SetSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_792 arg3, swig_type_793 arg4, swig_type_794 arg5);
extern void _wrap_Assignment_SetForwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_795 arg3);
extern void _wrap_Assignment_SetBackwardSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_796 arg3);
extern void _wrap_Assignment_SetUnperformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_797 arg3);
extern void _wrap_Assignment_Activate__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Deactivate__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Assignment_Activated__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Activate__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Deactivate__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Assignment_Activated__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Activate__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Deactivate__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Assignment_Activated__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_ActivateObjective_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Assignment_DeactivateObjective_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Assignment_ActivatedObjective_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Assignment_ActivateObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Assignment_DeactivateObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_Assignment_ActivatedObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_798 _wrap_Assignment_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Assignment_AreAllElementsBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Assignment_Contains__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Assignment_Contains__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Assignment_Contains__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_CopyIntersection_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Assignment_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Assignment_IntVarContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Assignment_MutableIntVarContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Assignment_IntervalVarContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Assignment_MutableIntervalVarContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Assignment_SequenceVarContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Assignment_MutableSequenceVarContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_Assignment_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Assignment_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Assignment_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Assignment_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Assignment_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Assignment_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Assignment_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_799 _wrap_Assignment_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Assignment_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_Assignment_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_800 _wrap_Assignment_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SetAssignmentFromAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_new_Pack_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_delete_Pack_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Pack_AddWeightedSumLessOrEqualConstantDimension__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_801 arg2, swig_type_802 arg3);
extern void _wrap_Pack_AddWeightedSumLessOrEqualConstantDimension__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_803 arg3);
extern void _wrap_Pack_AddWeightedSumLessOrEqualConstantDimension__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_804 arg3);
extern void _wrap_Pack_AddWeightedSumEqualVarDimension__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_805 arg2, uintptr_t arg3);
extern void _wrap_Pack_AddWeightedSumEqualVarDimension__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Pack_AddSumVariableWeightsLessOrEqualConstantDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_806 arg3);
extern void _wrap_Pack_AddWeightedSumOfAssignedDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_807 arg2, uintptr_t arg3);
extern void _wrap_Pack_AddCountUsedBinDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Pack_AddCountAssignedItemsDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Pack_Post_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Pack_ClearAll_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Pack_PropagateDelayed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Pack_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Pack_Propagate_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Pack_OneDomain_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_808 _wrap_Pack_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_Pack_IsUndecided_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_Pack_SetImpossible_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_Pack_Assign_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern _Bool _wrap_Pack_IsAssignedStatusKnown_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_Pack_IsPossible_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern uintptr_t _wrap_Pack_AssignVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_Pack_SetAssigned_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Pack_SetUnassigned_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Pack_RemoveAllPossibleFromBin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Pack_AssignAllPossibleToBin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Pack_AssignFirstPossibleToBin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Pack_AssignAllRemainingItems_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Pack_UnassignAllRemainingItems_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_Pack_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Pack_IsCastConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_Pack_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_Pack_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Pack_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Pack_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Pack_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Pack_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Pack_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Pack_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_809 _wrap_Pack_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_Pack_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_Pack_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_810 _wrap_Pack_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_DisjunctiveConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_DisjunctiveConstraint_SequenceVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_DisjunctiveConstraint_SetTransitionTime_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_811 _wrap_DisjunctiveConstraint_TransitionTime_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_DisjunctiveConstraint_Post_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_DisjunctiveConstraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_812 _wrap_DisjunctiveConstraint_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_DisjunctiveConstraint_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_DisjunctiveConstraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_DisjunctiveConstraint_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_DisjunctiveConstraint_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_DisjunctiveConstraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_DisjunctiveConstraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_DisjunctiveConstraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_DisjunctiveConstraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_DisjunctiveConstraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_DisjunctiveConstraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_813 _wrap_DisjunctiveConstraint_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_DisjunctiveConstraint_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_DisjunctiveConstraint_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_814 _wrap_DisjunctiveConstraint_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_SolutionPool_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SolutionPool_Initialize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionPool_RegisterNewSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolutionPool_GetNextSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_SolutionPool_SyncNeeded_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_815 _wrap_SolutionPool_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_BaseIntExpr_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_BaseIntExpr_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_BaseIntExpr_CastToVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_816 _wrap_BaseIntExpr_Min_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BaseIntExpr_SetMin_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_570 arg1);
extern swig_type_817 _wrap_BaseIntExpr_Max_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BaseIntExpr_SetMax_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_572 arg1);
extern void _wrap_BaseIntExpr_Range_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_573 arg1, swig_type_574 arg2);
extern void _wrap_BaseIntExpr_SetRange_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_575 arg1, swig_type_576 arg2);
extern void _wrap_BaseIntExpr_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_577 arg1);
extern _Bool _wrap_BaseIntExpr_Bound_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_BaseIntExpr_IsVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_BaseIntExpr_VarWithName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_578 arg1);
extern void _wrap_BaseIntExpr_WhenRange__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_BaseIntExpr_WhenRange__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_BaseIntExpr_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_818 _wrap_BaseIntExpr_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_BaseIntExpr_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BaseIntExpr_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BaseIntExpr_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BaseIntExpr_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_BaseIntExpr_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_BaseIntExpr_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BaseIntExpr_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_819 _wrap_BaseIntExpr_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BaseIntExpr_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_BaseIntExpr_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_820 _wrap_BaseIntExpr_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_UNSPECIFIED_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_DOMAIN_INT_VAR_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_BOOLEAN_VAR_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CONST_VAR_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ADD_CST_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_TIMES_CST_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_CST_SUB_VAR_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_OPP_VAR_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_TRACE_VAR_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap__swig_NewDirectorLocalSearchOperatorLocalSearchOperator_constraintsolver_e5a2167dd134d32d(int);
extern void _wrap_DeleteDirectorLocalSearchOperator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_821 _wrap__swig_DirectorLocalSearchOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorLocalSearchOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorLocalSearchOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorLocalSearchOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_delete_LocalSearchOperator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_LocalSearchOperator_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_LocalSearchOperator_Start_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LocalSearchOperator_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_LocalSearchOperator_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_LocalSearchOperator_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_822 _wrap_LocalSearchOperator_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_LocalSearchOperatorState_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_LocalSearchOperatorState_SetCurrentDomainInjectiveAndKeepInverseValues_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_823 _wrap_LocalSearchOperatorState_CandidateValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_824 arg2);
extern swig_type_825 _wrap_LocalSearchOperatorState_CommittedValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_826 arg2);
extern swig_type_827 _wrap_LocalSearchOperatorState_CheckPointValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_828 arg2);
extern void _wrap_LocalSearchOperatorState_SetCandidateValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_829 arg2, swig_type_830 arg3);
extern _Bool _wrap_LocalSearchOperatorState_CandidateIsActive_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_831 arg2);
extern void _wrap_LocalSearchOperatorState_SetCandidateActive_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_832 arg2, _Bool arg3);
extern void _wrap_LocalSearchOperatorState_Commit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchOperatorState_CheckPoint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchOperatorState_Revert_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern swig_type_833 _wrap_LocalSearchOperatorState_CandidateIndicesChanged_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_834 _wrap_LocalSearchOperatorState_IncrementalIndicesChanged_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchOperatorState_Resize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_835 _wrap_LocalSearchOperatorState_CandidateInverseValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_836 arg2);
extern swig_type_837 _wrap_LocalSearchOperatorState_CommittedInverseValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_838 arg2);
extern void _wrap_delete_LocalSearchOperatorState_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorIntVarLocalSearchOperatorIntVarLocalSearchOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap__swig_NewDirectorIntVarLocalSearchOperatorIntVarLocalSearchOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1);
extern void _wrap_DeleteDirectorIntVarLocalSearchOperator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_839 _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_Start_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t assignment);
extern void _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_SkipUnchanged_constraintsolver_e5a2167dd134d32d(uintptr_t, swig_intgo index);
extern void _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_OnStart_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorIntVarLocalSearchOperator_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern uintptr_t _wrap_new_IntVarLocalSearchOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_new_IntVarLocalSearchOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_IntVarLocalSearchOperator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_IntVarLocalSearchOperator_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarLocalSearchOperator_Start_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_IntVarLocalSearchOperator_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_IntVarLocalSearchOperator_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_840 _wrap_IntVarLocalSearchOperator_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_841 arg2);
extern uintptr_t _wrap_IntVarLocalSearchOperator_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_842 arg2);
extern _Bool _wrap_IntVarLocalSearchOperator_SkipUnchanged_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_843 _wrap_IntVarLocalSearchOperator_OldValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_844 arg2);
extern swig_type_845 _wrap_IntVarLocalSearchOperator_PrevValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_846 arg2);
extern void _wrap_IntVarLocalSearchOperator_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_847 arg2, swig_type_848 arg3);
extern _Bool _wrap_IntVarLocalSearchOperator_Activated_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_849 arg2);
extern void _wrap_IntVarLocalSearchOperator_Activate_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_850 arg2);
extern void _wrap_IntVarLocalSearchOperator_Deactivate_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_851 arg2);
extern _Bool _wrap_IntVarLocalSearchOperator_ApplyChanges_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_IntVarLocalSearchOperator_RevertChanges_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern void _wrap_IntVarLocalSearchOperator_AddVars_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntVarLocalSearchOperator_OnStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarLocalSearchOperator_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_IntVarLocalSearchOperator_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_852 _wrap_IntVarLocalSearchOperator_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorBaseLnsBaseLns_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1);
extern void _wrap_DeleteDirectorBaseLns_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_853 _wrap__swig_DirectorBaseLns_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorBaseLns_upcall_Start_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t assignment);
extern void _wrap__swig_DirectorBaseLns_upcall_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorBaseLns_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorBaseLns_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorBaseLns_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorBaseLns_upcall_InitFragments_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_delete_BaseLns_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_BaseLns_InitFragments_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_BaseLns_NextFragment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_BaseLns_AppendToFragment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_BaseLns_FragmentSize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_BaseLns_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_BaseLns_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BaseLns_Start_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_BaseLns_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_BaseLns_Size_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_854 _wrap_BaseLns_Value_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_855 arg1);
extern uintptr_t _wrap_BaseLns_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_856 arg1);
extern _Bool _wrap_BaseLns_SkipUnchanged_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_intgo arg1);
extern swig_type_857 _wrap_BaseLns_OldValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_858 arg1);
extern swig_type_859 _wrap_BaseLns_PrevValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_860 arg1);
extern void _wrap_BaseLns_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_861 arg1, swig_type_862 arg2);
extern _Bool _wrap_BaseLns_Activated_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_863 arg1);
extern void _wrap_BaseLns_Activate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_864 arg1);
extern void _wrap_BaseLns_Deactivate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_865 arg1);
extern _Bool _wrap_BaseLns_ApplyChanges_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_BaseLns_RevertChanges_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, _Bool arg1);
extern void _wrap_BaseLns_AddVars_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_BaseLns_OnStart_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_BaseLns_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_BaseLns_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_866 _wrap_BaseLns_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorChangeValueChangeValue_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1);
extern void _wrap_DeleteDirectorChangeValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_867 _wrap__swig_DirectorChangeValue_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorChangeValue_upcall_Start_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t assignment);
extern void _wrap__swig_DirectorChangeValue_upcall_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorChangeValue_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorChangeValue_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorChangeValue_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorChangeValue_upcall_SkipUnchanged_constraintsolver_e5a2167dd134d32d(uintptr_t, swig_intgo index);
extern void _wrap__swig_DirectorChangeValue_upcall_OnStart_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorChangeValue_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_delete_ChangeValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_868 _wrap_ChangeValue_ModifyValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_869 arg2, swig_type_870 arg3);
extern _Bool _wrap_ChangeValue_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_ChangeValue_Start_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_ChangeValue_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_ChangeValue_Size_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_871 _wrap_ChangeValue_Value_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_855 arg1);
extern uintptr_t _wrap_ChangeValue_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_856 arg1);
extern _Bool _wrap_ChangeValue_SkipUnchanged_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_intgo arg1);
extern swig_type_872 _wrap_ChangeValue_OldValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_858 arg1);
extern swig_type_873 _wrap_ChangeValue_PrevValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_860 arg1);
extern void _wrap_ChangeValue_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_861 arg1, swig_type_862 arg2);
extern _Bool _wrap_ChangeValue_Activated_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_863 arg1);
extern void _wrap_ChangeValue_Activate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_864 arg1);
extern void _wrap_ChangeValue_Deactivate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_865 arg1);
extern _Bool _wrap_ChangeValue_ApplyChanges_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ChangeValue_RevertChanges_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, _Bool arg1);
extern void _wrap_ChangeValue_AddVars_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ChangeValue_OnStart_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ChangeValue_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ChangeValue_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_ChangeValue_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_874 _wrap_ChangeValue_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_DeleteDirectorPathOperator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_875 _wrap__swig_DirectorPathOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorPathOperator_upcall_Start_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t assignment);
extern void _wrap__swig_DirectorPathOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorPathOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorPathOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorPathOperator_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorPathOperator_upcall_OnStart_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorPathOperator_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorPathOperator_upcall_OnNodeInitialization_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorPathOperator_upcall_RestartAtPathStartOnSynchronize_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern _Bool _wrap__swig_DirectorPathOperator_upcall_OnSamePathAsPreviousBase_constraintsolver_e5a2167dd134d32d(uintptr_t, swig_type_876 base_index);
extern swig_type_877 _wrap__swig_DirectorPathOperator_upcall_GetBaseNodeRestartPosition_constraintsolver_e5a2167dd134d32d(uintptr_t, swig_intgo base_index);
extern void _wrap__swig_DirectorPathOperator_upcall_SetNextBaseToIncrement_constraintsolver_e5a2167dd134d32d(uintptr_t, swig_type_878 base_index);
extern _Bool _wrap__swig_DirectorPathOperator_upcall_ConsiderAlternatives_constraintsolver_e5a2167dd134d32d(uintptr_t, swig_type_879 base_index);
extern _Bool _wrap__swig_DirectorPathOperator_upcall_InitPosition_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_delete_PathOperator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_PathOperator_MakeNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PathOperator_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_880 _wrap_PathOperator_Prev_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_881 arg2);
extern _Bool _wrap_PathOperator_HoldsDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PathOperator_Start_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_PathOperator_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_PathOperator_Size_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_882 _wrap_PathOperator_Value_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_855 arg1);
extern uintptr_t _wrap_PathOperator_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_856 arg1);
extern swig_type_883 _wrap_PathOperator_OldValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_858 arg1);
extern swig_type_884 _wrap_PathOperator_PrevValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_860 arg1);
extern void _wrap_PathOperator_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_861 arg1, swig_type_862 arg2);
extern _Bool _wrap_PathOperator_Activated_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_863 arg1);
extern void _wrap_PathOperator_Activate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_864 arg1);
extern void _wrap_PathOperator_Deactivate_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_865 arg1);
extern _Bool _wrap_PathOperator_ApplyChanges_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PathOperator_RevertChanges_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, _Bool arg1);
extern void _wrap_PathOperator_AddVars_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_PathOperator_OnStart_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_PathOperator_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_PathOperator_HasFragments_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_885 _wrap_PathOperator_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap__swig_NewDirectorLocalSearchFilterLocalSearchFilter_constraintsolver_e5a2167dd134d32d(int);
extern void _wrap_DeleteDirectorLocalSearchFilter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_886 _wrap__swig_DirectorLocalSearchFilter_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorLocalSearchFilter_upcall_Relax_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern void _wrap__swig_DirectorLocalSearchFilter_upcall_Commit_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern _Bool _wrap__swig_DirectorLocalSearchFilter_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorLocalSearchFilter_upcall_Revert_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorLocalSearchFilter_upcall_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_type_887 _wrap__swig_DirectorLocalSearchFilter_upcall_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_type_888 _wrap__swig_DirectorLocalSearchFilter_upcall_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap_LocalSearchFilter_Relax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_LocalSearchFilter_Commit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_LocalSearchFilter_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_889 arg4, swig_type_890 arg5);
extern _Bool _wrap_LocalSearchFilter_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchFilter_Synchronize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_LocalSearchFilter_Revert_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchFilter_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_891 _wrap_LocalSearchFilter_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_892 _wrap_LocalSearchFilter_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_LocalSearchFilter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_893 _wrap_LocalSearchFilter_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_kAccept_LocalSearchFilterManager_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_kRelax_LocalSearchFilterManager_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_894 _wrap_LocalSearchFilterManager_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_LocalSearchFilterManager__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_LocalSearchFilterManager__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchFilterManager_Revert_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_LocalSearchFilterManager_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_type_895 arg5, swig_type_896 arg6);
extern void _wrap_LocalSearchFilterManager_Synchronize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_type_897 _wrap_LocalSearchFilterManager_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_898 _wrap_LocalSearchFilterManager_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_LocalSearchFilterManager_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorIntVarLocalSearchFilterIntVarLocalSearchFilter_constraintsolver_e5a2167dd134d32d(int, uintptr_t arg1);
extern void _wrap_DeleteDirectorIntVarLocalSearchFilter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_899 _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Relax_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern void _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Commit_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta, uintptr_t deltadelta);
extern _Bool _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Revert_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_type_900 _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern swig_type_901 _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t);
extern void _wrap__swig_DirectorIntVarLocalSearchFilter_upcall_OnSynchronize_constraintsolver_e5a2167dd134d32d(uintptr_t, uintptr_t delta);
extern void _wrap_delete_IntVarLocalSearchFilter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_IntVarLocalSearchFilter_Synchronize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_IntVarLocalSearchFilter_AddVars_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_IntVarLocalSearchFilter_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_IntVarLocalSearchFilter_Var_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_902 _wrap_IntVarLocalSearchFilter_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_IntVarLocalSearchFilter_Index_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntVarLocalSearchFilter_Relax_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_IntVarLocalSearchFilter_Commit_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_IntVarLocalSearchFilter_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, swig_type_903 arg3, swig_type_904 arg4);
extern _Bool _wrap_IntVarLocalSearchFilter_IsIncremental_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVarLocalSearchFilter_Revert_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_IntVarLocalSearchFilter_Reset_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_905 _wrap_IntVarLocalSearchFilter_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_906 _wrap_IntVarLocalSearchFilter_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_907 _wrap_IntVarLocalSearchFilter_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_PropagationMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_908 _wrap_PropagationMonitor_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PropagationMonitor_BeginConstraintInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_EndConstraintInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_BeginNestedConstraintInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_PropagationMonitor_EndNestedConstraintInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_PropagationMonitor_RegisterDemon_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_BeginDemonRun_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_EndDemonRun_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_StartProcessingIntegerVariable_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_EndProcessingIntegerVariable_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_PushContext_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_909 arg2);
extern void _wrap_PropagationMonitor_PopContext_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PropagationMonitor_SetMin__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_910 arg3);
extern void _wrap_PropagationMonitor_SetMax__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_911 arg3);
extern void _wrap_PropagationMonitor_SetRange__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_912 arg3, swig_type_913 arg4);
extern void _wrap_PropagationMonitor_SetMin__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_914 arg3);
extern void _wrap_PropagationMonitor_SetMax__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_915 arg3);
extern void _wrap_PropagationMonitor_SetRange__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_916 arg3, swig_type_917 arg4);
extern void _wrap_PropagationMonitor_RemoveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_918 arg3);
extern void _wrap_PropagationMonitor_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_919 arg3);
extern void _wrap_PropagationMonitor_RemoveInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_920 arg3, swig_type_921 arg4);
extern void _wrap_PropagationMonitor_SetValues_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_922 arg3);
extern void _wrap_PropagationMonitor_RemoveValues_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_923 arg3);
extern void _wrap_PropagationMonitor_SetStartMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_924 arg3);
extern void _wrap_PropagationMonitor_SetStartMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_925 arg3);
extern void _wrap_PropagationMonitor_SetStartRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_926 arg3, swig_type_927 arg4);
extern void _wrap_PropagationMonitor_SetEndMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_928 arg3);
extern void _wrap_PropagationMonitor_SetEndMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_929 arg3);
extern void _wrap_PropagationMonitor_SetEndRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_930 arg3, swig_type_931 arg4);
extern void _wrap_PropagationMonitor_SetDurationMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_932 arg3);
extern void _wrap_PropagationMonitor_SetDurationMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_933 arg3);
extern void _wrap_PropagationMonitor_SetDurationRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_934 arg3, swig_type_935 arg4);
extern void _wrap_PropagationMonitor_SetPerformed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_PropagationMonitor_RankFirst_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_PropagationMonitor_RankNotFirst_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_PropagationMonitor_RankLast_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_PropagationMonitor_RankNotLast_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_PropagationMonitor_RankSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_936 arg3, swig_type_937 arg4, swig_type_938 arg5);
extern void _wrap_PropagationMonitor_Install_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_PropagationMonitor_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_PropagationMonitor_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_PropagationMonitor_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_PropagationMonitor_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_PropagationMonitor_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_PropagationMonitor_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_PropagationMonitor_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_PropagationMonitor_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_PropagationMonitor_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_PropagationMonitor_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_PropagationMonitor_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_PropagationMonitor_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_PropagationMonitor_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_PropagationMonitor_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_LocalSearchMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_939 _wrap_LocalSearchMonitor_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchMonitor_BeginOperatorStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchMonitor_EndOperatorStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchMonitor_BeginMakeNextNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LocalSearchMonitor_EndMakeNextNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3, uintptr_t arg4, uintptr_t arg5);
extern void _wrap_LocalSearchMonitor_BeginFilterNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LocalSearchMonitor_EndFilterNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_LocalSearchMonitor_BeginAcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LocalSearchMonitor_EndAcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_LocalSearchMonitor_BeginFiltering_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LocalSearchMonitor_EndFiltering_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern _Bool _wrap_LocalSearchMonitor_IsActive_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchMonitor_Install_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_LocalSearchMonitor_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_LocalSearchMonitor_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LocalSearchMonitor_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_LocalSearchMonitor_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_LocalSearchMonitor_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_LocalSearchMonitor_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_LocalSearchMonitor_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_LocalSearchMonitor_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_LocalSearchMonitor_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_LocalSearchMonitor_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LocalSearchMonitor_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_LocalSearchMonitor_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_LocalSearchMonitor_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_LocalSearchMonitor_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_LocalSearchMonitor_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_BooleanVar_kUnboundBooleanVarValue_get_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_BooleanVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_940 _wrap_BooleanVar_Min_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_BooleanVar_SetMin_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_941 arg2);
extern swig_type_942 _wrap_BooleanVar_Max_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_BooleanVar_SetMax_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_943 arg2);
extern void _wrap_BooleanVar_SetRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_944 arg2, swig_type_945 arg3);
extern _Bool _wrap_BooleanVar_Bound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_946 _wrap_BooleanVar_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_BooleanVar_RemoveValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_947 arg2);
extern void _wrap_BooleanVar_RemoveInterval_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_948 arg2, swig_type_949 arg3);
extern void _wrap_BooleanVar_WhenBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_BooleanVar_WhenRange_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_BooleanVar_WhenDomain_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_950 _wrap_BooleanVar_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_BooleanVar_Contains_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_951 arg2);
extern swig_type_952 _wrap_BooleanVar_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_BooleanVar_VarType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_BooleanVar_IsEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_953 arg2);
extern uintptr_t _wrap_BooleanVar_IsDifferent_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_954 arg2);
extern uintptr_t _wrap_BooleanVar_IsGreaterOrEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_955 arg2);
extern uintptr_t _wrap_BooleanVar_IsLessOrEqual_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_956 arg2);
extern void _wrap_BooleanVar_RestoreValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_957 _wrap_BooleanVar_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_BooleanVar_RawValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_BooleanVar_IsVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_BooleanVar_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BooleanVar_RemoveValues_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_958 arg1);
extern void _wrap_BooleanVar_SetValues_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_959 arg1);
extern swig_type_960 _wrap_BooleanVar_OldMin_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_961 _wrap_BooleanVar_OldMax_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BooleanVar_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_intgo _wrap_BooleanVar_Index_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_BooleanVar_GetDomain_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_BooleanVar_GetHoles_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BooleanVar_Range_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_573 arg1, swig_type_574 arg2);
extern void _wrap_BooleanVar_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_577 arg1);
extern uintptr_t _wrap_BooleanVar_VarWithName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, swig_type_578 arg1);
extern uintptr_t _wrap_BooleanVar_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BooleanVar_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BooleanVar_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BooleanVar_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_BooleanVar_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_BooleanVar_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BooleanVar_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_962 _wrap_BooleanVar_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BooleanVar_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_BooleanVar_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_SymmetryBreaker_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_SymmetryBreaker_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SymmetryBreaker_AddIntegerVariableEqualValueClause_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_963 arg3);
extern void _wrap_SymmetryBreaker_AddIntegerVariableGreaterOrEqualValueClause_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_964 arg3);
extern void _wrap_SymmetryBreaker_AddIntegerVariableLessOrEqualValueClause_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_965 arg3);
extern void _wrap_SymmetryBreaker_VisitSetVariableValue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, swig_type_966 arg2);
extern void _wrap_SymmetryBreaker_VisitSplitVariableDomain_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, swig_type_967 arg2, _Bool arg3);
extern void _wrap_SymmetryBreaker_VisitScheduleOrPostpone_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, swig_type_968 arg2);
extern void _wrap_SymmetryBreaker_VisitScheduleOrExpedite_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, swig_type_969 arg2);
extern void _wrap_SymmetryBreaker_VisitRankFirstInterval_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SymmetryBreaker_VisitRankLastInterval_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SymmetryBreaker_VisitUnknownDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_970 _wrap_SymmetryBreaker_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_SearchLog_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_971 arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, _Bool arg7, swig_intgo arg8);
extern void _wrap_delete_SearchLog_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_EnterSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_ExitSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_SearchLog_AtSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_BeginFail_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_ApplyDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchLog_RefuteDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchLog_OutputDecision_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_Maintain_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_972 _wrap_SearchLog_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_SearchLog_RestartSearch_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLog_BeginNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SearchLog_EndNextDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchLog_AfterDecision_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, _Bool arg2);
extern void _wrap_SearchLog_EndFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLog_AcceptSolution_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLog_LocalOptimum_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLog_AcceptDelta_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SearchLog_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern _Bool _wrap_SearchLog_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLog_PeriodicCheck_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_SearchLog_ProgressPercent_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_SearchLog_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SearchLog_Install_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_SearchLog_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_intgo _wrap_VOID_FALSE_CONSTRAINT_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VOID_TRUE_CONSTRAINT_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VOID_CONSTRAINT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_EQUALITY_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_GREATER_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_LESS_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_NON_EQUALITY_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_CONSTRAINT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_CONSTANT_BETWEEN_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_CONSTANT_CONSTRAINT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_EQUALITY_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_GREATER_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_GREATER_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_LESS_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_LESS_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_NON_EQUALITY_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_CONSTRAINT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_OPPOSITE_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_ABS_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_SQUARE_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_DIFFERENCE_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_PROD_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_DIV_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_MIN_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_SUM_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_IS_LESS_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_IS_LESS_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_IS_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_IS_NOT_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_CONSTANT_CONDITIONAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_EXPR_CONSTANT_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_DIFFERENCE_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_DIVIDE_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_PROD_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_MIN_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_SUM_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_IS_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_IS_NOT_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_IS_GREATER_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_IS_LESS_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_EXPR_CONSTANT_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_CONSTANT_SEMI_CONTINUOUS_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_CONSTANT_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_ARRAY_ELEMENT_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_CONSTANT_ARRAY_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ARRAY_CONSTANT_ARRAY_SCAL_PROD_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ARRAY_CONSTANT_ARRAY_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ARRAY_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ARRAY_MIN_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ARRAY_SUM_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ARRAY_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ARRAY_CONSTANT_INDEX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_VAR_ARRAY_CONSTANT_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_ModelCache_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_ModelCache_Clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_ModelCache_FindVoidConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_ModelCache_InsertVoidConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_ModelCache_FindVarConstantConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_973 arg3, swig_intgo arg4);
extern void _wrap_ModelCache_InsertVarConstantConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_974 arg4, swig_intgo arg5);
extern uintptr_t _wrap_ModelCache_FindVarConstantConstantConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_975 arg3, swig_type_976 arg4, swig_intgo arg5);
extern void _wrap_ModelCache_InsertVarConstantConstantConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_977 arg4, swig_type_978 arg5, swig_intgo arg6);
extern uintptr_t _wrap_ModelCache_FindExprExprConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern void _wrap_ModelCache_InsertExprExprConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern uintptr_t _wrap_ModelCache_FindExprExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_ModelCache_InsertExprExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_ModelCache_FindExprConstantExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_979 arg3, swig_intgo arg4);
extern void _wrap_ModelCache_InsertExprConstantExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_980 arg4, swig_intgo arg5);
extern uintptr_t _wrap_ModelCache_FindExprExprExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern void _wrap_ModelCache_InsertExprExprExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern uintptr_t _wrap_ModelCache_FindExprExprConstantExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_981 arg4, swig_intgo arg5);
extern void _wrap_ModelCache_InsertExprExprConstantExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_type_982 arg5, swig_intgo arg6);
extern uintptr_t _wrap_ModelCache_FindVarConstantConstantExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_983 arg3, swig_type_984 arg4, swig_intgo arg5);
extern void _wrap_ModelCache_InsertVarConstantConstantExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_985 arg4, swig_type_986 arg5, swig_intgo arg6);
extern uintptr_t _wrap_ModelCache_FindVarConstantArrayExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_987 arg3, swig_intgo arg4);
extern void _wrap_ModelCache_InsertVarConstantArrayExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_988 arg4, swig_intgo arg5);
extern uintptr_t _wrap_ModelCache_FindVarArrayExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_ModelCache_InsertVarArrayExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_ModelCache_FindVarArrayConstantArrayExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_989 arg3, swig_intgo arg4);
extern void _wrap_ModelCache_InsertVarArrayConstantArrayExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_990 arg4, swig_intgo arg5);
extern uintptr_t _wrap_ModelCache_FindVarArrayConstantExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_991 arg3, swig_intgo arg4);
extern void _wrap_ModelCache_InsertVarArrayConstantExpression_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_992 arg4, swig_intgo arg5);
extern uintptr_t _wrap_ModelCache_solver_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_RevPartialSequence__SWIG_0_constraintsolver_e5a2167dd134d32d(swig_type_993 arg1);
extern uintptr_t _wrap_new_RevPartialSequence__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_intgo arg1);
extern void _wrap_delete_RevPartialSequence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RevPartialSequence_NumFirstRanked_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RevPartialSequence_NumLastRanked_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RevPartialSequence_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RevPartialSequence_RankFirst_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_RevPartialSequence_RankLast_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern _Bool _wrap_RevPartialSequence_IsRanked_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_994 _wrap_RevPartialSequence_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_AreAllBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_AreAllBooleans_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_AreAllBoundTo_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_995 arg2);
extern swig_type_996 _wrap_MaxVarArray_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_997 _wrap_MinVarArray_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_998 _wrap_PosIntDivUp_constraintsolver_e5a2167dd134d32d(swig_type_999 arg1, swig_type_1000 arg2);
extern swig_type_1001 _wrap_PosIntDivDown_constraintsolver_e5a2167dd134d32d(swig_type_1002 arg1, swig_type_1003 arg2);
extern swig_type_1004 _wrap_ToInt64Vector_constraintsolver_e5a2167dd134d32d(swig_type_1005 arg1);
extern uintptr_t _wrap_new_RevInteger_constraintsolver_e5a2167dd134d32d(swig_type_1006 arg1);
extern swig_type_1007 _wrap_RevInteger_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RevInteger_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1008 arg3);
extern void _wrap_delete_RevInteger_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_RevBool_constraintsolver_e5a2167dd134d32d(_Bool arg1);
extern _Bool _wrap_RevBool_Value_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RevBool_SetValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_delete_RevBool_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_AssignmentIntContainer_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_AssignmentIntContainer_Add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentIntContainer_FastAdd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentIntContainer_AddAtPosition_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_AssignmentIntContainer_Clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentIntContainer_Resize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1009 arg2);
extern _Bool _wrap_AssignmentIntContainer_Empty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentIntContainer_CopyIntersection_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_AssignmentIntContainer_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_AssignmentIntContainer_Contains_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentIntContainer_Element__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentIntContainer_Element__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_AssignmentIntContainer_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentIntContainer_Store_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentIntContainer_Restore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_AssignmentIntContainer_AreAllElementsBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_AssignmentIntContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_AssignmentIntervalContainer_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_AssignmentIntervalContainer_Add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentIntervalContainer_FastAdd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentIntervalContainer_AddAtPosition_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_AssignmentIntervalContainer_Clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentIntervalContainer_Resize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1010 arg2);
extern _Bool _wrap_AssignmentIntervalContainer_Empty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentIntervalContainer_CopyIntersection_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_AssignmentIntervalContainer_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_AssignmentIntervalContainer_Contains_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentIntervalContainer_Element__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentIntervalContainer_Element__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_AssignmentIntervalContainer_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentIntervalContainer_Store_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentIntervalContainer_Restore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_AssignmentIntervalContainer_AreAllElementsBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_AssignmentIntervalContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_AssignmentSequenceContainer_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_AssignmentSequenceContainer_Add_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentSequenceContainer_FastAdd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentSequenceContainer_AddAtPosition_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_AssignmentSequenceContainer_Clear_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentSequenceContainer_Resize_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1011 arg2);
extern _Bool _wrap_AssignmentSequenceContainer_Empty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentSequenceContainer_CopyIntersection_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_AssignmentSequenceContainer_Copy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_AssignmentSequenceContainer_Contains_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentSequenceContainer_Element__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AssignmentSequenceContainer_Element__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_AssignmentSequenceContainer_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentSequenceContainer_Store_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AssignmentSequenceContainer_Restore_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_AssignmentSequenceContainer_AreAllElementsBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_AssignmentSequenceContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorRoutingTransitCallback1ImplRoutingTransitCallback1Impl_constraintsolver_e5a2167dd134d32d(int);
extern void _wrap_DeleteDirectorRoutingTransitCallback1Impl_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_RoutingTransitCallback1Impl_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1012 _wrap_RoutingTransitCallback1Impl_Call_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1013 arg2);
extern uintptr_t _wrap_new_RoutingTransitCallback1__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1014 _wrap_RoutingTransitCallback1_call_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1015 arg2);
extern uintptr_t _wrap_new_RoutingTransitCallback1__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_voidp arg1);
extern uintptr_t _wrap_new_RoutingTransitCallback1__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_RoutingTransitCallback1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorRoutingTransitCallback2ImplRoutingTransitCallback2Impl_constraintsolver_e5a2167dd134d32d(int);
extern void _wrap_DeleteDirectorRoutingTransitCallback2Impl_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_RoutingTransitCallback2Impl_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1016 _wrap_RoutingTransitCallback2Impl_Call_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1017 arg2, swig_type_1018 arg3);
extern uintptr_t _wrap_new_RoutingTransitCallback2__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1019 _wrap_RoutingTransitCallback2_call_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1020 arg2, swig_type_1021 arg3);
extern uintptr_t _wrap_new_RoutingTransitCallback2__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_voidp arg1);
extern uintptr_t _wrap_new_RoutingTransitCallback2__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_RoutingTransitCallback2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorAtSolutionCallbackImplAtSolutionCallbackImpl_constraintsolver_e5a2167dd134d32d(int);
extern void _wrap_DeleteDirectorAtSolutionCallbackImpl_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_AtSolutionCallbackImpl_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AtSolutionCallbackImpl_Call_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_AtSolutionCallback__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_AtSolutionCallback_call_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_AtSolutionCallback__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_voidp arg1);
extern uintptr_t _wrap_new_AtSolutionCallback__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_AtSolutionCallback_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_RoutingIndexManager_constraintsolver_e5a2167dd134d32d(swig_intgo arg1, swig_intgo arg2, swig_type_1022 arg3, swig_type_1023 arg4);
extern swig_intgo _wrap_RoutingIndexManager_GetNumberOfNodes_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RoutingIndexManager_GetNumberOfVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RoutingIndexManager_GetNumberOfIndices_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1024 _wrap_RoutingIndexManager_GetStartIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1025 _wrap_RoutingIndexManager_GetEndIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1026 _wrap_RoutingIndexManager_NodeToIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1027 _wrap_RoutingIndexManager_NodesToIndices_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1028 arg2);
extern swig_intgo _wrap_RoutingIndexManager_IndexToNode_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1029 arg2);
extern void _wrap_delete_RoutingIndexManager_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1030 _wrap_DefaultRoutingModelParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_1031 _wrap_DefaultRoutingSearchParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_1032 _wrap_DefaultSecondaryRoutingSearchParameters_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_1033 _wrap_FindErrorInRoutingSearchParameters_constraintsolver_e5a2167dd134d32d(swig_type_1034 arg1);
extern uintptr_t _wrap_FindErrorsInRoutingSearchParameters_constraintsolver_e5a2167dd134d32d(swig_type_1035 arg1);
extern uintptr_t _wrap_new_PathsMetadata_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_PathsMetadata_IsStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1036 arg2);
extern _Bool _wrap_PathsMetadata_IsEnd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1037 arg2);
extern swig_intgo _wrap_PathsMetadata_GetPath_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1038 arg2);
extern swig_intgo _wrap_PathsMetadata_NumPaths_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1039 _wrap_PathsMetadata_Paths_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1040 _wrap_PathsMetadata_Starts_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1041 _wrap_PathsMetadata_Ends_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_PathsMetadata_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_ROUTING_NOT_SOLVED_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ROUTING_SUCCESS_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ROUTING_PARTIAL_SUCCESS_LOCAL_OPTIMUM_NOT_REACHED_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ROUTING_FAIL_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ROUTING_FAIL_TIMEOUT_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ROUTING_INVALID_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ROUTING_INFEASIBLE_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ROUTING_OPTIMAL_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_PICKUP_AND_DELIVERY_NO_ORDER_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_PICKUP_AND_DELIVERY_LIFO_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_PICKUP_AND_DELIVERY_FIFO_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_1042 _wrap_RoutingModel_kNoPenalty_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_RoutingModel_kNoDisjunction_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_RoutingModel_kNoDimension_get_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_RoutingModel__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_RoutingModel__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1043 arg2);
extern void _wrap_delete_RoutingModel_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_kTransitEvaluatorSignUnknown_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_kTransitEvaluatorSignPositiveOrZero_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_kTransitEvaluatorSignNegativeOrZero_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_RoutingModel_RegisterUnaryTransitVector_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1044 arg2);
extern swig_intgo _wrap_RoutingModel_RegisterUnaryTransitCallback__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_RoutingModel_RegisterUnaryTransitCallback__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_RoutingModel_RegisterTransitMatrix_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_RoutingModel_RegisterTransitCallback__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_RoutingModel_RegisterTransitCallback__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_RoutingModel_AddDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_type_1045 arg3, swig_type_1046 arg4, _Bool arg5, swig_type_1047 arg6);
extern _Bool _wrap_RoutingModel_AddDimensionWithVehicleTransits_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1048 arg2, swig_type_1049 arg3, swig_type_1050 arg4, _Bool arg5, swig_type_1051 arg6);
extern _Bool _wrap_RoutingModel_AddDimensionWithVehicleCapacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_type_1052 arg3, swig_type_1053 arg4, _Bool arg5, swig_type_1054 arg6);
extern _Bool _wrap_RoutingModel_AddDimensionWithVehicleTransitAndCapacity_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1055 arg2, swig_type_1056 arg3, swig_type_1057 arg4, _Bool arg5, swig_type_1058 arg6);
extern uintptr_t _wrap_RoutingModel_AddConstantDimensionWithSlack_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1059 arg2, swig_type_1060 arg3, swig_type_1061 arg4, _Bool arg5, swig_type_1062 arg6);
extern uintptr_t _wrap_RoutingModel_AddConstantDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1063 arg2, swig_type_1064 arg3, _Bool arg4, swig_type_1065 arg5);
extern uintptr_t _wrap_RoutingModel_AddVectorDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1066 arg2, swig_type_1067 arg3, _Bool arg4, swig_type_1068 arg5);
extern uintptr_t _wrap_RoutingModel_AddMatrixDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1069 arg3, _Bool arg4, swig_type_1070 arg5);
extern uintptr_t _wrap_RoutingModel_GetUnaryDimensions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_GetDimensionsWithGlobalCumulOptimizers_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_GetDimensionsWithLocalCumulOptimizers_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingModel_HasGlobalCumulOptimizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_RoutingModel_HasLocalCumulOptimizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_GetMutableGlobalCumulLPOptimizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_GetMutableGlobalCumulMPOptimizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_GetMutableLocalCumulLPOptimizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_RoutingModel_HasDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_GetDimensionOrDie_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1071 arg2);
extern uintptr_t _wrap_RoutingModel_GetMutableDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1072 arg2);
extern void _wrap_RoutingModel_SetPrimaryConstrainedDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1073 arg2);
extern swig_type_1074 _wrap_RoutingModel_GetPrimaryConstrainedDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_AddResourceGroup_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_GetResourceGroups_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_GetResourceGroup_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1075 _wrap_RoutingModel_GetDimensionResourceGroupIndices_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_RoutingModel_GetDimensionResourceGroupIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_RoutingModel_AddDisjunction__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1076 arg2, swig_type_1077 arg3, swig_type_1078 arg4);
extern swig_intgo _wrap_RoutingModel_AddDisjunction__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1079 arg2, swig_type_1080 arg3);
extern swig_intgo _wrap_RoutingModel_AddDisjunction__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1081 arg2);
extern swig_type_1082 _wrap_RoutingModel_GetDisjunctionIndices_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1083 arg2);
extern swig_type_1084 _wrap_RoutingModel_GetDisjunctionNodeIndices_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1085 _wrap_RoutingModel_GetDisjunctionPenalty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1086 _wrap_RoutingModel_GetDisjunctionMaxCardinality_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RoutingModel_GetNumberOfDisjunctions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingModel_HasMandatoryDisjunctions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingModel_HasMaxCardinalityConstrainedDisjunctions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_IgnoreDisjunctionsAlreadyForcedToZero_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_AddSoftSameVehicleConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1087 arg2, swig_type_1088 arg3);
extern void _wrap_RoutingModel_SetAllowedVehiclesForIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1089 arg2, swig_type_1090 arg3);
extern _Bool _wrap_RoutingModel_IsVehicleAllowedForIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_type_1091 arg3);
extern void _wrap_RoutingModel_AddPickupAndDelivery_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1092 arg2, swig_type_1093 arg3);
extern void _wrap_RoutingModel_AddPickupAndDeliverySets_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern uintptr_t _wrap_RoutingModel_GetPickupPositions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1094 arg2);
extern uintptr_t _wrap_RoutingModel_GetDeliveryPositions_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1095 arg2);
extern _Bool _wrap_RoutingModel_IsPickup_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1096 arg2);
extern _Bool _wrap_RoutingModel_IsDelivery_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1097 arg2);
extern void _wrap_RoutingModel_SetPickupAndDeliveryPolicyOfAllVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RoutingModel_SetPickupAndDeliveryPolicyOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_intgo _wrap_RoutingModel_GetPickupAndDeliveryPolicyOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RoutingModel_GetNumOfSingletonNodes_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_TYPE_ADDED_TO_VEHICLE_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_ADDED_TYPE_REMOVED_FROM_VEHICLE_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_TYPE_ON_VEHICLE_UP_TO_VISIT_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern swig_intgo _wrap_TYPE_SIMULTANEOUSLY_ADDED_AND_REMOVED_RoutingModel_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_RoutingModel_SetVisitType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1098 arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_RoutingModel_GetVisitType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1099 arg2);
extern swig_type_1100 _wrap_RoutingModel_GetSingleNodesOfType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1101 _wrap_RoutingModel_GetPairIndicesOfType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RoutingModel_GetVisitTypePolicy_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1102 arg2);
extern swig_intgo _wrap_RoutingModel_GetNumberOfVisitTypes_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_AddRequiredTypeAlternativesWhenAddingType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_RoutingModel_AddRequiredTypeAlternativesWhenRemovingType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern uintptr_t _wrap_RoutingModel_GetRequiredTypeAlternativesWhenAddingType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_RoutingModel_GetRequiredTypeAlternativesWhenRemovingType_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1103 _wrap_RoutingModel_UnperformedPenalty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1104 arg2);
extern swig_type_1105 _wrap_RoutingModel_UnperformedPenaltyOrValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1106 arg2, swig_type_1107 arg3);
extern swig_type_1108 _wrap_RoutingModel_GetDepot_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_SetMaximumNumberOfActiveVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RoutingModel_GetMaximumNumberOfActiveVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_SetArcCostEvaluatorOfAllVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RoutingModel_SetArcCostEvaluatorOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_RoutingModel_SetFixedCostOfAllVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1109 arg2);
extern void _wrap_RoutingModel_SetFixedCostOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1110 arg2, swig_intgo arg3);
extern swig_type_1111 _wrap_RoutingModel_GetFixedCostOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RoutingModel_SetPathEnergyCostOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1112 arg2, swig_type_1113 arg3, swig_type_1114 arg4, swig_intgo arg5);
extern void _wrap_RoutingModel_SetAmortizedCostFactorsOfAllVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1115 arg2, swig_type_1116 arg3);
extern void _wrap_RoutingModel_SetAmortizedCostFactorsOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1117 arg2, swig_type_1118 arg3, swig_intgo arg4);
extern swig_type_1119 _wrap_RoutingModel_GetAmortizedLinearCostFactorOfVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1120 _wrap_RoutingModel_GetAmortizedQuadraticCostFactorOfVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_SetVehicleUsedWhenEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2, swig_intgo arg3);
extern _Bool _wrap_RoutingModel_IsVehicleUsedWhenEmpty_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RoutingModel_SetFirstSolutionEvaluator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RoutingModel_AddLocalSearchOperator_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RoutingModel_AddSearchMonitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RoutingModel_AddAtSolutionCallback__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_RoutingModel_AddAtSolutionCallback__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RoutingModel_AddVariableMinimizedByFinalizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RoutingModel_AddVariableMaximizedByFinalizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RoutingModel_AddWeightedVariableMinimizedByFinalizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1121 arg3);
extern void _wrap_RoutingModel_AddWeightedVariableMaximizedByFinalizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1122 arg3);
extern void _wrap_RoutingModel_AddVariableTargetToFinalizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1123 arg3);
extern void _wrap_RoutingModel_AddWeightedVariableTargetToFinalizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1124 arg3, swig_type_1125 arg4);
extern void _wrap_RoutingModel_CloseModel_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_CloseModelWithParameters_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1126 arg2);
extern uintptr_t _wrap_RoutingModel_Solve__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_Solve__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_SolveFromAssignmentWithParameters_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1127 arg3);
extern uintptr_t _wrap_RoutingModel_FastSolveFromAssignmentWithParameters__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1128 arg3, _Bool arg4, uintptr_t arg5);
extern uintptr_t _wrap_RoutingModel_FastSolveFromAssignmentWithParameters__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1129 arg3, _Bool arg4);
extern uintptr_t _wrap_RoutingModel_SolveFromAssignmentsWithParameters__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1130 arg3, uintptr_t arg4);
extern uintptr_t _wrap_RoutingModel_SolveFromAssignmentsWithParameters__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1131 arg3);
extern uintptr_t _wrap_RoutingModel_SolveWithIteratedLocalSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1132 arg2);
extern void _wrap_RoutingModel_SetAssignmentFromOtherModelAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern swig_type_1133 _wrap_RoutingModel_ComputeLowerBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1134 _wrap_RoutingModel_ObjectiveLowerBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RoutingModel_GetStatus_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingModel_EnableDeepSerialization_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_ApplyLocks_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1135 arg2);
extern _Bool _wrap_RoutingModel_ApplyLocksToAllVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern uintptr_t _wrap_RoutingModel_PreAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_MutablePreAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingModel_WriteAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1136 arg2);
extern uintptr_t _wrap_RoutingModel_ReadAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1137 arg2);
extern uintptr_t _wrap_RoutingModel_RestoreAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_ReadAssignmentFromRoutes_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern _Bool _wrap_RoutingModel_RoutesToAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3, _Bool arg4, uintptr_t arg5);
extern void _wrap_RoutingModel_AssignmentToRoutes_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_RoutingModel_CompactAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_CompactAndCheckAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RoutingModel_AddToAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RoutingModel_AddIntervalToAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_GetOrCreateNodeNeighborsByCostClass__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, double arg2, swig_type_1138 arg3, swig_voidp arg4, _Bool arg5);
extern uintptr_t _wrap_RoutingModel_GetOrCreateNodeNeighborsByCostClass__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, double arg2, swig_type_1139 arg3, swig_voidp arg4);
extern uintptr_t _wrap_RoutingModel_GetOrCreateNodeNeighborsByCostClass__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, _Bool arg3);
extern uintptr_t _wrap_RoutingModel_GetOrCreateNodeNeighborsByCostClass__SWIG_3_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RoutingModel_AddLocalSearchFilter_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_1140 _wrap_RoutingModel_Start_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1141 _wrap_RoutingModel_End_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_RoutingModel_IsStart_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1142 arg2);
extern _Bool _wrap_RoutingModel_IsEnd_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1143 arg2);
extern swig_intgo _wrap_RoutingModel_VehicleIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1144 arg2);
extern swig_type_1145 _wrap_RoutingModel_Next_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1146 arg3);
extern _Bool _wrap_RoutingModel_IsVehicleUsed_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_RoutingModel_Nexts_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_VehicleVars_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_ResourceVars_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_RoutingModel_NextVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1147 arg2);
extern uintptr_t _wrap_RoutingModel_ActiveVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1148 arg2);
extern uintptr_t _wrap_RoutingModel_ActiveVehicleVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_RoutingModel_VehicleRouteConsideredVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_RoutingModel_VehicleVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1149 arg2);
extern uintptr_t _wrap_RoutingModel_ResourceVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern uintptr_t _wrap_RoutingModel_CostVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1150 _wrap_RoutingModel_GetArcCostForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1151 arg2, swig_type_1152 arg3, swig_type_1153 arg4);
extern _Bool _wrap_RoutingModel_CostsAreHomogeneousAcrossVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1154 _wrap_RoutingModel_GetHomogeneousCost_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1155 arg2, swig_type_1156 arg3);
extern swig_type_1157 _wrap_RoutingModel_GetArcCostForFirstSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1158 arg2, swig_type_1159 arg3);
extern swig_type_1160 _wrap_RoutingModel_GetArcCostForClass_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1161 arg2, swig_type_1162 arg3, swig_type_1163 arg4);
extern swig_intgo _wrap_RoutingModel_GetCostClassIndexOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1164 arg2);
extern _Bool _wrap_RoutingModel_HasVehicleWithCostClassIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RoutingModel_GetCostClassesCount_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RoutingModel_GetNonZeroCostClassesCount_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RoutingModel_GetVehicleClassIndexOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1165 arg2);
extern swig_intgo _wrap_RoutingModel_GetVehicleOfClass_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RoutingModel_GetVehicleClassesCount_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1166 _wrap_RoutingModel_GetSameVehicleIndicesOfIndex_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_RoutingModel_GetVehicleTypeContainer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingModel_ArcIsMoreConstrainedThanArc_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1167 arg2, swig_type_1168 arg3, swig_type_1169 arg4);
extern swig_type_1170 _wrap_RoutingModel_DebugOutputAssignment_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_type_1171 arg3);
extern _Bool _wrap_RoutingModel_CheckIfAssignmentIsFeasible_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern uintptr_t _wrap_RoutingModel_solver_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingModel_CheckLimit__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_RoutingModel_CheckLimit__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_UpdateTimeLimit_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_TimeBuffer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_GetMutableCPSatInterrupt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_GetMutableCPInterrupt_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingModel_CancelSearch_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RoutingModel_Nodes_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_intgo _wrap_RoutingModel_Vehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1172 _wrap_RoutingModel_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1173 _wrap_RoutingModel_GetNumberOfDecisionsInFirstSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1174 arg2);
extern swig_type_1175 _wrap_RoutingModel_GetNumberOfRejectsInFirstSolution_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1176 arg2);
extern _Bool _wrap_RoutingModel_IsMatchingModel_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingModel_AreRoutesInterdependent_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_voidp arg2);
extern uintptr_t _wrap_RoutingModel_MakeGuidedSlackFinalizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_RoutingModel_MakeSelfDependentDimensionFinalizer_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RoutingModel_GetPathsMetadata_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingModel_SolveWithParameters_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1177 arg2);
extern swig_type_1178 _wrap_RoutingModelVisitor_kLightElement_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_1179 _wrap_RoutingModelVisitor_kLightElement2_get_constraintsolver_e5a2167dd134d32d(void);
extern swig_type_1180 _wrap_RoutingModelVisitor_kRemoveValues_get_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_RoutingModelVisitor_constraintsolver_e5a2167dd134d32d(void);
extern void _wrap_delete_RoutingModelVisitor_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1181 _wrap_RoutingModelVisitor_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_new_GlobalVehicleBreaksConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1182 _wrap_GlobalVehicleBreaksConstraint_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_GlobalVehicleBreaksConstraint_Post_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_GlobalVehicleBreaksConstraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_GlobalVehicleBreaksConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_GlobalVehicleBreaksConstraint_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_GlobalVehicleBreaksConstraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_GlobalVehicleBreaksConstraint_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_GlobalVehicleBreaksConstraint_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_GlobalVehicleBreaksConstraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_GlobalVehicleBreaksConstraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_GlobalVehicleBreaksConstraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_GlobalVehicleBreaksConstraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_GlobalVehicleBreaksConstraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_GlobalVehicleBreaksConstraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_1183 _wrap_GlobalVehicleBreaksConstraint_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_GlobalVehicleBreaksConstraint_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_GlobalVehicleBreaksConstraint_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_1184 _wrap_GlobalVehicleBreaksConstraint_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_delete_TypeRegulationsChecker_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_TypeIncompatibilityChecker_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, _Bool arg2);
extern void _wrap_delete_TypeIncompatibilityChecker_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_TypeRequirementChecker_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_TypeRequirementChecker_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_TypeRegulationsConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_TypeRegulationsConstraint_Post_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_TypeRegulationsConstraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_TypeRegulationsConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1185 _wrap_TypeRegulationsConstraint_ToString_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_TypeRegulationsConstraint_Accept_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_TypeRegulationsConstraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_TypeRegulationsConstraint_Var_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern uintptr_t _wrap_TypeRegulationsConstraint_solver_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_TypeRegulationsConstraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_TypeRegulationsConstraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_TypeRegulationsConstraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_TypeRegulationsConstraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_TypeRegulationsConstraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_TypeRegulationsConstraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_1186 _wrap_TypeRegulationsConstraint_Name_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_TypeRegulationsConstraint_SetName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_TypeRegulationsConstraint_HasName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern swig_type_1187 _wrap_TypeRegulationsConstraint_BaseName_constraintsolver_e5a2167dd134d32d(uintptr_t _swig_base);
extern void _wrap_BoundCost_bound_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1188 arg2);
extern swig_type_1189 _wrap_BoundCost_bound_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_BoundCost_cost_set_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1190 arg2);
extern swig_type_1191 _wrap_BoundCost_cost_get_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_BoundCost__SWIG_0_constraintsolver_e5a2167dd134d32d(void);
extern uintptr_t _wrap_new_BoundCost__SWIG_1_constraintsolver_e5a2167dd134d32d(swig_type_1192 arg1, swig_type_1193 arg2);
extern void _wrap_delete_BoundCost_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_new_SimpleBoundCosts_constraintsolver_e5a2167dd134d32d(swig_intgo arg1, uintptr_t arg2);
extern uintptr_t _wrap_SimpleBoundCosts_BoundCost_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SimpleBoundCosts_Size_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_SimpleBoundCosts_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_delete_RoutingDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingDimension_Model_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1194 _wrap_RoutingDimension_GetTransitValue_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1195 arg2, swig_type_1196 arg3, swig_type_1197 arg4);
extern swig_type_1198 _wrap_RoutingDimension_GetTransitValueFromClass_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1199 arg2, swig_type_1200 arg3, swig_type_1201 arg4);
extern uintptr_t _wrap_RoutingDimension_CumulVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1202 arg2);
extern uintptr_t _wrap_RoutingDimension_TransitVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1203 arg2);
extern uintptr_t _wrap_RoutingDimension_FixedTransitVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1204 arg2);
extern uintptr_t _wrap_RoutingDimension_SlackVar_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1205 arg2);
extern uintptr_t _wrap_RoutingDimension_Cumuls_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingDimension_FixedTransits_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingDimension_Transits_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingDimension_Slacks_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingDimension_SetSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1206 arg2, swig_intgo arg3);
extern void _wrap_RoutingDimension_SetSpanCostCoefficientForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1207 arg2, swig_intgo arg3);
extern void _wrap_RoutingDimension_SetSpanCostCoefficientForAllVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1208 arg2);
extern void _wrap_RoutingDimension_SetSlackCostCoefficientForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1209 arg2, swig_intgo arg3);
extern void _wrap_RoutingDimension_SetSlackCostCoefficientForAllVehicles_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1210 arg2);
extern void _wrap_RoutingDimension_SetGlobalSpanCostCoefficient_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1211 arg2);
extern void _wrap_RoutingDimension_SetCumulVarSoftUpperBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1212 arg2, swig_type_1213 arg3, swig_type_1214 arg4);
extern _Bool _wrap_RoutingDimension_HasCumulVarSoftUpperBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1215 arg2);
extern swig_type_1216 _wrap_RoutingDimension_GetCumulVarSoftUpperBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1217 arg2);
extern swig_type_1218 _wrap_RoutingDimension_GetCumulVarSoftUpperBoundCoefficient_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1219 arg2);
extern void _wrap_RoutingDimension_SetCumulVarSoftLowerBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1220 arg2, swig_type_1221 arg3, swig_type_1222 arg4);
extern _Bool _wrap_RoutingDimension_HasCumulVarSoftLowerBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1223 arg2);
extern swig_type_1224 _wrap_RoutingDimension_GetCumulVarSoftLowerBound_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1225 arg2);
extern swig_type_1226 _wrap_RoutingDimension_GetCumulVarSoftLowerBoundCoefficient_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1227 arg2);
extern void _wrap_RoutingDimension_SetBreakIntervalsOfVehicle__SWIG_0_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern void _wrap_RoutingDimension_SetBreakIntervalsOfVehicle__SWIG_1_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_type_1228 arg4);
extern void _wrap_RoutingDimension_SetBreakDistanceDurationOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1229 arg2, swig_type_1230 arg3, swig_intgo arg4);
extern void _wrap_RoutingDimension_InitializeBreaks_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern _Bool _wrap_RoutingDimension_HasBreakConstraints_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingDimension_SetBreakIntervalsOfVehicle__SWIG_2_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_type_1231 arg4, uintptr_t arg5);
extern uintptr_t _wrap_RoutingDimension_GetBreakIntervalsOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RoutingDimension_GetPreTravelEvaluatorOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RoutingDimension_GetPostTravelEvaluatorOfVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_RoutingDimension_BaseDimension_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1232 _wrap_RoutingDimension_ShortestTransitionSlack_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1233 arg2);
extern swig_type_1234 _wrap_RoutingDimension_Name_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingDimension_SetPickupToDeliveryLimitFunctionForPair_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern _Bool _wrap_RoutingDimension_HasPickupToDeliveryLimits_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern void _wrap_RoutingDimension_AddNodePrecedence_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1235 arg2, swig_type_1236 arg3, swig_type_1237 arg4);
extern swig_type_1238 _wrap_RoutingDimension_GetSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1239 _wrap_RoutingDimension_GetSpanCostCoefficientForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1240 _wrap_RoutingDimension_GetSlackCostCoefficientForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_1241 _wrap_RoutingDimension_GlobalSpanCostCoefficient_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1242 _wrap_RoutingDimension_GetGlobalOptimizerOffset_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern swig_type_1243 _wrap_RoutingDimension_GetLocalOptimizerOffsetForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RoutingDimension_SetSoftSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern _Bool _wrap_RoutingDimension_HasSoftSpanUpperBounds_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingDimension_GetSoftSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RoutingDimension_SetQuadraticCostSoftSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern _Bool _wrap_RoutingDimension_HasQuadraticCostSoftSpanUpperBounds_constraintsolver_e5a2167dd134d32d(uintptr_t arg1);
extern uintptr_t _wrap_RoutingDimension_GetQuadraticCostSoftSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_SolveModelWithSat_constraintsolver_e5a2167dd134d32d(uintptr_t arg1, swig_type_1244 arg2, uintptr_t arg3, uintptr_t arg4);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"
import "fmt"
import "github.com/golang/protobuf/proto"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


func getSwigcptr(v interface { Swigcptr() uintptr }) uintptr {
	if v == nil {
		return 0
	}
	return v.Swigcptr()
}


type _ sync.Mutex


type swig_goslice struct { arr uintptr; n int; c int }


func swigCopyintSliceIn(s []int) []C.int {
    newSlice := make([] C.int, len(s))
    for i := range newSlice {
        newSlice[i] = C.int(s[i])
    }
    return newSlice
}

func swigCopyintSliceOut(s *[]C.int) []int {
    newSlice := make([] int, len(*s))
    for i := range newSlice {
        newSlice[i] = int((*s)[i])
    }
    p := *(*swig_goslice)(unsafe.Pointer(s))
    Swig_free(p.arr)
    return newSlice
}


type intSliceWithPointer struct {
    slice []C.int
    ptr uintptr
}


func swigCopyint64_tSliceIn(s []int64) []int64 {
    newSlice := make([] int64, len(s))
    for i := range newSlice {
        newSlice[i] = int64(s[i])
    }
    return newSlice
}

func swigCopyint64_tSliceOut(s *[]int64) []int64 {
    newSlice := make([] int64, len(*s))
    for i := range newSlice {
        newSlice[i] = int64((*s)[i])
    }
    p := *(*swig_goslice)(unsafe.Pointer(s))
    Swig_free(p.arr)
    return newSlice
}


type int64_tSliceWithPointer struct {
    slice []int64
    ptr uintptr
}


func swigCopyRoutingNodeIndexSliceIn(s []int) []C.int {
    newSlice := make([] C.int, len(s))
    for i := range newSlice {
        newSlice[i] = C.int(s[i])
    }
    return newSlice
}

func swigCopyRoutingNodeIndexSliceOut(s *[]C.int) []int {
    newSlice := make([] int, len(*s))
    for i := range newSlice {
        newSlice[i] = int((*s)[i])
    }
    p := *(*swig_goslice)(unsafe.Pointer(s))
    Swig_free(p.arr)
    return newSlice
}


type RoutingNodeIndexSliceWithPointer struct {
    slice []C.int
    ptr uintptr
}


func swigCopyRoutingCostClassIndexSliceIn(s []int) []C.int {
    newSlice := make([] C.int, len(s))
    for i := range newSlice {
        newSlice[i] = C.int(s[i])
    }
    return newSlice
}

func swigCopyRoutingCostClassIndexSliceOut(s *[]C.int) []int {
    newSlice := make([] int, len(*s))
    for i := range newSlice {
        newSlice[i] = int((*s)[i])
    }
    p := *(*swig_goslice)(unsafe.Pointer(s))
    Swig_free(p.arr)
    return newSlice
}


type RoutingCostClassIndexSliceWithPointer struct {
    slice []C.int
    ptr uintptr
}


func swigCopyRoutingDimensionIndexSliceIn(s []int) []C.int {
    newSlice := make([] C.int, len(s))
    for i := range newSlice {
        newSlice[i] = C.int(s[i])
    }
    return newSlice
}

func swigCopyRoutingDimensionIndexSliceOut(s *[]C.int) []int {
    newSlice := make([] int, len(*s))
    for i := range newSlice {
        newSlice[i] = int((*s)[i])
    }
    p := *(*swig_goslice)(unsafe.Pointer(s))
    Swig_free(p.arr)
    return newSlice
}


type RoutingDimensionIndexSliceWithPointer struct {
    slice []C.int
    ptr uintptr
}


func swigCopyRoutingDisjunctionIndexSliceIn(s []int) []C.int {
    newSlice := make([] C.int, len(s))
    for i := range newSlice {
        newSlice[i] = C.int(s[i])
    }
    return newSlice
}

func swigCopyRoutingDisjunctionIndexSliceOut(s *[]C.int) []int {
    newSlice := make([] int, len(*s))
    for i := range newSlice {
        newSlice[i] = int((*s)[i])
    }
    p := *(*swig_goslice)(unsafe.Pointer(s))
    Swig_free(p.arr)
    return newSlice
}


type RoutingDisjunctionIndexSliceWithPointer struct {
    slice []C.int
    ptr uintptr
}


func swigCopyRoutingVehicleClassIndexSliceIn(s []int) []C.int {
    newSlice := make([] C.int, len(s))
    for i := range newSlice {
        newSlice[i] = C.int(s[i])
    }
    return newSlice
}

func swigCopyRoutingVehicleClassIndexSliceOut(s *[]C.int) []int {
    newSlice := make([] int, len(*s))
    for i := range newSlice {
        newSlice[i] = int((*s)[i])
    }
    p := *(*swig_goslice)(unsafe.Pointer(s))
    Swig_free(p.arr)
    return newSlice
}


type RoutingVehicleClassIndexSliceWithPointer struct {
    slice []C.int
    ptr uintptr
}


  type GoRoutingTransitCallback1Wrapper interface {
    RoutingTransitCallback1Impl
    IsGoRoutingTransitCallback1Wrapper()
    Delete()
    Wrap() RoutingTransitCallback1
  }

  type goRoutingTransitCallback1Wrapper struct {
    RoutingTransitCallback1Impl
    wrapped RoutingTransitCallback1
  }

  func (g *goRoutingTransitCallback1Wrapper) IsGoRoutingTransitCallback1Wrapper() {}

  func (g *goRoutingTransitCallback1Wrapper) Delete() {
    DeleteRoutingTransitCallback1(g.wrapped)
    g.wrapped = nil
    DeleteDirectorRoutingTransitCallback1Impl(g.RoutingTransitCallback1Impl)
  }

  func (g *goRoutingTransitCallback1Wrapper) Wrap() RoutingTransitCallback1 {
    return g.wrapped
  }

  type overwrittenMethodsOnRoutingTransitCallback1Impl struct {
    i RoutingTransitCallback1Impl
    goCb func( arg0 int64 ) int64
  }


  func NewGoRoutingTransitCallback1Wrapper(goCb func( arg0 int64 ) int64) GoRoutingTransitCallback1Wrapper {
    om := &overwrittenMethodsOnRoutingTransitCallback1Impl{
      goCb: goCb,
    }
    om.i = NewDirectorRoutingTransitCallback1Impl(om)

    g := &goRoutingTransitCallback1Wrapper{
      RoutingTransitCallback1Impl: om.i,
    }
    g.wrapped = NewRoutingTransitCallback1(g)

    return g
  }

  // callback implementation
  func (o *overwrittenMethodsOnRoutingTransitCallback1Impl) Call( arg0 int64 ) int64 {
    return o.goCb( arg0 )
  }


  type GoRoutingTransitCallback2Wrapper interface {
    RoutingTransitCallback2Impl
    IsGoRoutingTransitCallback2Wrapper()
    Delete()
    Wrap() RoutingTransitCallback2
  }

  type goRoutingTransitCallback2Wrapper struct {
    RoutingTransitCallback2Impl
    wrapped RoutingTransitCallback2
  }

  func (g *goRoutingTransitCallback2Wrapper) IsGoRoutingTransitCallback2Wrapper() {}

  func (g *goRoutingTransitCallback2Wrapper) Delete() {
    DeleteRoutingTransitCallback2(g.wrapped)
    g.wrapped = nil
    DeleteDirectorRoutingTransitCallback2Impl(g.RoutingTransitCallback2Impl)
  }

  func (g *goRoutingTransitCallback2Wrapper) Wrap() RoutingTransitCallback2 {
    return g.wrapped
  }

  type overwrittenMethodsOnRoutingTransitCallback2Impl struct {
    i RoutingTransitCallback2Impl
    goCb func( arg0 int64, arg1 int64 ) int64
  }


  func NewGoRoutingTransitCallback2Wrapper(goCb func( arg0 int64, arg1 int64 ) int64) GoRoutingTransitCallback2Wrapper {
    om := &overwrittenMethodsOnRoutingTransitCallback2Impl{
      goCb: goCb,
    }
    om.i = NewDirectorRoutingTransitCallback2Impl(om)

    g := &goRoutingTransitCallback2Wrapper{
      RoutingTransitCallback2Impl: om.i,
    }
    g.wrapped = NewRoutingTransitCallback2(g)

    return g
  }

  // callback implementation
  func (o *overwrittenMethodsOnRoutingTransitCallback2Impl) Call( arg0 int64, arg1 int64 ) int64 {
    return o.goCb( arg0, arg1 )
  }


  type GoAtSolutionCallbackWrapper interface {
    AtSolutionCallbackImpl
    IsGoAtSolutionCallbackWrapper()
    Delete()
    Wrap() AtSolutionCallback
  }

  type goAtSolutionCallbackWrapper struct {
    AtSolutionCallbackImpl
    wrapped AtSolutionCallback
  }

  func (g *goAtSolutionCallbackWrapper) IsGoAtSolutionCallbackWrapper() {}

  func (g *goAtSolutionCallbackWrapper) Delete() {
    DeleteAtSolutionCallback(g.wrapped)
    g.wrapped = nil
    DeleteDirectorAtSolutionCallbackImpl(g.AtSolutionCallbackImpl)
  }

  func (g *goAtSolutionCallbackWrapper) Wrap() AtSolutionCallback {
    return g.wrapped
  }

  type overwrittenMethodsOnAtSolutionCallbackImpl struct {
    i AtSolutionCallbackImpl
    goCb func() 
  }

  func NewGoAtSolutionCallbackWrapper(goCb func() ) GoAtSolutionCallbackWrapper {
    om := &overwrittenMethodsOnAtSolutionCallbackImpl{
      goCb: goCb,
    }
    om.i = NewDirectorAtSolutionCallbackImpl(om)

    g := &goAtSolutionCallbackWrapper{
      AtSolutionCallbackImpl: om.i,
    }
    g.wrapped = NewAtSolutionCallback(g)

    return g
  }

  // callback implementation
  func (o *overwrittenMethodsOnAtSolutionCallbackImpl) Call()  {
     o.goCb()
  }

//export cgo_panic__constraintsolver_e5a2167dd134d32d
func cgo_panic__constraintsolver_e5a2167dd134d32d(p *byte) {
	s := (*[1024]byte)(unsafe.Pointer(p))[:]
	for i, b := range s {
		if b == 0 {
			panic(string(s[:i]))
		}
	}
	panic(string(s))
}


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_constraintsolver_e5a2167dd134d32d(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrIntTupleSet uintptr

func (p SwigcptrIntTupleSet) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntTupleSet) SwigIsIntTupleSet() {
}

func NewIntTupleSet__SWIG_0(arg1 int) (_swig_ret IntTupleSet) {
	var swig_r IntTupleSet
	_swig_i_0 := arg1
	swig_r = (IntTupleSet)(SwigcptrIntTupleSet(C._wrap_new_IntTupleSet__SWIG_0_constraintsolver_e5a2167dd134d32d(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewIntTupleSet__SWIG_1(arg1 IntTupleSet) (_swig_ret IntTupleSet) {
	var swig_r IntTupleSet
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (IntTupleSet)(SwigcptrIntTupleSet(C._wrap_new_IntTupleSet__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewIntTupleSet(a ...interface{}) IntTupleSet {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntTupleSet); !ok {
			goto check_1
		}
		return NewIntTupleSet__SWIG_1(a[0].(IntTupleSet))
	}
check_1:
	if argc == 1 {
		return NewIntTupleSet__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func DeleteIntTupleSet(arg1 IntTupleSet) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntTupleSet_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntTupleSet) Clear() {
	_swig_i_0 := arg1
	C._wrap_IntTupleSet_Clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntTupleSet) Insert__SWIG_0(arg2 []int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	swig_r = (int)(C._wrap_IntTupleSet_Insert__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) Insert__SWIG_1(arg2 []int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_IntTupleSet_Insert__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrIntTupleSet) Insert(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].([]int); !ok {
			goto check_1
		}
		return p.Insert__SWIG_0(a[0].([]int))
	}
check_1:
	if argc == 1 {
		return p.Insert__SWIG_1(a[0].([]int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntTupleSet) Insert2(arg2 int64, arg3 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_IntTupleSet_Insert2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_3(_swig_i_1), C.swig_type_4(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) Insert3(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_IntTupleSet_Insert3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_5(_swig_i_1), C.swig_type_6(_swig_i_2), C.swig_type_7(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) Insert4(arg2 int64, arg3 int64, arg4 int64, arg5 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_IntTupleSet_Insert4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_8(_swig_i_1), C.swig_type_9(_swig_i_2), C.swig_type_10(_swig_i_3), C.swig_type_11(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) InsertAll__SWIG_0(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntTupleSet_InsertAll__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntTupleSet) InsertAll__SWIG_1(arg2 Std_vector_Sl_std_vector_Sl_int_Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntTupleSet_InsertAll__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntTupleSet) InsertAll(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrStd_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_); !ok {
			goto check_1
		}
		p.InsertAll__SWIG_0(a[0].(Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_))
		return
	}
check_1:
	if argc == 1 {
		p.InsertAll__SWIG_1(a[0].(Std_vector_Sl_std_vector_Sl_int_Sg__Sg_))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntTupleSet) Contains__SWIG_0(arg2 []int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	swig_r = (bool)(C._wrap_IntTupleSet_Contains__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_12)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) Contains__SWIG_1(arg2 []int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_IntTupleSet_Contains__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrIntTupleSet) Contains(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].([]int); !ok {
			goto check_1
		}
		return p.Contains__SWIG_0(a[0].([]int))
	}
check_1:
	if argc == 1 {
		return p.Contains__SWIG_1(a[0].([]int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntTupleSet) NumTuples() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IntTupleSet_NumTuples_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) Value(arg2 int, arg3 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_IntTupleSet_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) Arity() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IntTupleSet_Arity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) NumDifferentValuesInColumn(arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_IntTupleSet_NumDifferentValuesInColumn_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) SortedByColumn(arg2 int) (_swig_ret IntTupleSet) {
	var swig_r IntTupleSet
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntTupleSet)(SwigcptrIntTupleSet(C._wrap_IntTupleSet_SortedByColumn_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntTupleSet) SortedLexicographically() (_swig_ret IntTupleSet) {
	var swig_r IntTupleSet
	_swig_i_0 := arg1
	swig_r = (IntTupleSet)(SwigcptrIntTupleSet(C._wrap_IntTupleSet_SortedLexicographically_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type IntTupleSet interface {
	Swigcptr() uintptr
	SwigIsIntTupleSet()
	Clear()
	Insert(a ...interface{}) int
	Insert2(arg2 int64, arg3 int64) (_swig_ret int)
	Insert3(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int)
	Insert4(arg2 int64, arg3 int64, arg4 int64, arg5 int64) (_swig_ret int)
	InsertAll(a ...interface{})
	Contains(a ...interface{}) bool
	NumTuples() (_swig_ret int)
	Value(arg2 int, arg3 int) (_swig_ret int64)
	Arity() (_swig_ret int)
	NumDifferentValuesInColumn(arg2 int) (_swig_ret int)
	SortedByColumn(arg2 int) (_swig_ret IntTupleSet)
	SortedLexicographically() (_swig_ret IntTupleSet)
}

type SwigcptrLocalSearchPhaseParameters uintptr

func (p SwigcptrLocalSearchPhaseParameters) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLocalSearchPhaseParameters) SwigIsLocalSearchPhaseParameters() {
}

func NewLocalSearchPhaseParameters() (_swig_ret LocalSearchPhaseParameters) {
	var swig_r LocalSearchPhaseParameters
	swig_r = (LocalSearchPhaseParameters)(SwigcptrLocalSearchPhaseParameters(C._wrap_new_LocalSearchPhaseParameters_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func DeleteLocalSearchPhaseParameters(arg1 LocalSearchPhaseParameters) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LocalSearchPhaseParameters_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type LocalSearchPhaseParameters interface {
	Swigcptr() uintptr
	SwigIsLocalSearchPhaseParameters()
}

type SwigcptrIntVarVector uintptr

func (p SwigcptrIntVarVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntVarVector) SwigIsIntVarVector() {
}

func NewIntVarVector__SWIG_0() (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_new_IntVarVector__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewIntVarVector__SWIG_1(arg1 int64) (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := arg1
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_new_IntVarVector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_15(_swig_i_0))))
	return swig_r
}

func NewIntVarVector__SWIG_2(arg1 IntVarVector) (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_new_IntVarVector__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewIntVarVector(a ...interface{}) IntVarVector {
	argc := len(a)
	if argc == 0 {
		return NewIntVarVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewIntVarVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewIntVarVector__SWIG_2(a[0].(IntVarVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntVarVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVarVector_size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVarVector_capacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVarVector_reserve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_18(_swig_i_1))
}

func (arg1 SwigcptrIntVarVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntVarVector_isEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_IntVarVector_clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVarVector) Add(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVarVector_add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVarVector) Get(arg2 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVarVector_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntVarVector) Set(arg2 int, arg3 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_IntVarVector_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteIntVarVector(arg1 IntVarVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntVarVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type IntVarVector interface {
	Swigcptr() uintptr
	SwigIsIntVarVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 IntVar)
	Get(arg2 int) (_swig_ret IntVar)
	Set(arg2 int, arg3 IntVar)
}

type SwigcptrSearchMonitorVector uintptr

func (p SwigcptrSearchMonitorVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSearchMonitorVector) SwigIsSearchMonitorVector() {
}

func NewSearchMonitorVector__SWIG_0() (_swig_ret SearchMonitorVector) {
	var swig_r SearchMonitorVector
	swig_r = (SearchMonitorVector)(SwigcptrSearchMonitorVector(C._wrap_new_SearchMonitorVector__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewSearchMonitorVector__SWIG_1(arg1 int64) (_swig_ret SearchMonitorVector) {
	var swig_r SearchMonitorVector
	_swig_i_0 := arg1
	swig_r = (SearchMonitorVector)(SwigcptrSearchMonitorVector(C._wrap_new_SearchMonitorVector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_19(_swig_i_0))))
	return swig_r
}

func NewSearchMonitorVector__SWIG_2(arg1 SearchMonitorVector) (_swig_ret SearchMonitorVector) {
	var swig_r SearchMonitorVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SearchMonitorVector)(SwigcptrSearchMonitorVector(C._wrap_new_SearchMonitorVector__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSearchMonitorVector(a ...interface{}) SearchMonitorVector {
	argc := len(a)
	if argc == 0 {
		return NewSearchMonitorVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewSearchMonitorVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewSearchMonitorVector__SWIG_2(a[0].(SearchMonitorVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSearchMonitorVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SearchMonitorVector_size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitorVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SearchMonitorVector_capacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitorVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SearchMonitorVector_reserve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_22(_swig_i_1))
}

func (arg1 SwigcptrSearchMonitorVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SearchMonitorVector_isEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitorVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitorVector_clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitorVector) Add(arg2 SearchMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchMonitorVector_add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchMonitorVector) Get(arg2 int) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_SearchMonitorVector_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSearchMonitorVector) Set(arg2 int, arg3 SearchMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_SearchMonitorVector_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteSearchMonitorVector(arg1 SearchMonitorVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SearchMonitorVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type SearchMonitorVector interface {
	Swigcptr() uintptr
	SwigIsSearchMonitorVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 SearchMonitor)
	Get(arg2 int) (_swig_ret SearchMonitor)
	Set(arg2 int, arg3 SearchMonitor)
}

type SwigcptrDecisionBuilderVector uintptr

func (p SwigcptrDecisionBuilderVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDecisionBuilderVector) SwigIsDecisionBuilderVector() {
}

func NewDecisionBuilderVector__SWIG_0() (_swig_ret DecisionBuilderVector) {
	var swig_r DecisionBuilderVector
	swig_r = (DecisionBuilderVector)(SwigcptrDecisionBuilderVector(C._wrap_new_DecisionBuilderVector__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewDecisionBuilderVector__SWIG_1(arg1 int64) (_swig_ret DecisionBuilderVector) {
	var swig_r DecisionBuilderVector
	_swig_i_0 := arg1
	swig_r = (DecisionBuilderVector)(SwigcptrDecisionBuilderVector(C._wrap_new_DecisionBuilderVector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_23(_swig_i_0))))
	return swig_r
}

func NewDecisionBuilderVector__SWIG_2(arg1 DecisionBuilderVector) (_swig_ret DecisionBuilderVector) {
	var swig_r DecisionBuilderVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (DecisionBuilderVector)(SwigcptrDecisionBuilderVector(C._wrap_new_DecisionBuilderVector__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDecisionBuilderVector(a ...interface{}) DecisionBuilderVector {
	argc := len(a)
	if argc == 0 {
		return NewDecisionBuilderVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewDecisionBuilderVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewDecisionBuilderVector__SWIG_2(a[0].(DecisionBuilderVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDecisionBuilderVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DecisionBuilderVector_size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDecisionBuilderVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DecisionBuilderVector_capacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDecisionBuilderVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DecisionBuilderVector_reserve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_26(_swig_i_1))
}

func (arg1 SwigcptrDecisionBuilderVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DecisionBuilderVector_isEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDecisionBuilderVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_DecisionBuilderVector_clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDecisionBuilderVector) Add(arg2 DecisionBuilder) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_DecisionBuilderVector_add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDecisionBuilderVector) Get(arg2 int) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_DecisionBuilderVector_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDecisionBuilderVector) Set(arg2 int, arg3 DecisionBuilder) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_DecisionBuilderVector_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteDecisionBuilderVector(arg1 DecisionBuilderVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_DecisionBuilderVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type DecisionBuilderVector interface {
	Swigcptr() uintptr
	SwigIsDecisionBuilderVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 DecisionBuilder)
	Get(arg2 int) (_swig_ret DecisionBuilder)
	Set(arg2 int, arg3 DecisionBuilder)
}

type SwigcptrIntervalVarVector uintptr

func (p SwigcptrIntervalVarVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntervalVarVector) SwigIsIntervalVarVector() {
}

func NewIntervalVarVector__SWIG_0() (_swig_ret IntervalVarVector) {
	var swig_r IntervalVarVector
	swig_r = (IntervalVarVector)(SwigcptrIntervalVarVector(C._wrap_new_IntervalVarVector__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewIntervalVarVector__SWIG_1(arg1 int64) (_swig_ret IntervalVarVector) {
	var swig_r IntervalVarVector
	_swig_i_0 := arg1
	swig_r = (IntervalVarVector)(SwigcptrIntervalVarVector(C._wrap_new_IntervalVarVector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_27(_swig_i_0))))
	return swig_r
}

func NewIntervalVarVector__SWIG_2(arg1 IntervalVarVector) (_swig_ret IntervalVarVector) {
	var swig_r IntervalVarVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (IntervalVarVector)(SwigcptrIntervalVarVector(C._wrap_new_IntervalVarVector__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewIntervalVarVector(a ...interface{}) IntervalVarVector {
	argc := len(a)
	if argc == 0 {
		return NewIntervalVarVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewIntervalVarVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewIntervalVarVector__SWIG_2(a[0].(IntervalVarVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVarVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarVector_size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarVector_capacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarVector_reserve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_30(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntervalVarVector_isEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_IntervalVarVector_clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntervalVarVector) Add(arg2 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVarVector_add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarVector) Get(arg2 int) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_IntervalVarVector_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVarVector) Set(arg2 int, arg3 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_IntervalVarVector_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteIntervalVarVector(arg1 IntervalVarVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntervalVarVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type IntervalVarVector interface {
	Swigcptr() uintptr
	SwigIsIntervalVarVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 IntervalVar)
	Get(arg2 int) (_swig_ret IntervalVar)
	Set(arg2 int, arg3 IntervalVar)
}

type SwigcptrSequenceVarVector uintptr

func (p SwigcptrSequenceVarVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSequenceVarVector) SwigIsSequenceVarVector() {
}

func NewSequenceVarVector__SWIG_0() (_swig_ret SequenceVarVector) {
	var swig_r SequenceVarVector
	swig_r = (SequenceVarVector)(SwigcptrSequenceVarVector(C._wrap_new_SequenceVarVector__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewSequenceVarVector__SWIG_1(arg1 int64) (_swig_ret SequenceVarVector) {
	var swig_r SequenceVarVector
	_swig_i_0 := arg1
	swig_r = (SequenceVarVector)(SwigcptrSequenceVarVector(C._wrap_new_SequenceVarVector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_31(_swig_i_0))))
	return swig_r
}

func NewSequenceVarVector__SWIG_2(arg1 SequenceVarVector) (_swig_ret SequenceVarVector) {
	var swig_r SequenceVarVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SequenceVarVector)(SwigcptrSequenceVarVector(C._wrap_new_SequenceVarVector__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSequenceVarVector(a ...interface{}) SequenceVarVector {
	argc := len(a)
	if argc == 0 {
		return NewSequenceVarVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewSequenceVarVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewSequenceVarVector__SWIG_2(a[0].(SequenceVarVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSequenceVarVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SequenceVarVector_size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequenceVarVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SequenceVarVector_capacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequenceVarVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SequenceVarVector_reserve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_34(_swig_i_1))
}

func (arg1 SwigcptrSequenceVarVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SequenceVarVector_isEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequenceVarVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_SequenceVarVector_clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSequenceVarVector) Add(arg2 SequenceVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SequenceVarVector_add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSequenceVarVector) Get(arg2 int) (_swig_ret SequenceVar) {
	var swig_r SequenceVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SequenceVar)(SwigcptrSequenceVar(C._wrap_SequenceVarVector_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSequenceVarVector) Set(arg2 int, arg3 SequenceVar) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_SequenceVarVector_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteSequenceVarVector(arg1 SequenceVarVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SequenceVarVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type SequenceVarVector interface {
	Swigcptr() uintptr
	SwigIsSequenceVarVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 SequenceVar)
	Get(arg2 int) (_swig_ret SequenceVar)
	Set(arg2 int, arg3 SequenceVar)
}

type SwigcptrLocalSearchOperatorVector uintptr

func (p SwigcptrLocalSearchOperatorVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLocalSearchOperatorVector) SwigIsLocalSearchOperatorVector() {
}

func NewLocalSearchOperatorVector__SWIG_0() (_swig_ret LocalSearchOperatorVector) {
	var swig_r LocalSearchOperatorVector
	swig_r = (LocalSearchOperatorVector)(SwigcptrLocalSearchOperatorVector(C._wrap_new_LocalSearchOperatorVector__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewLocalSearchOperatorVector__SWIG_1(arg1 int64) (_swig_ret LocalSearchOperatorVector) {
	var swig_r LocalSearchOperatorVector
	_swig_i_0 := arg1
	swig_r = (LocalSearchOperatorVector)(SwigcptrLocalSearchOperatorVector(C._wrap_new_LocalSearchOperatorVector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_35(_swig_i_0))))
	return swig_r
}

func NewLocalSearchOperatorVector__SWIG_2(arg1 LocalSearchOperatorVector) (_swig_ret LocalSearchOperatorVector) {
	var swig_r LocalSearchOperatorVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (LocalSearchOperatorVector)(SwigcptrLocalSearchOperatorVector(C._wrap_new_LocalSearchOperatorVector__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewLocalSearchOperatorVector(a ...interface{}) LocalSearchOperatorVector {
	argc := len(a)
	if argc == 0 {
		return NewLocalSearchOperatorVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewLocalSearchOperatorVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewLocalSearchOperatorVector__SWIG_2(a[0].(LocalSearchOperatorVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrLocalSearchOperatorVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LocalSearchOperatorVector_size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LocalSearchOperatorVector_capacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LocalSearchOperatorVector_reserve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_38(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchOperatorVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_LocalSearchOperatorVector_isEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchOperatorVector_clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchOperatorVector) Add(arg2 LocalSearchOperator) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_LocalSearchOperatorVector_add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchOperatorVector) Get(arg2 int) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_LocalSearchOperatorVector_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorVector) Set(arg2 int, arg3 LocalSearchOperator) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_LocalSearchOperatorVector_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteLocalSearchOperatorVector(arg1 LocalSearchOperatorVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LocalSearchOperatorVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type LocalSearchOperatorVector interface {
	Swigcptr() uintptr
	SwigIsLocalSearchOperatorVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 LocalSearchOperator)
	Get(arg2 int) (_swig_ret LocalSearchOperator)
	Set(arg2 int, arg3 LocalSearchOperator)
}

type SwigcptrLocalSearchFilterVector uintptr

func (p SwigcptrLocalSearchFilterVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLocalSearchFilterVector) SwigIsLocalSearchFilterVector() {
}

func NewLocalSearchFilterVector__SWIG_0() (_swig_ret LocalSearchFilterVector) {
	var swig_r LocalSearchFilterVector
	swig_r = (LocalSearchFilterVector)(SwigcptrLocalSearchFilterVector(C._wrap_new_LocalSearchFilterVector__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewLocalSearchFilterVector__SWIG_1(arg1 int64) (_swig_ret LocalSearchFilterVector) {
	var swig_r LocalSearchFilterVector
	_swig_i_0 := arg1
	swig_r = (LocalSearchFilterVector)(SwigcptrLocalSearchFilterVector(C._wrap_new_LocalSearchFilterVector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_39(_swig_i_0))))
	return swig_r
}

func NewLocalSearchFilterVector__SWIG_2(arg1 LocalSearchFilterVector) (_swig_ret LocalSearchFilterVector) {
	var swig_r LocalSearchFilterVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (LocalSearchFilterVector)(SwigcptrLocalSearchFilterVector(C._wrap_new_LocalSearchFilterVector__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewLocalSearchFilterVector(a ...interface{}) LocalSearchFilterVector {
	argc := len(a)
	if argc == 0 {
		return NewLocalSearchFilterVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewLocalSearchFilterVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewLocalSearchFilterVector__SWIG_2(a[0].(LocalSearchFilterVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrLocalSearchFilterVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LocalSearchFilterVector_size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilterVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LocalSearchFilterVector_capacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilterVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LocalSearchFilterVector_reserve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_42(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchFilterVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_LocalSearchFilterVector_isEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilterVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchFilterVector_clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchFilterVector) Add(arg2 LocalSearchFilter) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_LocalSearchFilterVector_add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchFilterVector) Get(arg2 int) (_swig_ret LocalSearchFilter) {
	var swig_r LocalSearchFilter
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (LocalSearchFilter)(SwigcptrLocalSearchFilter(C._wrap_LocalSearchFilterVector_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilterVector) Set(arg2 int, arg3 LocalSearchFilter) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_LocalSearchFilterVector_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteLocalSearchFilterVector(arg1 LocalSearchFilterVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LocalSearchFilterVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type LocalSearchFilterVector interface {
	Swigcptr() uintptr
	SwigIsLocalSearchFilterVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 LocalSearchFilter)
	Get(arg2 int) (_swig_ret LocalSearchFilter)
	Set(arg2 int, arg3 LocalSearchFilter)
}

type SwigcptrSymmetryBreakerVector uintptr

func (p SwigcptrSymmetryBreakerVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSymmetryBreakerVector) SwigIsSymmetryBreakerVector() {
}

func NewSymmetryBreakerVector__SWIG_0() (_swig_ret SymmetryBreakerVector) {
	var swig_r SymmetryBreakerVector
	swig_r = (SymmetryBreakerVector)(SwigcptrSymmetryBreakerVector(C._wrap_new_SymmetryBreakerVector__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewSymmetryBreakerVector__SWIG_1(arg1 int64) (_swig_ret SymmetryBreakerVector) {
	var swig_r SymmetryBreakerVector
	_swig_i_0 := arg1
	swig_r = (SymmetryBreakerVector)(SwigcptrSymmetryBreakerVector(C._wrap_new_SymmetryBreakerVector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_43(_swig_i_0))))
	return swig_r
}

func NewSymmetryBreakerVector__SWIG_2(arg1 SymmetryBreakerVector) (_swig_ret SymmetryBreakerVector) {
	var swig_r SymmetryBreakerVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SymmetryBreakerVector)(SwigcptrSymmetryBreakerVector(C._wrap_new_SymmetryBreakerVector__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSymmetryBreakerVector(a ...interface{}) SymmetryBreakerVector {
	argc := len(a)
	if argc == 0 {
		return NewSymmetryBreakerVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewSymmetryBreakerVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewSymmetryBreakerVector__SWIG_2(a[0].(SymmetryBreakerVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSymmetryBreakerVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SymmetryBreakerVector_size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSymmetryBreakerVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SymmetryBreakerVector_capacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSymmetryBreakerVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SymmetryBreakerVector_reserve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_46(_swig_i_1))
}

func (arg1 SwigcptrSymmetryBreakerVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SymmetryBreakerVector_isEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSymmetryBreakerVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_SymmetryBreakerVector_clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSymmetryBreakerVector) Add(arg2 SymmetryBreaker) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SymmetryBreakerVector_add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSymmetryBreakerVector) Get(arg2 int) (_swig_ret SymmetryBreaker) {
	var swig_r SymmetryBreaker
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SymmetryBreaker)(SwigcptrSymmetryBreaker(C._wrap_SymmetryBreakerVector_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSymmetryBreakerVector) Set(arg2 int, arg3 SymmetryBreaker) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_SymmetryBreakerVector_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteSymmetryBreakerVector(arg1 SymmetryBreakerVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SymmetryBreakerVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type SymmetryBreakerVector interface {
	Swigcptr() uintptr
	SwigIsSymmetryBreakerVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 SymmetryBreaker)
	Get(arg2 int) (_swig_ret SymmetryBreaker)
	Set(arg2 int, arg3 SymmetryBreaker)
}

func CpRandomSeed() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_CpRandomSeed_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

type SwigcptrDefaultPhaseParameters uintptr

func (p SwigcptrDefaultPhaseParameters) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDefaultPhaseParameters) SwigIsDefaultPhaseParameters() {
}

type Operations_researchDefaultPhaseParametersVariableSelection int
func _swig_getDefaultPhaseParameters_CHOOSE_MAX_SUM_IMPACT_DefaultPhaseParameters() (_swig_ret Operations_researchDefaultPhaseParametersVariableSelection) {
	var swig_r Operations_researchDefaultPhaseParametersVariableSelection
	swig_r = (Operations_researchDefaultPhaseParametersVariableSelection)(C._wrap_CHOOSE_MAX_SUM_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DefaultPhaseParametersCHOOSE_MAX_SUM_IMPACT Operations_researchDefaultPhaseParametersVariableSelection = _swig_getDefaultPhaseParameters_CHOOSE_MAX_SUM_IMPACT_DefaultPhaseParameters()
func _swig_getDefaultPhaseParameters_CHOOSE_MAX_AVERAGE_IMPACT_DefaultPhaseParameters() (_swig_ret Operations_researchDefaultPhaseParametersVariableSelection) {
	var swig_r Operations_researchDefaultPhaseParametersVariableSelection
	swig_r = (Operations_researchDefaultPhaseParametersVariableSelection)(C._wrap_CHOOSE_MAX_AVERAGE_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DefaultPhaseParametersCHOOSE_MAX_AVERAGE_IMPACT Operations_researchDefaultPhaseParametersVariableSelection = _swig_getDefaultPhaseParameters_CHOOSE_MAX_AVERAGE_IMPACT_DefaultPhaseParameters()
func _swig_getDefaultPhaseParameters_CHOOSE_MAX_VALUE_IMPACT_DefaultPhaseParameters() (_swig_ret Operations_researchDefaultPhaseParametersVariableSelection) {
	var swig_r Operations_researchDefaultPhaseParametersVariableSelection
	swig_r = (Operations_researchDefaultPhaseParametersVariableSelection)(C._wrap_CHOOSE_MAX_VALUE_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DefaultPhaseParametersCHOOSE_MAX_VALUE_IMPACT Operations_researchDefaultPhaseParametersVariableSelection = _swig_getDefaultPhaseParameters_CHOOSE_MAX_VALUE_IMPACT_DefaultPhaseParameters()
type Operations_researchDefaultPhaseParametersValueSelection int
func _swig_getDefaultPhaseParameters_SELECT_MIN_IMPACT_DefaultPhaseParameters() (_swig_ret Operations_researchDefaultPhaseParametersValueSelection) {
	var swig_r Operations_researchDefaultPhaseParametersValueSelection
	swig_r = (Operations_researchDefaultPhaseParametersValueSelection)(C._wrap_SELECT_MIN_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DefaultPhaseParametersSELECT_MIN_IMPACT Operations_researchDefaultPhaseParametersValueSelection = _swig_getDefaultPhaseParameters_SELECT_MIN_IMPACT_DefaultPhaseParameters()
func _swig_getDefaultPhaseParameters_SELECT_MAX_IMPACT_DefaultPhaseParameters() (_swig_ret Operations_researchDefaultPhaseParametersValueSelection) {
	var swig_r Operations_researchDefaultPhaseParametersValueSelection
	swig_r = (Operations_researchDefaultPhaseParametersValueSelection)(C._wrap_SELECT_MAX_IMPACT_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DefaultPhaseParametersSELECT_MAX_IMPACT Operations_researchDefaultPhaseParametersValueSelection = _swig_getDefaultPhaseParameters_SELECT_MAX_IMPACT_DefaultPhaseParameters()
type Operations_researchDefaultPhaseParametersDisplayLevel int
func _swig_getDefaultPhaseParameters_NONE_DefaultPhaseParameters() (_swig_ret Operations_researchDefaultPhaseParametersDisplayLevel) {
	var swig_r Operations_researchDefaultPhaseParametersDisplayLevel
	swig_r = (Operations_researchDefaultPhaseParametersDisplayLevel)(C._wrap_NONE_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DefaultPhaseParametersNONE Operations_researchDefaultPhaseParametersDisplayLevel = _swig_getDefaultPhaseParameters_NONE_DefaultPhaseParameters()
func _swig_getDefaultPhaseParameters_NORMAL_DefaultPhaseParameters() (_swig_ret Operations_researchDefaultPhaseParametersDisplayLevel) {
	var swig_r Operations_researchDefaultPhaseParametersDisplayLevel
	swig_r = (Operations_researchDefaultPhaseParametersDisplayLevel)(C._wrap_NORMAL_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DefaultPhaseParametersNORMAL Operations_researchDefaultPhaseParametersDisplayLevel = _swig_getDefaultPhaseParameters_NORMAL_DefaultPhaseParameters()
func _swig_getDefaultPhaseParameters_VERBOSE_DefaultPhaseParameters() (_swig_ret Operations_researchDefaultPhaseParametersDisplayLevel) {
	var swig_r Operations_researchDefaultPhaseParametersDisplayLevel
	swig_r = (Operations_researchDefaultPhaseParametersDisplayLevel)(C._wrap_VERBOSE_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DefaultPhaseParametersVERBOSE Operations_researchDefaultPhaseParametersDisplayLevel = _swig_getDefaultPhaseParameters_VERBOSE_DefaultPhaseParameters()
func (arg1 SwigcptrDefaultPhaseParameters) SetVar_selection_schema(arg2 Operations_researchDefaultPhaseParametersVariableSelection) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_var_selection_schema_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetVar_selection_schema() (_swig_ret Operations_researchDefaultPhaseParametersVariableSelection) {
	var swig_r Operations_researchDefaultPhaseParametersVariableSelection
	_swig_i_0 := arg1
	swig_r = (Operations_researchDefaultPhaseParametersVariableSelection)(C._wrap_DefaultPhaseParameters_var_selection_schema_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetValue_selection_schema(arg2 Operations_researchDefaultPhaseParametersValueSelection) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_value_selection_schema_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetValue_selection_schema() (_swig_ret Operations_researchDefaultPhaseParametersValueSelection) {
	var swig_r Operations_researchDefaultPhaseParametersValueSelection
	_swig_i_0 := arg1
	swig_r = (Operations_researchDefaultPhaseParametersValueSelection)(C._wrap_DefaultPhaseParameters_value_selection_schema_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetInitialization_splits(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_initialization_splits_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetInitialization_splits() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DefaultPhaseParameters_initialization_splits_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetRun_all_heuristics(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_run_all_heuristics_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetRun_all_heuristics() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DefaultPhaseParameters_run_all_heuristics_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetHeuristic_period(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_heuristic_period_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetHeuristic_period() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DefaultPhaseParameters_heuristic_period_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetHeuristic_num_failures_limit(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_heuristic_num_failures_limit_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetHeuristic_num_failures_limit() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DefaultPhaseParameters_heuristic_num_failures_limit_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetPersistent_impact(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_persistent_impact_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetPersistent_impact() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DefaultPhaseParameters_persistent_impact_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetRandom_seed(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_random_seed_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetRandom_seed() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DefaultPhaseParameters_random_seed_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetDisplay_level(arg2 Operations_researchDefaultPhaseParametersDisplayLevel) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_display_level_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetDisplay_level() (_swig_ret Operations_researchDefaultPhaseParametersDisplayLevel) {
	var swig_r Operations_researchDefaultPhaseParametersDisplayLevel
	_swig_i_0 := arg1
	swig_r = (Operations_researchDefaultPhaseParametersDisplayLevel)(C._wrap_DefaultPhaseParameters_display_level_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetUse_last_conflict(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DefaultPhaseParameters_use_last_conflict_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetUse_last_conflict() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DefaultPhaseParameters_use_last_conflict_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDefaultPhaseParameters) SetDecision_builder(arg2 DecisionBuilder) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_DefaultPhaseParameters_decision_builder_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDefaultPhaseParameters) GetDecision_builder() (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_DefaultPhaseParameters_decision_builder_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDefaultPhaseParameters() (_swig_ret DefaultPhaseParameters) {
	var swig_r DefaultPhaseParameters
	swig_r = (DefaultPhaseParameters)(SwigcptrDefaultPhaseParameters(C._wrap_new_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func DeleteDefaultPhaseParameters(arg1 DefaultPhaseParameters) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_DefaultPhaseParameters_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type DefaultPhaseParameters interface {
	Swigcptr() uintptr
	SwigIsDefaultPhaseParameters()
	SetVar_selection_schema(arg2 Operations_researchDefaultPhaseParametersVariableSelection)
	GetVar_selection_schema() (_swig_ret Operations_researchDefaultPhaseParametersVariableSelection)
	SetValue_selection_schema(arg2 Operations_researchDefaultPhaseParametersValueSelection)
	GetValue_selection_schema() (_swig_ret Operations_researchDefaultPhaseParametersValueSelection)
	SetInitialization_splits(arg2 int)
	GetInitialization_splits() (_swig_ret int)
	SetRun_all_heuristics(arg2 bool)
	GetRun_all_heuristics() (_swig_ret bool)
	SetHeuristic_period(arg2 int)
	GetHeuristic_period() (_swig_ret int)
	SetHeuristic_num_failures_limit(arg2 int)
	GetHeuristic_num_failures_limit() (_swig_ret int)
	SetPersistent_impact(arg2 bool)
	GetPersistent_impact() (_swig_ret bool)
	SetRandom_seed(arg2 int)
	GetRandom_seed() (_swig_ret int)
	SetDisplay_level(arg2 Operations_researchDefaultPhaseParametersDisplayLevel)
	GetDisplay_level() (_swig_ret Operations_researchDefaultPhaseParametersDisplayLevel)
	SetUse_last_conflict(arg2 bool)
	GetUse_last_conflict() (_swig_ret bool)
	SetDecision_builder(arg2 DecisionBuilder)
	GetDecision_builder() (_swig_ret DecisionBuilder)
}

type SwigcptrSolver uintptr

func (p SwigcptrSolver) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSolver) SwigIsSolver() {
}

func _swig_getSolver_Solver_kNumPriorities_Solver() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Solver_kNumPriorities_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverKNumPriorities int = _swig_getSolver_Solver_kNumPriorities_Solver()
type Operations_researchSolverIntVarStrategy int
func _swig_getSolver_INT_VAR_DEFAULT_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_INT_VAR_DEFAULT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINT_VAR_DEFAULT Operations_researchSolverIntVarStrategy = _swig_getSolver_INT_VAR_DEFAULT_Solver()
func _swig_getSolver_INT_VAR_SIMPLE_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_INT_VAR_SIMPLE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINT_VAR_SIMPLE Operations_researchSolverIntVarStrategy = _swig_getSolver_INT_VAR_SIMPLE_Solver()
func _swig_getSolver_CHOOSE_FIRST_UNBOUND_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_FIRST_UNBOUND_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_FIRST_UNBOUND Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_FIRST_UNBOUND_Solver()
func _swig_getSolver_CHOOSE_RANDOM_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_RANDOM_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_RANDOM Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_RANDOM_Solver()
func _swig_getSolver_CHOOSE_MIN_SIZE_LOWEST_MIN_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_MIN_SIZE_LOWEST_MIN_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_MIN_SIZE_LOWEST_MIN Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_MIN_SIZE_LOWEST_MIN_Solver()
func _swig_getSolver_CHOOSE_MIN_SIZE_HIGHEST_MIN_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_MIN_SIZE_HIGHEST_MIN_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_MIN_SIZE_HIGHEST_MIN Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_MIN_SIZE_HIGHEST_MIN_Solver()
func _swig_getSolver_CHOOSE_MIN_SIZE_LOWEST_MAX_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_MIN_SIZE_LOWEST_MAX_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_MIN_SIZE_LOWEST_MAX Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_MIN_SIZE_LOWEST_MAX_Solver()
func _swig_getSolver_CHOOSE_MIN_SIZE_HIGHEST_MAX_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_MIN_SIZE_HIGHEST_MAX_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_MIN_SIZE_HIGHEST_MAX Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_MIN_SIZE_HIGHEST_MAX_Solver()
func _swig_getSolver_CHOOSE_LOWEST_MIN_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_LOWEST_MIN_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_LOWEST_MIN Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_LOWEST_MIN_Solver()
func _swig_getSolver_CHOOSE_HIGHEST_MAX_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_HIGHEST_MAX_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_HIGHEST_MAX Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_HIGHEST_MAX_Solver()
func _swig_getSolver_CHOOSE_MIN_SIZE_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_MIN_SIZE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_MIN_SIZE Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_MIN_SIZE_Solver()
func _swig_getSolver_CHOOSE_MAX_SIZE_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_MAX_SIZE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_MAX_SIZE Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_MAX_SIZE_Solver()
func _swig_getSolver_CHOOSE_MAX_REGRET_ON_MIN_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_MAX_REGRET_ON_MIN_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_MAX_REGRET_ON_MIN Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_MAX_REGRET_ON_MIN_Solver()
func _swig_getSolver_CHOOSE_PATH_Solver() (_swig_ret Operations_researchSolverIntVarStrategy) {
	var swig_r Operations_researchSolverIntVarStrategy
	swig_r = (Operations_researchSolverIntVarStrategy)(C._wrap_CHOOSE_PATH_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_PATH Operations_researchSolverIntVarStrategy = _swig_getSolver_CHOOSE_PATH_Solver()
type Operations_researchSolverIntValueStrategy int
func _swig_getSolver_INT_VALUE_DEFAULT_Solver() (_swig_ret Operations_researchSolverIntValueStrategy) {
	var swig_r Operations_researchSolverIntValueStrategy
	swig_r = (Operations_researchSolverIntValueStrategy)(C._wrap_INT_VALUE_DEFAULT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINT_VALUE_DEFAULT Operations_researchSolverIntValueStrategy = _swig_getSolver_INT_VALUE_DEFAULT_Solver()
func _swig_getSolver_INT_VALUE_SIMPLE_Solver() (_swig_ret Operations_researchSolverIntValueStrategy) {
	var swig_r Operations_researchSolverIntValueStrategy
	swig_r = (Operations_researchSolverIntValueStrategy)(C._wrap_INT_VALUE_SIMPLE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINT_VALUE_SIMPLE Operations_researchSolverIntValueStrategy = _swig_getSolver_INT_VALUE_SIMPLE_Solver()
func _swig_getSolver_ASSIGN_MIN_VALUE_Solver() (_swig_ret Operations_researchSolverIntValueStrategy) {
	var swig_r Operations_researchSolverIntValueStrategy
	swig_r = (Operations_researchSolverIntValueStrategy)(C._wrap_ASSIGN_MIN_VALUE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverASSIGN_MIN_VALUE Operations_researchSolverIntValueStrategy = _swig_getSolver_ASSIGN_MIN_VALUE_Solver()
func _swig_getSolver_ASSIGN_MAX_VALUE_Solver() (_swig_ret Operations_researchSolverIntValueStrategy) {
	var swig_r Operations_researchSolverIntValueStrategy
	swig_r = (Operations_researchSolverIntValueStrategy)(C._wrap_ASSIGN_MAX_VALUE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverASSIGN_MAX_VALUE Operations_researchSolverIntValueStrategy = _swig_getSolver_ASSIGN_MAX_VALUE_Solver()
func _swig_getSolver_ASSIGN_RANDOM_VALUE_Solver() (_swig_ret Operations_researchSolverIntValueStrategy) {
	var swig_r Operations_researchSolverIntValueStrategy
	swig_r = (Operations_researchSolverIntValueStrategy)(C._wrap_ASSIGN_RANDOM_VALUE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverASSIGN_RANDOM_VALUE Operations_researchSolverIntValueStrategy = _swig_getSolver_ASSIGN_RANDOM_VALUE_Solver()
func _swig_getSolver_ASSIGN_CENTER_VALUE_Solver() (_swig_ret Operations_researchSolverIntValueStrategy) {
	var swig_r Operations_researchSolverIntValueStrategy
	swig_r = (Operations_researchSolverIntValueStrategy)(C._wrap_ASSIGN_CENTER_VALUE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverASSIGN_CENTER_VALUE Operations_researchSolverIntValueStrategy = _swig_getSolver_ASSIGN_CENTER_VALUE_Solver()
func _swig_getSolver_SPLIT_LOWER_HALF_Solver() (_swig_ret Operations_researchSolverIntValueStrategy) {
	var swig_r Operations_researchSolverIntValueStrategy
	swig_r = (Operations_researchSolverIntValueStrategy)(C._wrap_SPLIT_LOWER_HALF_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSPLIT_LOWER_HALF Operations_researchSolverIntValueStrategy = _swig_getSolver_SPLIT_LOWER_HALF_Solver()
func _swig_getSolver_SPLIT_UPPER_HALF_Solver() (_swig_ret Operations_researchSolverIntValueStrategy) {
	var swig_r Operations_researchSolverIntValueStrategy
	swig_r = (Operations_researchSolverIntValueStrategy)(C._wrap_SPLIT_UPPER_HALF_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSPLIT_UPPER_HALF Operations_researchSolverIntValueStrategy = _swig_getSolver_SPLIT_UPPER_HALF_Solver()
type Operations_researchSolverEvaluatorStrategy int
func _swig_getSolver_CHOOSE_STATIC_GLOBAL_BEST_Solver() (_swig_ret Operations_researchSolverEvaluatorStrategy) {
	var swig_r Operations_researchSolverEvaluatorStrategy
	swig_r = (Operations_researchSolverEvaluatorStrategy)(C._wrap_CHOOSE_STATIC_GLOBAL_BEST_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_STATIC_GLOBAL_BEST Operations_researchSolverEvaluatorStrategy = _swig_getSolver_CHOOSE_STATIC_GLOBAL_BEST_Solver()
func _swig_getSolver_CHOOSE_DYNAMIC_GLOBAL_BEST_Solver() (_swig_ret Operations_researchSolverEvaluatorStrategy) {
	var swig_r Operations_researchSolverEvaluatorStrategy
	swig_r = (Operations_researchSolverEvaluatorStrategy)(C._wrap_CHOOSE_DYNAMIC_GLOBAL_BEST_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_DYNAMIC_GLOBAL_BEST Operations_researchSolverEvaluatorStrategy = _swig_getSolver_CHOOSE_DYNAMIC_GLOBAL_BEST_Solver()
type Operations_researchSolverSequenceStrategy int
func _swig_getSolver_SEQUENCE_DEFAULT_Solver() (_swig_ret Operations_researchSolverSequenceStrategy) {
	var swig_r Operations_researchSolverSequenceStrategy
	swig_r = (Operations_researchSolverSequenceStrategy)(C._wrap_SEQUENCE_DEFAULT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSEQUENCE_DEFAULT Operations_researchSolverSequenceStrategy = _swig_getSolver_SEQUENCE_DEFAULT_Solver()
func _swig_getSolver_SEQUENCE_SIMPLE_Solver() (_swig_ret Operations_researchSolverSequenceStrategy) {
	var swig_r Operations_researchSolverSequenceStrategy
	swig_r = (Operations_researchSolverSequenceStrategy)(C._wrap_SEQUENCE_SIMPLE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSEQUENCE_SIMPLE Operations_researchSolverSequenceStrategy = _swig_getSolver_SEQUENCE_SIMPLE_Solver()
func _swig_getSolver_CHOOSE_MIN_SLACK_RANK_FORWARD_Solver() (_swig_ret Operations_researchSolverSequenceStrategy) {
	var swig_r Operations_researchSolverSequenceStrategy
	swig_r = (Operations_researchSolverSequenceStrategy)(C._wrap_CHOOSE_MIN_SLACK_RANK_FORWARD_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_MIN_SLACK_RANK_FORWARD Operations_researchSolverSequenceStrategy = _swig_getSolver_CHOOSE_MIN_SLACK_RANK_FORWARD_Solver()
func _swig_getSolver_CHOOSE_RANDOM_RANK_FORWARD_Solver() (_swig_ret Operations_researchSolverSequenceStrategy) {
	var swig_r Operations_researchSolverSequenceStrategy
	swig_r = (Operations_researchSolverSequenceStrategy)(C._wrap_CHOOSE_RANDOM_RANK_FORWARD_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOOSE_RANDOM_RANK_FORWARD Operations_researchSolverSequenceStrategy = _swig_getSolver_CHOOSE_RANDOM_RANK_FORWARD_Solver()
type Operations_researchSolverIntervalStrategy int
func _swig_getSolver_INTERVAL_DEFAULT_Solver() (_swig_ret Operations_researchSolverIntervalStrategy) {
	var swig_r Operations_researchSolverIntervalStrategy
	swig_r = (Operations_researchSolverIntervalStrategy)(C._wrap_INTERVAL_DEFAULT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINTERVAL_DEFAULT Operations_researchSolverIntervalStrategy = _swig_getSolver_INTERVAL_DEFAULT_Solver()
func _swig_getSolver_INTERVAL_SIMPLE_Solver() (_swig_ret Operations_researchSolverIntervalStrategy) {
	var swig_r Operations_researchSolverIntervalStrategy
	swig_r = (Operations_researchSolverIntervalStrategy)(C._wrap_INTERVAL_SIMPLE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINTERVAL_SIMPLE Operations_researchSolverIntervalStrategy = _swig_getSolver_INTERVAL_SIMPLE_Solver()
func _swig_getSolver_INTERVAL_SET_TIMES_FORWARD_Solver() (_swig_ret Operations_researchSolverIntervalStrategy) {
	var swig_r Operations_researchSolverIntervalStrategy
	swig_r = (Operations_researchSolverIntervalStrategy)(C._wrap_INTERVAL_SET_TIMES_FORWARD_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINTERVAL_SET_TIMES_FORWARD Operations_researchSolverIntervalStrategy = _swig_getSolver_INTERVAL_SET_TIMES_FORWARD_Solver()
func _swig_getSolver_INTERVAL_SET_TIMES_BACKWARD_Solver() (_swig_ret Operations_researchSolverIntervalStrategy) {
	var swig_r Operations_researchSolverIntervalStrategy
	swig_r = (Operations_researchSolverIntervalStrategy)(C._wrap_INTERVAL_SET_TIMES_BACKWARD_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINTERVAL_SET_TIMES_BACKWARD Operations_researchSolverIntervalStrategy = _swig_getSolver_INTERVAL_SET_TIMES_BACKWARD_Solver()
type Operations_researchSolverLocalSearchOperators int
func _swig_getSolver_TWOOPT_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_TWOOPT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverTWOOPT Operations_researchSolverLocalSearchOperators = _swig_getSolver_TWOOPT_Solver()
func _swig_getSolver_OROPT_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_OROPT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverOROPT Operations_researchSolverLocalSearchOperators = _swig_getSolver_OROPT_Solver()
func _swig_getSolver_RELOCATE_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_RELOCATE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverRELOCATE Operations_researchSolverLocalSearchOperators = _swig_getSolver_RELOCATE_Solver()
func _swig_getSolver_EXCHANGE_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_EXCHANGE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverEXCHANGE Operations_researchSolverLocalSearchOperators = _swig_getSolver_EXCHANGE_Solver()
func _swig_getSolver_CROSS_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_CROSS_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCROSS Operations_researchSolverLocalSearchOperators = _swig_getSolver_CROSS_Solver()
func _swig_getSolver_MAKEACTIVE_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_MAKEACTIVE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverMAKEACTIVE Operations_researchSolverLocalSearchOperators = _swig_getSolver_MAKEACTIVE_Solver()
func _swig_getSolver_MAKEINACTIVE_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_MAKEINACTIVE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverMAKEINACTIVE Operations_researchSolverLocalSearchOperators = _swig_getSolver_MAKEINACTIVE_Solver()
func _swig_getSolver_MAKECHAININACTIVE_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_MAKECHAININACTIVE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverMAKECHAININACTIVE Operations_researchSolverLocalSearchOperators = _swig_getSolver_MAKECHAININACTIVE_Solver()
func _swig_getSolver_SWAPACTIVE_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_SWAPACTIVE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSWAPACTIVE Operations_researchSolverLocalSearchOperators = _swig_getSolver_SWAPACTIVE_Solver()
func _swig_getSolver_EXTENDEDSWAPACTIVE_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_EXTENDEDSWAPACTIVE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverEXTENDEDSWAPACTIVE Operations_researchSolverLocalSearchOperators = _swig_getSolver_EXTENDEDSWAPACTIVE_Solver()
func _swig_getSolver_PATHLNS_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_PATHLNS_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverPATHLNS Operations_researchSolverLocalSearchOperators = _swig_getSolver_PATHLNS_Solver()
func _swig_getSolver_FULLPATHLNS_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_FULLPATHLNS_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverFULLPATHLNS Operations_researchSolverLocalSearchOperators = _swig_getSolver_FULLPATHLNS_Solver()
func _swig_getSolver_UNACTIVELNS_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_UNACTIVELNS_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverUNACTIVELNS Operations_researchSolverLocalSearchOperators = _swig_getSolver_UNACTIVELNS_Solver()
func _swig_getSolver_INCREMENT_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_INCREMENT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverINCREMENT Operations_researchSolverLocalSearchOperators = _swig_getSolver_INCREMENT_Solver()
func _swig_getSolver_DECREMENT_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_DECREMENT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverDECREMENT Operations_researchSolverLocalSearchOperators = _swig_getSolver_DECREMENT_Solver()
func _swig_getSolver_SIMPLELNS_Solver() (_swig_ret Operations_researchSolverLocalSearchOperators) {
	var swig_r Operations_researchSolverLocalSearchOperators
	swig_r = (Operations_researchSolverLocalSearchOperators)(C._wrap_SIMPLELNS_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSIMPLELNS Operations_researchSolverLocalSearchOperators = _swig_getSolver_SIMPLELNS_Solver()
type Operations_researchSolverEvaluatorLocalSearchOperators int
func _swig_getSolver_LK_Solver() (_swig_ret Operations_researchSolverEvaluatorLocalSearchOperators) {
	var swig_r Operations_researchSolverEvaluatorLocalSearchOperators
	swig_r = (Operations_researchSolverEvaluatorLocalSearchOperators)(C._wrap_LK_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverLK Operations_researchSolverEvaluatorLocalSearchOperators = _swig_getSolver_LK_Solver()
func _swig_getSolver_TSPOPT_Solver() (_swig_ret Operations_researchSolverEvaluatorLocalSearchOperators) {
	var swig_r Operations_researchSolverEvaluatorLocalSearchOperators
	swig_r = (Operations_researchSolverEvaluatorLocalSearchOperators)(C._wrap_TSPOPT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverTSPOPT Operations_researchSolverEvaluatorLocalSearchOperators = _swig_getSolver_TSPOPT_Solver()
func _swig_getSolver_TSPLNS_Solver() (_swig_ret Operations_researchSolverEvaluatorLocalSearchOperators) {
	var swig_r Operations_researchSolverEvaluatorLocalSearchOperators
	swig_r = (Operations_researchSolverEvaluatorLocalSearchOperators)(C._wrap_TSPLNS_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverTSPLNS Operations_researchSolverEvaluatorLocalSearchOperators = _swig_getSolver_TSPLNS_Solver()
type Operations_researchSolverLocalSearchFilterBound int
func _swig_getSolver_GE_Solver() (_swig_ret Operations_researchSolverLocalSearchFilterBound) {
	var swig_r Operations_researchSolverLocalSearchFilterBound
	swig_r = (Operations_researchSolverLocalSearchFilterBound)(C._wrap_GE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverGE Operations_researchSolverLocalSearchFilterBound = _swig_getSolver_GE_Solver()
func _swig_getSolver_LE_Solver() (_swig_ret Operations_researchSolverLocalSearchFilterBound) {
	var swig_r Operations_researchSolverLocalSearchFilterBound
	swig_r = (Operations_researchSolverLocalSearchFilterBound)(C._wrap_LE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverLE Operations_researchSolverLocalSearchFilterBound = _swig_getSolver_LE_Solver()
func _swig_getSolver_EQ_Solver() (_swig_ret Operations_researchSolverLocalSearchFilterBound) {
	var swig_r Operations_researchSolverLocalSearchFilterBound
	swig_r = (Operations_researchSolverLocalSearchFilterBound)(C._wrap_EQ_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverEQ Operations_researchSolverLocalSearchFilterBound = _swig_getSolver_EQ_Solver()
type Operations_researchSolverDemonPriority int
func _swig_getSolver_DELAYED_PRIORITY_Solver() (_swig_ret Operations_researchSolverDemonPriority) {
	var swig_r Operations_researchSolverDemonPriority
	swig_r = (Operations_researchSolverDemonPriority)(C._wrap_DELAYED_PRIORITY_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverDELAYED_PRIORITY Operations_researchSolverDemonPriority = _swig_getSolver_DELAYED_PRIORITY_Solver()
func _swig_getSolver_VAR_PRIORITY_Solver() (_swig_ret Operations_researchSolverDemonPriority) {
	var swig_r Operations_researchSolverDemonPriority
	swig_r = (Operations_researchSolverDemonPriority)(C._wrap_VAR_PRIORITY_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverVAR_PRIORITY Operations_researchSolverDemonPriority = _swig_getSolver_VAR_PRIORITY_Solver()
func _swig_getSolver_NORMAL_PRIORITY_Solver() (_swig_ret Operations_researchSolverDemonPriority) {
	var swig_r Operations_researchSolverDemonPriority
	swig_r = (Operations_researchSolverDemonPriority)(C._wrap_NORMAL_PRIORITY_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverNORMAL_PRIORITY Operations_researchSolverDemonPriority = _swig_getSolver_NORMAL_PRIORITY_Solver()
type Operations_researchSolverBinaryIntervalRelation int
func _swig_getSolver_ENDS_AFTER_END_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_ENDS_AFTER_END_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverENDS_AFTER_END Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_ENDS_AFTER_END_Solver()
func _swig_getSolver_ENDS_AFTER_START_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_ENDS_AFTER_START_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverENDS_AFTER_START Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_ENDS_AFTER_START_Solver()
func _swig_getSolver_ENDS_AT_END_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_ENDS_AT_END_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverENDS_AT_END Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_ENDS_AT_END_Solver()
func _swig_getSolver_ENDS_AT_START_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_ENDS_AT_START_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverENDS_AT_START Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_ENDS_AT_START_Solver()
func _swig_getSolver_STARTS_AFTER_END_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_STARTS_AFTER_END_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSTARTS_AFTER_END Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_STARTS_AFTER_END_Solver()
func _swig_getSolver_STARTS_AFTER_START_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_STARTS_AFTER_START_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSTARTS_AFTER_START Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_STARTS_AFTER_START_Solver()
func _swig_getSolver_STARTS_AT_END_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_STARTS_AT_END_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSTARTS_AT_END Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_STARTS_AT_END_Solver()
func _swig_getSolver_STARTS_AT_START_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_STARTS_AT_START_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSTARTS_AT_START Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_STARTS_AT_START_Solver()
func _swig_getSolver_STAYS_IN_SYNC_Solver() (_swig_ret Operations_researchSolverBinaryIntervalRelation) {
	var swig_r Operations_researchSolverBinaryIntervalRelation
	swig_r = (Operations_researchSolverBinaryIntervalRelation)(C._wrap_STAYS_IN_SYNC_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSTAYS_IN_SYNC Operations_researchSolverBinaryIntervalRelation = _swig_getSolver_STAYS_IN_SYNC_Solver()
type Operations_researchSolverUnaryIntervalRelation int
func _swig_getSolver_ENDS_AFTER_Solver() (_swig_ret Operations_researchSolverUnaryIntervalRelation) {
	var swig_r Operations_researchSolverUnaryIntervalRelation
	swig_r = (Operations_researchSolverUnaryIntervalRelation)(C._wrap_ENDS_AFTER_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverENDS_AFTER Operations_researchSolverUnaryIntervalRelation = _swig_getSolver_ENDS_AFTER_Solver()
func _swig_getSolver_ENDS_AT_Solver() (_swig_ret Operations_researchSolverUnaryIntervalRelation) {
	var swig_r Operations_researchSolverUnaryIntervalRelation
	swig_r = (Operations_researchSolverUnaryIntervalRelation)(C._wrap_ENDS_AT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverENDS_AT Operations_researchSolverUnaryIntervalRelation = _swig_getSolver_ENDS_AT_Solver()
func _swig_getSolver_ENDS_BEFORE_Solver() (_swig_ret Operations_researchSolverUnaryIntervalRelation) {
	var swig_r Operations_researchSolverUnaryIntervalRelation
	swig_r = (Operations_researchSolverUnaryIntervalRelation)(C._wrap_ENDS_BEFORE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverENDS_BEFORE Operations_researchSolverUnaryIntervalRelation = _swig_getSolver_ENDS_BEFORE_Solver()
func _swig_getSolver_STARTS_AFTER_Solver() (_swig_ret Operations_researchSolverUnaryIntervalRelation) {
	var swig_r Operations_researchSolverUnaryIntervalRelation
	swig_r = (Operations_researchSolverUnaryIntervalRelation)(C._wrap_STARTS_AFTER_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSTARTS_AFTER Operations_researchSolverUnaryIntervalRelation = _swig_getSolver_STARTS_AFTER_Solver()
func _swig_getSolver_STARTS_AT_Solver() (_swig_ret Operations_researchSolverUnaryIntervalRelation) {
	var swig_r Operations_researchSolverUnaryIntervalRelation
	swig_r = (Operations_researchSolverUnaryIntervalRelation)(C._wrap_STARTS_AT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSTARTS_AT Operations_researchSolverUnaryIntervalRelation = _swig_getSolver_STARTS_AT_Solver()
func _swig_getSolver_STARTS_BEFORE_Solver() (_swig_ret Operations_researchSolverUnaryIntervalRelation) {
	var swig_r Operations_researchSolverUnaryIntervalRelation
	swig_r = (Operations_researchSolverUnaryIntervalRelation)(C._wrap_STARTS_BEFORE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSTARTS_BEFORE Operations_researchSolverUnaryIntervalRelation = _swig_getSolver_STARTS_BEFORE_Solver()
func _swig_getSolver_CROSS_DATE_Solver() (_swig_ret Operations_researchSolverUnaryIntervalRelation) {
	var swig_r Operations_researchSolverUnaryIntervalRelation
	swig_r = (Operations_researchSolverUnaryIntervalRelation)(C._wrap_CROSS_DATE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCROSS_DATE Operations_researchSolverUnaryIntervalRelation = _swig_getSolver_CROSS_DATE_Solver()
func _swig_getSolver_AVOID_DATE_Solver() (_swig_ret Operations_researchSolverUnaryIntervalRelation) {
	var swig_r Operations_researchSolverUnaryIntervalRelation
	swig_r = (Operations_researchSolverUnaryIntervalRelation)(C._wrap_AVOID_DATE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverAVOID_DATE Operations_researchSolverUnaryIntervalRelation = _swig_getSolver_AVOID_DATE_Solver()
type Operations_researchSolverDecisionModification int
func _swig_getSolver_NO_CHANGE_Solver() (_swig_ret Operations_researchSolverDecisionModification) {
	var swig_r Operations_researchSolverDecisionModification
	swig_r = (Operations_researchSolverDecisionModification)(C._wrap_NO_CHANGE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverNO_CHANGE Operations_researchSolverDecisionModification = _swig_getSolver_NO_CHANGE_Solver()
func _swig_getSolver_KEEP_LEFT_Solver() (_swig_ret Operations_researchSolverDecisionModification) {
	var swig_r Operations_researchSolverDecisionModification
	swig_r = (Operations_researchSolverDecisionModification)(C._wrap_KEEP_LEFT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverKEEP_LEFT Operations_researchSolverDecisionModification = _swig_getSolver_KEEP_LEFT_Solver()
func _swig_getSolver_KEEP_RIGHT_Solver() (_swig_ret Operations_researchSolverDecisionModification) {
	var swig_r Operations_researchSolverDecisionModification
	swig_r = (Operations_researchSolverDecisionModification)(C._wrap_KEEP_RIGHT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverKEEP_RIGHT Operations_researchSolverDecisionModification = _swig_getSolver_KEEP_RIGHT_Solver()
func _swig_getSolver_KILL_BOTH_Solver() (_swig_ret Operations_researchSolverDecisionModification) {
	var swig_r Operations_researchSolverDecisionModification
	swig_r = (Operations_researchSolverDecisionModification)(C._wrap_KILL_BOTH_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverKILL_BOTH Operations_researchSolverDecisionModification = _swig_getSolver_KILL_BOTH_Solver()
func _swig_getSolver_SWITCH_BRANCHES_Solver() (_swig_ret Operations_researchSolverDecisionModification) {
	var swig_r Operations_researchSolverDecisionModification
	swig_r = (Operations_researchSolverDecisionModification)(C._wrap_SWITCH_BRANCHES_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSWITCH_BRANCHES Operations_researchSolverDecisionModification = _swig_getSolver_SWITCH_BRANCHES_Solver()
type Operations_researchSolverMarkerType int
func _swig_getSolver_SENTINEL_Solver() (_swig_ret Operations_researchSolverMarkerType) {
	var swig_r Operations_researchSolverMarkerType
	swig_r = (Operations_researchSolverMarkerType)(C._wrap_SENTINEL_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSENTINEL Operations_researchSolverMarkerType = _swig_getSolver_SENTINEL_Solver()
func _swig_getSolver_SIMPLE_MARKER_Solver() (_swig_ret Operations_researchSolverMarkerType) {
	var swig_r Operations_researchSolverMarkerType
	swig_r = (Operations_researchSolverMarkerType)(C._wrap_SIMPLE_MARKER_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverSIMPLE_MARKER Operations_researchSolverMarkerType = _swig_getSolver_SIMPLE_MARKER_Solver()
func _swig_getSolver_CHOICE_POINT_Solver() (_swig_ret Operations_researchSolverMarkerType) {
	var swig_r Operations_researchSolverMarkerType
	swig_r = (Operations_researchSolverMarkerType)(C._wrap_CHOICE_POINT_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverCHOICE_POINT Operations_researchSolverMarkerType = _swig_getSolver_CHOICE_POINT_Solver()
func _swig_getSolver_REVERSIBLE_ACTION_Solver() (_swig_ret Operations_researchSolverMarkerType) {
	var swig_r Operations_researchSolverMarkerType
	swig_r = (Operations_researchSolverMarkerType)(C._wrap_REVERSIBLE_ACTION_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverREVERSIBLE_ACTION Operations_researchSolverMarkerType = _swig_getSolver_REVERSIBLE_ACTION_Solver()
type Operations_researchSolverSolverState int
func _swig_getSolver_OUTSIDE_SEARCH_Solver() (_swig_ret Operations_researchSolverSolverState) {
	var swig_r Operations_researchSolverSolverState
	swig_r = (Operations_researchSolverSolverState)(C._wrap_OUTSIDE_SEARCH_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverOUTSIDE_SEARCH Operations_researchSolverSolverState = _swig_getSolver_OUTSIDE_SEARCH_Solver()
func _swig_getSolver_IN_ROOT_NODE_Solver() (_swig_ret Operations_researchSolverSolverState) {
	var swig_r Operations_researchSolverSolverState
	swig_r = (Operations_researchSolverSolverState)(C._wrap_IN_ROOT_NODE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverIN_ROOT_NODE Operations_researchSolverSolverState = _swig_getSolver_IN_ROOT_NODE_Solver()
func _swig_getSolver_IN_SEARCH_Solver() (_swig_ret Operations_researchSolverSolverState) {
	var swig_r Operations_researchSolverSolverState
	swig_r = (Operations_researchSolverSolverState)(C._wrap_IN_SEARCH_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverIN_SEARCH Operations_researchSolverSolverState = _swig_getSolver_IN_SEARCH_Solver()
func _swig_getSolver_AT_SOLUTION_Solver() (_swig_ret Operations_researchSolverSolverState) {
	var swig_r Operations_researchSolverSolverState
	swig_r = (Operations_researchSolverSolverState)(C._wrap_AT_SOLUTION_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverAT_SOLUTION Operations_researchSolverSolverState = _swig_getSolver_AT_SOLUTION_Solver()
func _swig_getSolver_NO_MORE_SOLUTIONS_Solver() (_swig_ret Operations_researchSolverSolverState) {
	var swig_r Operations_researchSolverSolverState
	swig_r = (Operations_researchSolverSolverState)(C._wrap_NO_MORE_SOLUTIONS_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverNO_MORE_SOLUTIONS Operations_researchSolverSolverState = _swig_getSolver_NO_MORE_SOLUTIONS_Solver()
func _swig_getSolver_PROBLEM_INFEASIBLE_Solver() (_swig_ret Operations_researchSolverSolverState) {
	var swig_r Operations_researchSolverSolverState
	swig_r = (Operations_researchSolverSolverState)(C._wrap_PROBLEM_INFEASIBLE_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverPROBLEM_INFEASIBLE Operations_researchSolverSolverState = _swig_getSolver_PROBLEM_INFEASIBLE_Solver()
type Operations_researchSolverOptimizationDirection int
func _swig_getSolver_NOT_SET_Solver() (_swig_ret Operations_researchSolverOptimizationDirection) {
	var swig_r Operations_researchSolverOptimizationDirection
	swig_r = (Operations_researchSolverOptimizationDirection)(C._wrap_NOT_SET_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverNOT_SET Operations_researchSolverOptimizationDirection = _swig_getSolver_NOT_SET_Solver()
func _swig_getSolver_MAXIMIZATION_Solver() (_swig_ret Operations_researchSolverOptimizationDirection) {
	var swig_r Operations_researchSolverOptimizationDirection
	swig_r = (Operations_researchSolverOptimizationDirection)(C._wrap_MAXIMIZATION_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverMAXIMIZATION Operations_researchSolverOptimizationDirection = _swig_getSolver_MAXIMIZATION_Solver()
func _swig_getSolver_MINIMIZATION_Solver() (_swig_ret Operations_researchSolverOptimizationDirection) {
	var swig_r Operations_researchSolverOptimizationDirection
	swig_r = (Operations_researchSolverOptimizationDirection)(C._wrap_MINIMIZATION_Solver_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SolverMINIMIZATION Operations_researchSolverOptimizationDirection = _swig_getSolver_MINIMIZATION_Solver()
func NewSolver__SWIG_0(arg1 string) (_swig_ret Solver) {
	var swig_r Solver
	_swig_i_0 := arg1
	swig_r = (Solver)(SwigcptrSolver(C._wrap_new_Solver__SWIG_0_constraintsolver_e5a2167dd134d32d(*(*C.swig_type_48)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewSolver__SWIG_1(arg1 string, arg2 ConstraintSolverParameters) (_swig_ret Solver) {
	var swig_r Solver
	_swig_i_0 := arg1
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	swig_r = (Solver)(SwigcptrSolver(C._wrap_new_Solver__SWIG_1_constraintsolver_e5a2167dd134d32d(*(*C.swig_type_49)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_50)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func NewSolver(a ...interface{}) Solver {
	argc := len(a)
	if argc == 1 {
		return NewSolver__SWIG_0(a[0].(string))
	}
	if argc == 2 {
		return NewSolver__SWIG_1(a[0].(string), a[1].(ConstraintSolverParameters))
	}
	panic("No match for overloaded function call")
}

func DeleteSolver(arg1 Solver) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) Parameters() (_swig_ret ConstraintSolverParameters) {
	var swig_r []byte
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Solver_Parameters_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]byte)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 ConstraintSolverParameters
{
  // go
  if err := proto.Unmarshal(swig_r, &swig_r_1); err != nil {
    panic(fmt.Sprintf("Unable to parse ConstraintSolverParameters protocol message: %v", err))
  }

  // free dynamic mem
  p := *(*swig_goslice)(unsafe.Pointer(&swig_r))
  Swig_free(p.arr)
}
	return swig_r_1
}

func (arg1 SwigcptrSolver) ConstParameters() (_swig_ret *ConstraintSolverParameters) {
	var swig_r *ConstraintSolverParameters
	_swig_i_0 := arg1
	swig_r = (*ConstraintSolverParameters)(C._wrap_Solver_ConstParameters_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SolverDefaultSolverParameters() (_swig_ret ConstraintSolverParameters) {
	var swig_r []byte
	swig_r_p := C._wrap_Solver_DefaultSolverParameters_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*[]byte)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 ConstraintSolverParameters
{
  // go
  if err := proto.Unmarshal(swig_r, &swig_r_1); err != nil {
    panic(fmt.Sprintf("Unable to parse ConstraintSolverParameters protocol message: %v", err))
  }

  // free dynamic mem
  p := *(*swig_goslice)(unsafe.Pointer(&swig_r))
  Swig_free(p.arr)
}
	return swig_r_1
}

func (arg1 SwigcptrSolver) AddConstraint(arg2 Constraint) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Solver_AddConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolver) AddCastConstraint(arg2 CastConstraint, arg3 IntVar, arg4 IntExpr) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_Solver_AddCastConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (arg1 SwigcptrSolver) Solve__SWIG_0(arg2 DecisionBuilder, arg3 SearchMonitorVector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_Solver_Solve__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolver) Solve__SWIG_1(arg2 DecisionBuilder) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Solver_Solve__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) Solve__SWIG_2(arg2 DecisionBuilder, arg3 SearchMonitor) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_Solver_Solve__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolver) Solve__SWIG_3(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (bool)(C._wrap_Solver_Solve__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrSolver) Solve__SWIG_4(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor, arg5 SearchMonitor) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (bool)(C._wrap_Solver_Solve__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrSolver) Solve__SWIG_5(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor, arg5 SearchMonitor, arg6 SearchMonitor) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (bool)(C._wrap_Solver_Solve__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5)))
	return swig_r
}

func (p SwigcptrSolver) Solve(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.Solve__SWIG_1(a[0].(DecisionBuilder))
	}
	if argc == 2 {
		if _, ok := a[1].(SearchMonitorVector); !ok {
			goto check_2
		}
		return p.Solve__SWIG_0(a[0].(DecisionBuilder), a[1].(SearchMonitorVector))
	}
check_2:
	if argc == 2 {
		return p.Solve__SWIG_2(a[0].(DecisionBuilder), a[1].(SearchMonitor))
	}
	if argc == 3 {
		return p.Solve__SWIG_3(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor))
	}
	if argc == 4 {
		return p.Solve__SWIG_4(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor), a[3].(SearchMonitor))
	}
	if argc == 5 {
		return p.Solve__SWIG_5(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor), a[3].(SearchMonitor), a[4].(SearchMonitor))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) NewSearch__SWIG_0(arg2 DecisionBuilder, arg3 SearchMonitorVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Solver_NewSearch__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrSolver) NewSearch__SWIG_1(arg2 DecisionBuilder) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Solver_NewSearch__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolver) NewSearch__SWIG_2(arg2 DecisionBuilder, arg3 SearchMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Solver_NewSearch__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrSolver) NewSearch__SWIG_3(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_Solver_NewSearch__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (arg1 SwigcptrSolver) NewSearch__SWIG_4(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor, arg5 SearchMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	C._wrap_Solver_NewSearch__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))
}

func (arg1 SwigcptrSolver) NewSearch__SWIG_5(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor, arg5 SearchMonitor, arg6 SearchMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	C._wrap_Solver_NewSearch__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))
}

func (p SwigcptrSolver) NewSearch(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.NewSearch__SWIG_1(a[0].(DecisionBuilder))
		return
	}
	if argc == 2 {
		if _, ok := a[1].(SearchMonitorVector); !ok {
			goto check_2
		}
		p.NewSearch__SWIG_0(a[0].(DecisionBuilder), a[1].(SearchMonitorVector))
		return
	}
check_2:
	if argc == 2 {
		p.NewSearch__SWIG_2(a[0].(DecisionBuilder), a[1].(SearchMonitor))
		return
	}
	if argc == 3 {
		p.NewSearch__SWIG_3(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor))
		return
	}
	if argc == 4 {
		p.NewSearch__SWIG_4(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor), a[3].(SearchMonitor))
		return
	}
	if argc == 5 {
		p.NewSearch__SWIG_5(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor), a[3].(SearchMonitor), a[4].(SearchMonitor))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) NextSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_NextSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) RestartSearch() {
	_swig_i_0 := arg1
	C._wrap_Solver_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) EndSearch() {
	_swig_i_0 := arg1
	C._wrap_Solver_EndSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) SolveAndCommit__SWIG_0(arg2 DecisionBuilder, arg3 SearchMonitorVector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_Solver_SolveAndCommit__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolver) SolveAndCommit__SWIG_1(arg2 DecisionBuilder) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Solver_SolveAndCommit__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) SolveAndCommit__SWIG_2(arg2 DecisionBuilder, arg3 SearchMonitor) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_Solver_SolveAndCommit__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolver) SolveAndCommit__SWIG_3(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (bool)(C._wrap_Solver_SolveAndCommit__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrSolver) SolveAndCommit__SWIG_4(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor, arg5 SearchMonitor) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (bool)(C._wrap_Solver_SolveAndCommit__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func (p SwigcptrSolver) SolveAndCommit(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.SolveAndCommit__SWIG_1(a[0].(DecisionBuilder))
	}
	if argc == 2 {
		if _, ok := a[1].(SearchMonitorVector); !ok {
			goto check_2
		}
		return p.SolveAndCommit__SWIG_0(a[0].(DecisionBuilder), a[1].(SearchMonitorVector))
	}
check_2:
	if argc == 2 {
		return p.SolveAndCommit__SWIG_2(a[0].(DecisionBuilder), a[1].(SearchMonitor))
	}
	if argc == 3 {
		return p.SolveAndCommit__SWIG_3(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor))
	}
	if argc == 4 {
		return p.SolveAndCommit__SWIG_4(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor), a[3].(SearchMonitor))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) CheckAssignment(arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Solver_CheckAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) CheckConstraint(arg2 Constraint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Solver_CheckConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) State() (_swig_ret Operations_researchSolverSolverState) {
	var swig_r Operations_researchSolverSolverState
	_swig_i_0 := arg1
	swig_r = (Operations_researchSolverSolverState)(C._wrap_Solver_State_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Fail() {
	_swig_i_0 := arg1
	C._wrap_Solver_Fail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Solver_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func SolverMemoryUsage() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_Solver_MemoryUsage_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

func (arg1 SwigcptrSolver) WallTime() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_WallTime_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Branches() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_Branches_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Solutions() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_Solutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) UncheckedSolutions() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_UncheckedSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) DemonRuns(arg2 Operations_researchSolverDemonPriority) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_Solver_DemonRuns_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) Failures() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_Failures_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Neighbors() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_Neighbors_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) ClearNeighbors() {
	_swig_i_0 := arg1
	C._wrap_Solver_ClearNeighbors_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) IncrementNeighbors() {
	_swig_i_0 := arg1
	C._wrap_Solver_IncrementNeighbors_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) FilteredNeighbors() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_FilteredNeighbors_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) AcceptedNeighbors() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_AcceptedNeighbors_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Stamp() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_Solver_Stamp_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) FailStamp() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_Solver_FailStamp_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) SetContext(arg2 Absl_string_view) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Solver_SetContext_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolver) Context() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Solver_Context_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSolver) SetOptimizationDirection(arg2 Operations_researchSolverOptimizationDirection) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Solver_SetOptimizationDirection_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSolver) MakeIntVar__SWIG_0(arg2 int64, arg3 int64, arg4 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIntVar__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_67(_swig_i_1), C.swig_type_68(_swig_i_2), *(*C.swig_type_69)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntVar__SWIG_1(arg2 []int64, arg3 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIntVar__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_70)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_71)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntVar__SWIG_2(arg2 []int, arg3 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIntVar__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_72)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_73)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntVar__SWIG_3(arg2 int64, arg3 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIntVar__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_74(_swig_i_1), C.swig_type_75(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntVar__SWIG_4(arg2 []int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIntVar__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_76)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntVar__SWIG_5(arg2 []int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIntVar__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_77)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (p SwigcptrSolver) MakeIntVar(a ...interface{}) IntVar {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].([]int64); !ok {
			goto check_1
		}
		return p.MakeIntVar__SWIG_4(a[0].([]int64))
	}
check_1:
	if argc == 1 {
		return p.MakeIntVar__SWIG_5(a[0].([]int))
	}
	if argc == 2 {
		if _, ok := a[0].([]int64); !ok {
			goto check_3
		}
		if _, ok := a[1].(string); !ok {
			goto check_3
		}
		return p.MakeIntVar__SWIG_1(a[0].([]int64), a[1].(string))
	}
check_3:
	if argc == 2 {
		if _, ok := a[0].([]int); !ok {
			goto check_4
		}
		if _, ok := a[1].(string); !ok {
			goto check_4
		}
		return p.MakeIntVar__SWIG_2(a[0].([]int), a[1].(string))
	}
check_4:
	if argc == 2 {
		return p.MakeIntVar__SWIG_3(a[0].(int64), a[1].(int64))
	}
	if argc == 3 {
		return p.MakeIntVar__SWIG_0(a[0].(int64), a[1].(int64), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeBoolVar__SWIG_0(arg2 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeBoolVar__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_78)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeBoolVar__SWIG_1() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeBoolVar__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrSolver) MakeBoolVar(a ...interface{}) IntVar {
	argc := len(a)
	if argc == 0 {
		return p.MakeBoolVar__SWIG_1()
	}
	if argc == 1 {
		return p.MakeBoolVar__SWIG_0(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIntConst__SWIG_0(arg2 int64, arg3 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIntConst__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_79(_swig_i_1), *(*C.swig_type_80)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntConst__SWIG_1(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIntConst__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_81(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) MakeIntConst(a ...interface{}) IntVar {
	argc := len(a)
	if argc == 1 {
		return p.MakeIntConst__SWIG_1(a[0].(int64))
	}
	if argc == 2 {
		return p.MakeIntConst__SWIG_0(a[0].(int64), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeSum__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeSum__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSum__SWIG_1(arg2 IntExpr, arg3 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeSum__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_82(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSum__SWIG_2(arg2 IntVarVector) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeSum__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) MakeSum(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 1 {
		return p.MakeSum__SWIG_2(a[0].(IntVarVector))
	}
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_2
		}
		return p.MakeSum__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_2:
	if argc == 2 {
		return p.MakeSum__SWIG_1(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeScalProd__SWIG_0(arg2 IntVarVector, arg3 []int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeScalProd__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_83)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeScalProd__SWIG_1(arg2 IntVarVector, arg3 []int) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeScalProd__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_84)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeScalProd(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeScalProd__SWIG_0(a[0].(IntVarVector), a[1].([]int64))
	}
check_1:
	if argc == 2 {
		return p.MakeScalProd__SWIG_1(a[0].(IntVarVector), a[1].([]int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeDifference__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeDifference__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDifference__SWIG_1(arg2 int64, arg3 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeDifference__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_85(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeDifference(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeDifference__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		return p.MakeDifference__SWIG_1(a[0].(int64), a[1].(IntExpr))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeOpposite(arg2 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeOpposite_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeProd__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeProd__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeProd__SWIG_1(arg2 IntExpr, arg3 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeProd__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_86(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeProd(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeProd__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		return p.MakeProd__SWIG_1(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeDiv__SWIG_0(arg2 IntExpr, arg3 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeDiv__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_87(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDiv__SWIG_1(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeDiv__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeDiv(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeDiv__SWIG_1(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		return p.MakeDiv__SWIG_0(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeAbs(arg2 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeAbs_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSquare(arg2 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeSquare_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePower(arg2 IntExpr, arg3 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakePower_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_88(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElement__SWIG_0(arg2 []int64, arg3 IntVar) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeElement__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_89)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElement__SWIG_1(arg2 []int, arg3 IntVar) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeElement__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_90)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElement__SWIG_2(arg2 RoutingTransitCallback1, arg3 IntVar) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeElement__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMonotonicElement(arg2 RoutingTransitCallback1, arg3 bool, arg4 IntVar) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMonotonicElement_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElement__SWIG_3(arg2 RoutingTransitCallback2, arg3 IntVar, arg4 IntVar) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeElement__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElement__SWIG_4(arg2 IntVarVector, arg3 IntVar) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeElement__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeElement(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].([]int64); !ok {
			goto check_1
		}
		return p.MakeElement__SWIG_0(a[0].([]int64), a[1].(IntVar))
	}
check_1:
	if argc == 2 {
		if _, ok := a[0].([]int); !ok {
			goto check_2
		}
		return p.MakeElement__SWIG_1(a[0].([]int), a[1].(IntVar))
	}
check_2:
	if argc == 2 {
		if _, ok := a[0].(SwigcptrRoutingTransitCallback1); !ok {
			goto check_3
		}
		return p.MakeElement__SWIG_2(a[0].(RoutingTransitCallback1), a[1].(IntVar))
	}
check_3:
	if argc == 2 {
		return p.MakeElement__SWIG_4(a[0].(IntVarVector), a[1].(IntVar))
	}
	if argc == 3 {
		return p.MakeElement__SWIG_3(a[0].(RoutingTransitCallback2), a[1].(IntVar), a[2].(IntVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIndexExpression(arg2 IntVarVector, arg3 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeIndexExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_91(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIfThenElseCt(arg2 IntVar, arg3 IntExpr, arg4 IntExpr, arg5 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIfThenElseCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMin__SWIG_0(arg2 IntVarVector) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMin__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMin__SWIG_1(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMin__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMin__SWIG_2(arg2 IntExpr, arg3 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMin__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_92(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMin__SWIG_3(arg2 IntExpr, arg3 int) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMin__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeMin(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 1 {
		return p.MakeMin__SWIG_0(a[0].(IntVarVector))
	}
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_2
		}
		return p.MakeMin__SWIG_1(a[0].(IntExpr), a[1].(IntExpr))
	}
check_2:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_3
		}
		return p.MakeMin__SWIG_3(a[0].(IntExpr), a[1].(int))
	}
check_3:
	if argc == 2 {
		return p.MakeMin__SWIG_2(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeMax__SWIG_0(arg2 IntVarVector) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMax__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMax__SWIG_1(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMax__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMax__SWIG_2(arg2 IntExpr, arg3 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMax__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_93(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMax__SWIG_3(arg2 IntExpr, arg3 int) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeMax__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeMax(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 1 {
		return p.MakeMax__SWIG_0(a[0].(IntVarVector))
	}
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_2
		}
		return p.MakeMax__SWIG_1(a[0].(IntExpr), a[1].(IntExpr))
	}
check_2:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_3
		}
		return p.MakeMax__SWIG_3(a[0].(IntExpr), a[1].(int))
	}
check_3:
	if argc == 2 {
		return p.MakeMax__SWIG_2(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeConvexPiecewiseExpr(arg2 IntExpr, arg3 int64, arg4 int64, arg5 int64, arg6 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeConvexPiecewiseExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_94(_swig_i_2), C.swig_type_95(_swig_i_3), C.swig_type_96(_swig_i_4), C.swig_type_97(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSemiContinuousExpr(arg2 IntExpr, arg3 int64, arg4 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeSemiContinuousExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_98(_swig_i_2), C.swig_type_99(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeModulo__SWIG_0(arg2 IntExpr, arg3 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeModulo__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_100(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeModulo__SWIG_1(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeModulo__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeModulo(a ...interface{}) IntExpr {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeModulo__SWIG_1(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		return p.MakeModulo__SWIG_0(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeConditionalExpression(arg2 IntVar, arg3 IntExpr, arg4 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_MakeConditionalExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_101(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeTrueConstraint() (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeTrueConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFalseConstraint__SWIG_0() (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeFalseConstraint__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFalseConstraint__SWIG_1(arg2 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeFalseConstraint__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_102)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeFalseConstraint(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 0 {
		return p.MakeFalseConstraint__SWIG_0()
	}
	if argc == 1 {
		return p.MakeFalseConstraint__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIsEqualCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsEqualCstCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_103(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsEqualCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsEqualCstVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_104(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsEqualCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsEqualCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsEqualVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsEqualVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeEquality__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeEquality__SWIG_1(arg2 IntExpr, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_105(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeEquality__SWIG_2(arg2 IntExpr, arg3 int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeEquality__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsDifferentCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsDifferentCstCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_106(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsDifferentCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsDifferentCstVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_107(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsDifferentVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsDifferentVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsDifferentCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsDifferentCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNonEquality__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNonEquality__SWIG_1(arg2 IntExpr, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_108(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNonEquality__SWIG_2(arg2 IntExpr, arg3 int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonEquality__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeNonEquality(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeNonEquality__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_2
		}
		return p.MakeNonEquality__SWIG_2(a[0].(IntExpr), a[1].(int))
	}
check_2:
	if argc == 2 {
		return p.MakeNonEquality__SWIG_1(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIsLessOrEqualCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsLessOrEqualCstCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_109(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsLessOrEqualCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsLessOrEqualCstVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_110(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsLessOrEqualVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsLessOrEqualVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsLessOrEqualCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsLessOrEqualCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLessOrEqual__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLessOrEqual__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLessOrEqual__SWIG_1(arg2 IntExpr, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLessOrEqual__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_111(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLessOrEqual__SWIG_2(arg2 IntExpr, arg3 int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLessOrEqual__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeLessOrEqual(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeLessOrEqual__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_2
		}
		return p.MakeLessOrEqual__SWIG_2(a[0].(IntExpr), a[1].(int))
	}
check_2:
	if argc == 2 {
		return p.MakeLessOrEqual__SWIG_1(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIsGreaterOrEqualCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsGreaterOrEqualCstCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_112(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsGreaterOrEqualCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsGreaterOrEqualCstVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_113(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsGreaterOrEqualVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsGreaterOrEqualVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsGreaterOrEqualCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsGreaterOrEqualCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGreaterOrEqual__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeGreaterOrEqual__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGreaterOrEqual__SWIG_1(arg2 IntExpr, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeGreaterOrEqual__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_114(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGreaterOrEqual__SWIG_2(arg2 IntExpr, arg3 int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeGreaterOrEqual__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeGreaterOrEqual(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeGreaterOrEqual__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_2
		}
		return p.MakeGreaterOrEqual__SWIG_2(a[0].(IntExpr), a[1].(int))
	}
check_2:
	if argc == 2 {
		return p.MakeGreaterOrEqual__SWIG_1(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIsGreaterCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsGreaterCstCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_115(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsGreaterCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsGreaterCstVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_116(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsGreaterVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsGreaterVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsGreaterCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsGreaterCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGreater__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeGreater__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGreater__SWIG_1(arg2 IntExpr, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeGreater__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_117(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGreater__SWIG_2(arg2 IntExpr, arg3 int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeGreater__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeGreater(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeGreater__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_2
		}
		return p.MakeGreater__SWIG_2(a[0].(IntExpr), a[1].(int))
	}
check_2:
	if argc == 2 {
		return p.MakeGreater__SWIG_1(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIsLessCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsLessCstCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_118(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsLessCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsLessCstVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_119(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsLessVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsLessVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsLessCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsLessCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLess__SWIG_0(arg2 IntExpr, arg3 IntExpr) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLess__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLess__SWIG_1(arg2 IntExpr, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLess__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_120(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLess__SWIG_2(arg2 IntExpr, arg3 int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLess__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeLess(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeLess__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_2
		}
		return p.MakeLess__SWIG_2(a[0].(IntExpr), a[1].(int))
	}
check_2:
	if argc == 2 {
		return p.MakeLess__SWIG_1(a[0].(IntExpr), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeSumLessOrEqual(arg2 IntVarVector, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeSumLessOrEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_121(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSumGreaterOrEqual(arg2 IntVarVector, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeSumGreaterOrEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_122(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSumEquality__SWIG_0(arg2 IntVarVector, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeSumEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_123(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSumEquality__SWIG_1(arg2 IntVarVector, arg3 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeSumEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeSumEquality(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntVar); !ok {
			goto check_1
		}
		return p.MakeSumEquality__SWIG_1(a[0].(IntVarVector), a[1].(IntVar))
	}
check_1:
	if argc == 2 {
		return p.MakeSumEquality__SWIG_0(a[0].(IntVarVector), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeScalProdEquality__SWIG_0(arg2 IntVarVector, arg3 []int64, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeScalProdEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_124)(unsafe.Pointer(&_swig_i_2)), C.swig_type_125(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeScalProdEquality__SWIG_1(arg2 IntVarVector, arg3 []int, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeScalProdEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_126)(unsafe.Pointer(&_swig_i_2)), C.swig_type_127(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeScalProdEquality__SWIG_2(arg2 IntVarVector, arg3 []int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeScalProdEquality__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_128)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeScalProdEquality__SWIG_3(arg2 IntVarVector, arg3 []int, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeScalProdEquality__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_129)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeScalProdEquality(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_1
		}
		return p.MakeScalProdEquality__SWIG_2(a[0].(IntVarVector), a[1].([]int64), a[2].(IntVar))
	}
check_1:
	if argc == 3 {
		if _, ok := a[1].([]int); !ok {
			goto check_2
		}
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_2
		}
		return p.MakeScalProdEquality__SWIG_3(a[0].(IntVarVector), a[1].([]int), a[2].(IntVar))
	}
check_2:
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_3
		}
		return p.MakeScalProdEquality__SWIG_0(a[0].(IntVarVector), a[1].([]int64), a[2].(int64))
	}
check_3:
	if argc == 3 {
		return p.MakeScalProdEquality__SWIG_1(a[0].(IntVarVector), a[1].([]int), a[2].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeScalProdGreaterOrEqual__SWIG_0(arg2 IntVarVector, arg3 []int64, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeScalProdGreaterOrEqual__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_130)(unsafe.Pointer(&_swig_i_2)), C.swig_type_131(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeScalProdGreaterOrEqual__SWIG_1(arg2 IntVarVector, arg3 []int, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeScalProdGreaterOrEqual__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_132)(unsafe.Pointer(&_swig_i_2)), C.swig_type_133(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeScalProdGreaterOrEqual(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeScalProdGreaterOrEqual__SWIG_0(a[0].(IntVarVector), a[1].([]int64), a[2].(int64))
	}
check_1:
	if argc == 3 {
		return p.MakeScalProdGreaterOrEqual__SWIG_1(a[0].(IntVarVector), a[1].([]int), a[2].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeScalProdLessOrEqual__SWIG_0(arg2 IntVarVector, arg3 []int64, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeScalProdLessOrEqual__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_134)(unsafe.Pointer(&_swig_i_2)), C.swig_type_135(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeScalProdLessOrEqual__SWIG_1(arg2 IntVarVector, arg3 []int, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeScalProdLessOrEqual__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_136)(unsafe.Pointer(&_swig_i_2)), C.swig_type_137(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeScalProdLessOrEqual(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeScalProdLessOrEqual__SWIG_0(a[0].(IntVarVector), a[1].([]int64), a[2].(int64))
	}
check_1:
	if argc == 3 {
		return p.MakeScalProdLessOrEqual__SWIG_1(a[0].(IntVarVector), a[1].([]int), a[2].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeMinEquality(arg2 IntVarVector, arg3 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeMinEquality_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMaxEquality(arg2 IntVarVector, arg3 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeMaxEquality_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElementEquality__SWIG_0(arg2 []int64, arg3 IntVar, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeElementEquality__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_138)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElementEquality__SWIG_1(arg2 []int, arg3 IntVar, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeElementEquality__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_139)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElementEquality__SWIG_2(arg2 IntVarVector, arg3 IntVar, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeElementEquality__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeElementEquality__SWIG_3(arg2 IntVarVector, arg3 IntVar, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeElementEquality__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_140(_swig_i_3))))
	return swig_r
}

func (p SwigcptrSolver) MakeElementEquality(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[0].([]int64); !ok {
			goto check_1
		}
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_1
		}
		return p.MakeElementEquality__SWIG_0(a[0].([]int64), a[1].(IntVar), a[2].(IntVar))
	}
check_1:
	if argc == 3 {
		if _, ok := a[0].([]int); !ok {
			goto check_2
		}
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_2
		}
		return p.MakeElementEquality__SWIG_1(a[0].([]int), a[1].(IntVar), a[2].(IntVar))
	}
check_2:
	if argc == 3 {
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_3
		}
		return p.MakeElementEquality__SWIG_2(a[0].(IntVarVector), a[1].(IntVar), a[2].(IntVar))
	}
check_3:
	if argc == 3 {
		return p.MakeElementEquality__SWIG_3(a[0].(IntVarVector), a[1].(IntVar), a[2].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeAbsEquality(arg2 IntVar, arg3 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeAbsEquality_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIndexOfConstraint(arg2 IntVarVector, arg3 IntVar, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIndexOfConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_141(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeConstraintInitialPropagateCallback(arg2 Constraint) (_swig_ret Demon) {
	var swig_r Demon
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Demon)(SwigcptrDemon(C._wrap_Solver_MakeConstraintInitialPropagateCallback_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDelayedConstraintInitialPropagateCallback(arg2 Constraint) (_swig_ret Demon) {
	var swig_r Demon
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Demon)(SwigcptrDemon(C._wrap_Solver_MakeDelayedConstraintInitialPropagateCallback_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeClosureDemon(arg2 AtSolutionCallback) (_swig_ret Demon) {
	var swig_r Demon
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Demon)(SwigcptrDemon(C._wrap_Solver_MakeClosureDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeBetweenCt(arg2 IntExpr, arg3 int64, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeBetweenCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_142(_swig_i_2), C.swig_type_143(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNotBetweenCt(arg2 IntExpr, arg3 int64, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNotBetweenCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_144(_swig_i_2), C.swig_type_145(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsBetweenCt(arg2 IntExpr, arg3 int64, arg4 int64, arg5 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsBetweenCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_146(_swig_i_2), C.swig_type_147(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsBetweenVar(arg2 IntExpr, arg3 int64, arg4 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsBetweenVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_148(_swig_i_2), C.swig_type_149(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMemberCt__SWIG_0(arg2 IntExpr, arg3 []int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeMemberCt__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_150)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMemberCt__SWIG_1(arg2 IntExpr, arg3 []int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeMemberCt__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_151)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeMemberCt(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeMemberCt__SWIG_0(a[0].(IntExpr), a[1].([]int64))
	}
check_1:
	if argc == 2 {
		return p.MakeMemberCt__SWIG_1(a[0].(IntExpr), a[1].([]int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeNotMemberCt__SWIG_0(arg2 IntExpr, arg3 []int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNotMemberCt__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_152)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNotMemberCt__SWIG_1(arg2 IntExpr, arg3 []int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNotMemberCt__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_153)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNotMemberCt__SWIG_2(arg2 IntExpr, arg3 []int64, arg4 []int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNotMemberCt__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_154)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_155)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNotMemberCt__SWIG_3(arg2 IntExpr, arg3 []int, arg4 []int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyintSliceIn(arg4)

	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNotMemberCt__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_156)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_157)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	return swig_r
}

func (p SwigcptrSolver) MakeNotMemberCt(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeNotMemberCt__SWIG_0(a[0].(IntExpr), a[1].([]int64))
	}
check_1:
	if argc == 2 {
		return p.MakeNotMemberCt__SWIG_1(a[0].(IntExpr), a[1].([]int))
	}
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_3
		}
		if _, ok := a[2].([]int64); !ok {
			goto check_3
		}
		return p.MakeNotMemberCt__SWIG_2(a[0].(IntExpr), a[1].([]int64), a[2].([]int64))
	}
check_3:
	if argc == 3 {
		return p.MakeNotMemberCt__SWIG_3(a[0].(IntExpr), a[1].([]int), a[2].([]int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIsMemberCt__SWIG_0(arg2 IntExpr, arg3 []int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsMemberCt__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_158)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsMemberCt__SWIG_1(arg2 IntExpr, arg3 []int, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsMemberCt__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_159)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeIsMemberCt(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeIsMemberCt__SWIG_0(a[0].(IntExpr), a[1].([]int64), a[2].(IntVar))
	}
check_1:
	if argc == 3 {
		return p.MakeIsMemberCt__SWIG_1(a[0].(IntExpr), a[1].([]int), a[2].(IntVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIsMemberVar__SWIG_0(arg2 IntExpr, arg3 []int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsMemberVar__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_160)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsMemberVar__SWIG_1(arg2 IntExpr, arg3 []int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_MakeIsMemberVar__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_161)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeIsMemberVar(a ...interface{}) IntVar {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeIsMemberVar__SWIG_0(a[0].(IntExpr), a[1].([]int64))
	}
check_1:
	if argc == 2 {
		return p.MakeIsMemberVar__SWIG_1(a[0].(IntExpr), a[1].([]int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeCount__SWIG_0(arg2 IntVarVector, arg3 int64, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCount__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_162(_swig_i_2), C.swig_type_163(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeCount__SWIG_1(arg2 IntVarVector, arg3 int64, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCount__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_164(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (p SwigcptrSolver) MakeCount(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_1
		}
		return p.MakeCount__SWIG_1(a[0].(IntVarVector), a[1].(int64), a[2].(IntVar))
	}
check_1:
	if argc == 3 {
		return p.MakeCount__SWIG_0(a[0].(IntVarVector), a[1].(int64), a[2].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeDistribute__SWIG_0(arg2 IntVarVector, arg3 []int64, arg4 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDistribute__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_165)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDistribute__SWIG_1(arg2 IntVarVector, arg3 []int, arg4 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDistribute__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_166)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDistribute__SWIG_2(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDistribute__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDistribute__SWIG_3(arg2 IntVarVector, arg3 int64, arg4 int64, arg5 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDistribute__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_167(_swig_i_2), C.swig_type_168(_swig_i_3), C.swig_type_169(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDistribute__SWIG_4(arg2 IntVarVector, arg3 []int64, arg4 []int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDistribute__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_170)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_171)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDistribute__SWIG_5(arg2 IntVarVector, arg3 []int, arg4 []int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyintSliceIn(arg4)

	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDistribute__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_172)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_173)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDistribute__SWIG_6(arg2 IntVarVector, arg3 []int64, arg4 []int64, arg5 []int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDistribute__SWIG_6_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_174)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_175)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_176)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDistribute__SWIG_7(arg2 IntVarVector, arg3 []int, arg4 []int, arg5 []int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyintSliceIn(arg4)

	var _swig_i_4 []C.int

    _swig_i_4 = swigCopyintSliceIn(arg5)

	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDistribute__SWIG_7_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_177)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_178)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_179)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_4
	}
	return swig_r
}

func (p SwigcptrSolver) MakeDistribute(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		return p.MakeDistribute__SWIG_2(a[0].(IntVarVector), a[1].(IntVarVector))
	}
	if argc == 3 {
		if _, ok := a[1].([]int); !ok {
			goto check_2
		}
		if _, ok := a[2].(IntVarVector); !ok {
			goto check_2
		}
		return p.MakeDistribute__SWIG_1(a[0].(IntVarVector), a[1].([]int), a[2].(IntVarVector))
	}
check_2:
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_3
		}
		if _, ok := a[2].(IntVarVector); !ok {
			goto check_3
		}
		return p.MakeDistribute__SWIG_0(a[0].(IntVarVector), a[1].([]int64), a[2].(IntVarVector))
	}
check_3:
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_4
		}
		if _, ok := a[2].([]int64); !ok {
			goto check_4
		}
		return p.MakeDistribute__SWIG_4(a[0].(IntVarVector), a[1].([]int64), a[2].([]int64))
	}
check_4:
	if argc == 3 {
		return p.MakeDistribute__SWIG_5(a[0].(IntVarVector), a[1].([]int), a[2].([]int))
	}
	if argc == 4 {
		if _, ok := a[1].([]int64); !ok {
			goto check_6
		}
		if _, ok := a[2].([]int64); !ok {
			goto check_6
		}
		if _, ok := a[3].([]int64); !ok {
			goto check_6
		}
		return p.MakeDistribute__SWIG_6(a[0].(IntVarVector), a[1].([]int64), a[2].([]int64), a[3].([]int64))
	}
check_6:
	if argc == 4 {
		if _, ok := a[1].([]int); !ok {
			goto check_7
		}
		if _, ok := a[2].([]int); !ok {
			goto check_7
		}
		if _, ok := a[3].([]int); !ok {
			goto check_7
		}
		return p.MakeDistribute__SWIG_7(a[0].(IntVarVector), a[1].([]int), a[2].([]int), a[3].([]int))
	}
check_7:
	if argc == 4 {
		return p.MakeDistribute__SWIG_3(a[0].(IntVarVector), a[1].(int64), a[2].(int64), a[3].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeDeviation(arg2 IntVarVector, arg3 IntVar, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDeviation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_180(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAllDifferent__SWIG_0(arg2 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeAllDifferent__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAllDifferent__SWIG_1(arg2 IntVarVector, arg3 bool) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeAllDifferent__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeAllDifferent(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 1 {
		return p.MakeAllDifferent__SWIG_0(a[0].(IntVarVector))
	}
	if argc == 2 {
		return p.MakeAllDifferent__SWIG_1(a[0].(IntVarVector), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeAllDifferentExcept(arg2 IntVarVector, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeAllDifferentExcept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_181(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSortingConstraint(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeSortingConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLexicalLess(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLexicalLess_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLexicalLessOrEqual(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLexicalLessOrEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLexicalLessOrEqualWithOffsets(arg2 IntVarVector, arg3 IntVarVector, arg4 []int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeLexicalLessOrEqualWithOffsets_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_182)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIsLexicalLessOrEqualWithOffsetsCt(arg2 IntVarVector, arg3 IntVarVector, arg4 []int64, arg5 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIsLexicalLessOrEqualWithOffsetsCt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_183)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeInversePermutationConstraint(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeInversePermutationConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIndexOfFirstMaxValueConstraint(arg2 IntVar, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIndexOfFirstMaxValueConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIndexOfFirstMinValueConstraint(arg2 IntVar, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIndexOfFirstMinValueConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNullIntersect(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNullIntersect_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNullIntersectExcept(arg2 IntVarVector, arg3 IntVarVector, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNullIntersectExcept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_184(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNoCycle__SWIG_0(arg2 IntVarVector, arg3 IntVarVector, arg4 Std_function_Sl_bool_Sp_long_SS_long_SP__Sg_) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNoCycle__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNoCycle__SWIG_1(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNoCycle__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNoCycle__SWIG_2(arg2 IntVarVector, arg3 IntVarVector, arg4 Std_function_Sl_bool_Sp_long_SS_long_SP__Sg_, arg5 bool) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNoCycle__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C._Bool(_swig_i_4))))
	return swig_r
}

func (p SwigcptrSolver) MakeNoCycle(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		return p.MakeNoCycle__SWIG_1(a[0].(IntVarVector), a[1].(IntVarVector))
	}
	if argc == 3 {
		return p.MakeNoCycle__SWIG_0(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Std_function_Sl_bool_Sp_long_SS_long_SP__Sg_))
	}
	if argc == 4 {
		return p.MakeNoCycle__SWIG_2(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Std_function_Sl_bool_Sp_long_SS_long_SP__Sg_), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeCircuit(arg2 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCircuit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSubCircuit(arg2 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeSubCircuit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePathCumul__SWIG_0(arg2 IntVarVector, arg3 IntVarVector, arg4 IntVarVector, arg5 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakePathCumul__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDelayedPathCumul(arg2 IntVarVector, arg3 IntVarVector, arg4 IntVarVector, arg5 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeDelayedPathCumul_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePathCumul__SWIG_1(arg2 IntVarVector, arg3 IntVarVector, arg4 IntVarVector, arg5 RoutingTransitCallback2) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakePathCumul__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePathCumul__SWIG_2(arg2 IntVarVector, arg3 IntVarVector, arg4 IntVarVector, arg5 IntVarVector, arg6 RoutingTransitCallback2) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakePathCumul__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func (p SwigcptrSolver) MakePathCumul(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 4 {
		if _, ok := a[3].(IntVarVector); !ok {
			goto check_1
		}
		return p.MakePathCumul__SWIG_0(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(IntVarVector), a[3].(IntVarVector))
	}
check_1:
	if argc == 4 {
		return p.MakePathCumul__SWIG_1(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(IntVarVector), a[3].(RoutingTransitCallback2))
	}
	if argc == 5 {
		return p.MakePathCumul__SWIG_2(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(IntVarVector), a[3].(IntVarVector), a[4].(RoutingTransitCallback2))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakePathConnected(arg2 IntVarVector, arg3 []int64, arg4 []int64, arg5 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakePathConnected_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_185)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_186)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMapDomain(arg2 IntVar, arg3 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeMapDomain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAllowedAssignments(arg2 IntVarVector, arg3 IntTupleSet) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeAllowedAssignments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeTransitionConstraint__SWIG_0(arg2 IntVarVector, arg3 IntTupleSet, arg4 int64, arg5 []int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeTransitionConstraint__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_187(_swig_i_3), *(*C.swig_type_188)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeTransitionConstraint__SWIG_1(arg2 IntVarVector, arg3 IntTupleSet, arg4 int64, arg5 []int) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	var _swig_i_4 []C.int

    _swig_i_4 = swigCopyintSliceIn(arg5)

	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeTransitionConstraint__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_189(_swig_i_3), *(*C.swig_type_190)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_4
	}
	return swig_r
}

func (p SwigcptrSolver) MakeTransitionConstraint(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 4 {
		if _, ok := a[3].([]int64); !ok {
			goto check_1
		}
		return p.MakeTransitionConstraint__SWIG_0(a[0].(IntVarVector), a[1].(IntTupleSet), a[2].(int64), a[3].([]int64))
	}
check_1:
	if argc == 4 {
		return p.MakeTransitionConstraint__SWIG_1(a[0].(IntVarVector), a[1].(IntTupleSet), a[2].(int64), a[3].([]int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeNonOverlappingBoxesConstraint__SWIG_0(arg2 IntVarVector, arg3 IntVarVector, arg4 IntVarVector, arg5 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonOverlappingBoxesConstraint__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNonOverlappingBoxesConstraint__SWIG_1(arg2 IntVarVector, arg3 IntVarVector, arg4 Absl_Span_Sl_int64_t_SS_const_Sg_, arg5 Absl_Span_Sl_int64_t_SS_const_Sg_) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonOverlappingBoxesConstraint__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNonOverlappingBoxesConstraint__SWIG_2(arg2 IntVarVector, arg3 IntVarVector, arg4 Absl_Span_Sl_int_SS_const_Sg_, arg5 Absl_Span_Sl_int_SS_const_Sg_) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonOverlappingBoxesConstraint__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (p SwigcptrSolver) MakeNonOverlappingBoxesConstraint(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 4 {
		if _, ok := a[2].(IntVarVector); !ok {
			goto check_1
		}
		if _, ok := a[3].(IntVarVector); !ok {
			goto check_1
		}
		return p.MakeNonOverlappingBoxesConstraint__SWIG_0(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(IntVarVector), a[3].(IntVarVector))
	}
check_1:
	if argc == 4 {
		if _, ok := a[2].(SwigcptrAbsl_Span_Sl_int64_t_SS_const_Sg_); !ok {
			goto check_2
		}
		if _, ok := a[3].(SwigcptrAbsl_Span_Sl_int64_t_SS_const_Sg_); !ok {
			goto check_2
		}
		return p.MakeNonOverlappingBoxesConstraint__SWIG_1(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Absl_Span_Sl_int64_t_SS_const_Sg_), a[3].(Absl_Span_Sl_int64_t_SS_const_Sg_))
	}
check_2:
	if argc == 4 {
		return p.MakeNonOverlappingBoxesConstraint__SWIG_2(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Absl_Span_Sl_int_SS_const_Sg_), a[3].(Absl_Span_Sl_int_SS_const_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeNonOverlappingNonStrictBoxesConstraint__SWIG_0(arg2 IntVarVector, arg3 IntVarVector, arg4 IntVarVector, arg5 IntVarVector) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonOverlappingNonStrictBoxesConstraint__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNonOverlappingNonStrictBoxesConstraint__SWIG_1(arg2 IntVarVector, arg3 IntVarVector, arg4 Absl_Span_Sl_int64_t_SS_const_Sg_, arg5 Absl_Span_Sl_int64_t_SS_const_Sg_) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonOverlappingNonStrictBoxesConstraint__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNonOverlappingNonStrictBoxesConstraint__SWIG_2(arg2 IntVarVector, arg3 IntVarVector, arg4 Absl_Span_Sl_int_SS_const_Sg_, arg5 Absl_Span_Sl_int_SS_const_Sg_) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeNonOverlappingNonStrictBoxesConstraint__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (p SwigcptrSolver) MakeNonOverlappingNonStrictBoxesConstraint(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 4 {
		if _, ok := a[2].(IntVarVector); !ok {
			goto check_1
		}
		if _, ok := a[3].(IntVarVector); !ok {
			goto check_1
		}
		return p.MakeNonOverlappingNonStrictBoxesConstraint__SWIG_0(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(IntVarVector), a[3].(IntVarVector))
	}
check_1:
	if argc == 4 {
		if _, ok := a[2].(SwigcptrAbsl_Span_Sl_int64_t_SS_const_Sg_); !ok {
			goto check_2
		}
		if _, ok := a[3].(SwigcptrAbsl_Span_Sl_int64_t_SS_const_Sg_); !ok {
			goto check_2
		}
		return p.MakeNonOverlappingNonStrictBoxesConstraint__SWIG_1(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Absl_Span_Sl_int64_t_SS_const_Sg_), a[3].(Absl_Span_Sl_int64_t_SS_const_Sg_))
	}
check_2:
	if argc == 4 {
		return p.MakeNonOverlappingNonStrictBoxesConstraint__SWIG_2(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Absl_Span_Sl_int_SS_const_Sg_), a[3].(Absl_Span_Sl_int_SS_const_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakePack(arg2 IntVarVector, arg3 int) (_swig_ret Pack) {
	var swig_r Pack
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Pack)(SwigcptrPack(C._wrap_Solver_MakePack_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFixedDurationIntervalVar__SWIG_0(arg2 int64, arg3 int64, arg4 int64, arg5 bool, arg6 string) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeFixedDurationIntervalVar__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_191(_swig_i_1), C.swig_type_192(_swig_i_2), C.swig_type_193(_swig_i_3), C._Bool(_swig_i_4), *(*C.swig_type_194)(unsafe.Pointer(&_swig_i_5)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFixedDurationIntervalVar__SWIG_1(arg2 IntVar, arg3 int64, arg4 string) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeFixedDurationIntervalVar__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_195(_swig_i_2), *(*C.swig_type_196)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFixedDurationIntervalVar__SWIG_2(arg2 IntVar, arg3 int64, arg4 IntVar, arg5 string) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeFixedDurationIntervalVar__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_197(_swig_i_2), C.uintptr_t(_swig_i_3), *(*C.swig_type_198)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (p SwigcptrSolver) MakeFixedDurationIntervalVar(a ...interface{}) IntervalVar {
	argc := len(a)
	if argc == 3 {
		return p.MakeFixedDurationIntervalVar__SWIG_1(a[0].(IntVar), a[1].(int64), a[2].(string))
	}
	if argc == 4 {
		return p.MakeFixedDurationIntervalVar__SWIG_2(a[0].(IntVar), a[1].(int64), a[2].(IntVar), a[3].(string))
	}
	if argc == 5 {
		return p.MakeFixedDurationIntervalVar__SWIG_0(a[0].(int64), a[1].(int64), a[2].(int64), a[3].(bool), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeFixedInterval(arg2 int64, arg3 int64, arg4 string) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeFixedInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_199(_swig_i_1), C.swig_type_200(_swig_i_2), *(*C.swig_type_201)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntervalVar(arg2 int64, arg3 int64, arg4 int64, arg5 int64, arg6 int64, arg7 int64, arg8 bool, arg9 string) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeIntervalVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_202(_swig_i_1), C.swig_type_203(_swig_i_2), C.swig_type_204(_swig_i_3), C.swig_type_205(_swig_i_4), C.swig_type_206(_swig_i_5), C.swig_type_207(_swig_i_6), C._Bool(_swig_i_7), *(*C.swig_type_208)(unsafe.Pointer(&_swig_i_8)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg9
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntervalVarArray(arg2 int, arg3 int64, arg4 int64, arg5 int64, arg6 int64, arg7 int64, arg8 int64, arg9 bool, arg10 Absl_string_view, arg11 IntervalVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	_swig_i_9 := getSwigcptr(arg10)
	_swig_i_10 := getSwigcptr(arg11)
	C._wrap_Solver_MakeIntervalVarArray_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_209(_swig_i_2), C.swig_type_210(_swig_i_3), C.swig_type_211(_swig_i_4), C.swig_type_212(_swig_i_5), C.swig_type_213(_swig_i_6), C.swig_type_214(_swig_i_7), C._Bool(_swig_i_8), C.uintptr_t(_swig_i_9), C.uintptr_t(_swig_i_10))
}

func (arg1 SwigcptrSolver) MakeMirrorInterval(arg2 IntervalVar) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeMirrorInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFixedDurationStartSyncedOnStartIntervalVar(arg2 IntervalVar, arg3 int64, arg4 int64) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeFixedDurationStartSyncedOnStartIntervalVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_215(_swig_i_2), C.swig_type_216(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFixedDurationStartSyncedOnEndIntervalVar(arg2 IntervalVar, arg3 int64, arg4 int64) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeFixedDurationStartSyncedOnEndIntervalVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_217(_swig_i_2), C.swig_type_218(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFixedDurationEndSyncedOnStartIntervalVar(arg2 IntervalVar, arg3 int64, arg4 int64) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeFixedDurationEndSyncedOnStartIntervalVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_219(_swig_i_2), C.swig_type_220(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFixedDurationEndSyncedOnEndIntervalVar(arg2 IntervalVar, arg3 int64, arg4 int64) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeFixedDurationEndSyncedOnEndIntervalVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_221(_swig_i_2), C.swig_type_222(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntervalRelaxedMin(arg2 IntervalVar) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeIntervalRelaxedMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntervalRelaxedMax(arg2 IntervalVar) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_MakeIntervalRelaxedMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntervalVarRelation__SWIG_0(arg2 IntervalVar, arg3 Operations_researchSolverUnaryIntervalRelation, arg4 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIntervalVarRelation__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_type_223(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeIntervalVarRelation__SWIG_1(arg2 IntervalVar, arg3 Operations_researchSolverBinaryIntervalRelation, arg4 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIntervalVarRelation__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (p SwigcptrSolver) MakeIntervalVarRelation(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[1].(Operations_researchSolverUnaryIntervalRelation); !ok {
			goto check_1
		}
		if _, ok := a[2].(int64); !ok {
			goto check_1
		}
		return p.MakeIntervalVarRelation__SWIG_0(a[0].(IntervalVar), a[1].(Operations_researchSolverUnaryIntervalRelation), a[2].(int64))
	}
check_1:
	if argc == 3 {
		return p.MakeIntervalVarRelation__SWIG_1(a[0].(IntervalVar), a[1].(Operations_researchSolverBinaryIntervalRelation), a[2].(IntervalVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeIntervalVarRelationWithDelay(arg2 IntervalVar, arg3 Operations_researchSolverBinaryIntervalRelation, arg4 IntervalVar, arg5 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeIntervalVarRelationWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_type_224(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeTemporalDisjunction__SWIG_0(arg2 IntervalVar, arg3 IntervalVar, arg4 IntVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeTemporalDisjunction__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeTemporalDisjunction__SWIG_1(arg2 IntervalVar, arg3 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeTemporalDisjunction__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeTemporalDisjunction(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		return p.MakeTemporalDisjunction__SWIG_1(a[0].(IntervalVar), a[1].(IntervalVar))
	}
	if argc == 3 {
		return p.MakeTemporalDisjunction__SWIG_0(a[0].(IntervalVar), a[1].(IntervalVar), a[2].(IntVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeDisjunctiveConstraint(arg2 IntervalVarVector, arg3 string) (_swig_ret DisjunctiveConstraint) {
	var swig_r DisjunctiveConstraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (DisjunctiveConstraint)(SwigcptrDisjunctiveConstraint(C._wrap_Solver_MakeDisjunctiveConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_225)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeStrictDisjunctiveConstraint(arg2 IntervalVarVector, arg3 string) (_swig_ret DisjunctiveConstraint) {
	var swig_r DisjunctiveConstraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (DisjunctiveConstraint)(SwigcptrDisjunctiveConstraint(C._wrap_Solver_MakeStrictDisjunctiveConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_226)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeCumulative__SWIG_0(arg2 IntervalVarVector, arg3 []int64, arg4 int64, arg5 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCumulative__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_227)(unsafe.Pointer(&_swig_i_2)), C.swig_type_228(_swig_i_3), *(*C.swig_type_229)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeCumulative__SWIG_1(arg2 IntervalVarVector, arg3 []int, arg4 int64, arg5 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCumulative__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_230)(unsafe.Pointer(&_swig_i_2)), C.swig_type_231(_swig_i_3), *(*C.swig_type_232)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeCumulative__SWIG_2(arg2 IntervalVarVector, arg3 []int64, arg4 IntVar, arg5 Absl_string_view) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCumulative__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_233)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeCumulative__SWIG_3(arg2 IntervalVarVector, arg3 []int, arg4 IntVar, arg5 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCumulative__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_234)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3), *(*C.swig_type_235)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeCumulative__SWIG_4(arg2 IntervalVarVector, arg3 IntVarVector, arg4 int64, arg5 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCumulative__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_236(_swig_i_3), *(*C.swig_type_237)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeCumulative__SWIG_5(arg2 IntervalVarVector, arg3 IntVarVector, arg4 IntVar, arg5 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCumulative__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), *(*C.swig_type_238)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (p SwigcptrSolver) MakeCumulative(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 4 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_1
		}
		if _, ok := a[3].(SwigcptrAbsl_string_view); !ok {
			goto check_1
		}
		return p.MakeCumulative__SWIG_2(a[0].(IntervalVarVector), a[1].([]int64), a[2].(IntVar), a[3].(Absl_string_view))
	}
check_1:
	if argc == 4 {
		if _, ok := a[1].([]int); !ok {
			goto check_2
		}
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_2
		}
		return p.MakeCumulative__SWIG_3(a[0].(IntervalVarVector), a[1].([]int), a[2].(IntVar), a[3].(string))
	}
check_2:
	if argc == 4 {
		if _, ok := a[1].([]int64); !ok {
			goto check_3
		}
		if _, ok := a[2].(int64); !ok {
			goto check_3
		}
		return p.MakeCumulative__SWIG_0(a[0].(IntervalVarVector), a[1].([]int64), a[2].(int64), a[3].(string))
	}
check_3:
	if argc == 4 {
		if _, ok := a[1].([]int); !ok {
			goto check_4
		}
		if _, ok := a[2].(int64); !ok {
			goto check_4
		}
		return p.MakeCumulative__SWIG_1(a[0].(IntervalVarVector), a[1].([]int), a[2].(int64), a[3].(string))
	}
check_4:
	if argc == 4 {
		if _, ok := a[2].(SwigcptrIntVar); !ok {
			goto check_5
		}
		return p.MakeCumulative__SWIG_5(a[0].(IntervalVarVector), a[1].(IntVarVector), a[2].(IntVar), a[3].(string))
	}
check_5:
	if argc == 4 {
		return p.MakeCumulative__SWIG_4(a[0].(IntervalVarVector), a[1].(IntVarVector), a[2].(int64), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeCover(arg2 IntervalVarVector, arg3 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeCover_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeEquality__SWIG_3(arg2 IntervalVar, arg3 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_MakeEquality__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeEquality(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		if _, ok := a[1].(SwigcptrIntExpr); !ok {
			goto check_1
		}
		return p.MakeEquality__SWIG_0(a[0].(IntExpr), a[1].(IntExpr))
	}
check_1:
	if argc == 2 {
		if _, ok := a[0].(SwigcptrIntExpr); !ok {
			goto check_2
		}
		if _, ok := a[1].(int); !ok {
			goto check_2
		}
		return p.MakeEquality__SWIG_2(a[0].(IntExpr), a[1].(int))
	}
check_2:
	if argc == 2 {
		if _, ok := a[0].(SwigcptrIntExpr); !ok {
			goto check_3
		}
		if _, ok := a[1].(int64); !ok {
			goto check_3
		}
		return p.MakeEquality__SWIG_1(a[0].(IntExpr), a[1].(int64))
	}
check_3:
	if argc == 2 {
		return p.MakeEquality__SWIG_3(a[0].(IntervalVar), a[1].(IntervalVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeAssignment__SWIG_0() (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_Solver_MakeAssignment__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAssignment__SWIG_1(arg2 Assignment) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_Solver_MakeAssignment__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) MakeAssignment(a ...interface{}) Assignment {
	argc := len(a)
	if argc == 0 {
		return p.MakeAssignment__SWIG_0()
	}
	if argc == 1 {
		return p.MakeAssignment__SWIG_1(a[0].(Assignment))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeFirstSolutionCollector__SWIG_0(arg2 Assignment) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeFirstSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFirstSolutionCollector__SWIG_1() (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeFirstSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrSolver) MakeFirstSolutionCollector(a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 0 {
		return p.MakeFirstSolutionCollector__SWIG_1()
	}
	if argc == 1 {
		return p.MakeFirstSolutionCollector__SWIG_0(a[0].(Assignment))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeLastSolutionCollector__SWIG_0(arg2 Assignment) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeLastSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLastSolutionCollector__SWIG_1() (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeLastSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrSolver) MakeLastSolutionCollector(a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 0 {
		return p.MakeLastSolutionCollector__SWIG_1()
	}
	if argc == 1 {
		return p.MakeLastSolutionCollector__SWIG_0(a[0].(Assignment))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeBestValueSolutionCollector__SWIG_0(arg2 Assignment, arg3 bool) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeBestValueSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeBestLexicographicValueSolutionCollector__SWIG_0(arg2 Assignment, arg3 Std_vector_Sl_bool_Sg_) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeBestLexicographicValueSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeBestValueSolutionCollector__SWIG_1(arg2 bool) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeBestValueSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) MakeBestValueSolutionCollector(a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 1 {
		return p.MakeBestValueSolutionCollector__SWIG_1(a[0].(bool))
	}
	if argc == 2 {
		return p.MakeBestValueSolutionCollector__SWIG_0(a[0].(Assignment), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeBestLexicographicValueSolutionCollector__SWIG_1(arg2 Std_vector_Sl_bool_Sg_) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeBestLexicographicValueSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) MakeBestLexicographicValueSolutionCollector(a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 1 {
		return p.MakeBestLexicographicValueSolutionCollector__SWIG_1(a[0].(Std_vector_Sl_bool_Sg_))
	}
	if argc == 2 {
		return p.MakeBestLexicographicValueSolutionCollector__SWIG_0(a[0].(Assignment), a[1].(Std_vector_Sl_bool_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeNBestValueSolutionCollector__SWIG_0(arg2 Assignment, arg3 int, arg4 bool) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeNBestValueSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNBestValueSolutionCollector__SWIG_1(arg2 int, arg3 bool) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeNBestValueSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeNBestValueSolutionCollector(a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 2 {
		return p.MakeNBestValueSolutionCollector__SWIG_1(a[0].(int), a[1].(bool))
	}
	if argc == 3 {
		return p.MakeNBestValueSolutionCollector__SWIG_0(a[0].(Assignment), a[1].(int), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeNBestLexicographicValueSolutionCollector__SWIG_0(arg2 Assignment, arg3 int, arg4 Std_vector_Sl_bool_Sg_) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeNBestLexicographicValueSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNBestLexicographicValueSolutionCollector__SWIG_1(arg2 int, arg3 Std_vector_Sl_bool_Sg_) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeNBestLexicographicValueSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeNBestLexicographicValueSolutionCollector(a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 2 {
		return p.MakeNBestLexicographicValueSolutionCollector__SWIG_1(a[0].(int), a[1].(Std_vector_Sl_bool_Sg_))
	}
	if argc == 3 {
		return p.MakeNBestLexicographicValueSolutionCollector__SWIG_0(a[0].(Assignment), a[1].(int), a[2].(Std_vector_Sl_bool_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeAllSolutionCollector__SWIG_0(arg2 Assignment) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeAllSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAllSolutionCollector__SWIG_1() (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := arg1
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_Solver_MakeAllSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrSolver) MakeAllSolutionCollector(a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 0 {
		return p.MakeAllSolutionCollector__SWIG_1()
	}
	if argc == 1 {
		return p.MakeAllSolutionCollector__SWIG_0(a[0].(Assignment))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeMinimize(arg2 IntVar, arg3 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeMinimize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_239(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMaximize(arg2 IntVar, arg3 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeMaximize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_240(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeOptimize(arg2 bool, arg3 IntVar, arg4 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeOptimize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_241(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeWeightedMinimize__SWIG_0(arg2 IntVarVector, arg3 []int64, arg4 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeWeightedMinimize__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_242)(unsafe.Pointer(&_swig_i_2)), C.swig_type_243(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeWeightedMinimize__SWIG_1(arg2 IntVarVector, arg3 []int, arg4 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := arg4
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeWeightedMinimize__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_244)(unsafe.Pointer(&_swig_i_2)), C.swig_type_245(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeWeightedMinimize(a ...interface{}) OptimizeVar {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeWeightedMinimize__SWIG_0(a[0].(IntVarVector), a[1].([]int64), a[2].(int64))
	}
check_1:
	if argc == 3 {
		return p.MakeWeightedMinimize__SWIG_1(a[0].(IntVarVector), a[1].([]int), a[2].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeWeightedMaximize__SWIG_0(arg2 IntVarVector, arg3 []int64, arg4 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeWeightedMaximize__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_246)(unsafe.Pointer(&_swig_i_2)), C.swig_type_247(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeWeightedMaximize__SWIG_1(arg2 IntVarVector, arg3 []int, arg4 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	_swig_i_3 := arg4
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeWeightedMaximize__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_248)(unsafe.Pointer(&_swig_i_2)), C.swig_type_249(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrSolver) MakeWeightedMaximize(a ...interface{}) OptimizeVar {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[1].([]int64); !ok {
			goto check_1
		}
		return p.MakeWeightedMaximize__SWIG_0(a[0].(IntVarVector), a[1].([]int64), a[2].(int64))
	}
check_1:
	if argc == 3 {
		return p.MakeWeightedMaximize__SWIG_1(a[0].(IntVarVector), a[1].([]int), a[2].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeWeightedOptimize__SWIG_0(arg2 bool, arg3 IntVarVector, arg4 []int64, arg5 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeWeightedOptimize__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_250)(unsafe.Pointer(&_swig_i_3)), C.swig_type_251(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeWeightedOptimize__SWIG_1(arg2 bool, arg3 IntVarVector, arg4 []int, arg5 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyintSliceIn(arg4)

	_swig_i_4 := arg5
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeWeightedOptimize__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_252)(unsafe.Pointer(&_swig_i_3)), C.swig_type_253(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	return swig_r
}

func (p SwigcptrSolver) MakeWeightedOptimize(a ...interface{}) OptimizeVar {
	argc := len(a)
	if argc == 4 {
		if _, ok := a[2].([]int64); !ok {
			goto check_1
		}
		return p.MakeWeightedOptimize__SWIG_0(a[0].(bool), a[1].(IntVarVector), a[2].([]int64), a[3].(int64))
	}
check_1:
	if argc == 4 {
		return p.MakeWeightedOptimize__SWIG_1(a[0].(bool), a[1].(IntVarVector), a[2].([]int), a[3].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeLexicographicOptimize(arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_Solver_MakeLexicographicOptimize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_254)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeTabuSearch(arg2 bool, arg3 IntVar, arg4 int64, arg5 IntVarVector, arg6 int64, arg7 int64, arg8 float64) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeTabuSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_255(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_type_256(_swig_i_5), C.swig_type_257(_swig_i_6), C.double(_swig_i_7))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLexicographicTabuSearch(arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64, arg5 IntVarVector, arg6 int64, arg7 int64, arg8 float64) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeLexicographicTabuSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_258)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4), C.swig_type_259(_swig_i_5), C.swig_type_260(_swig_i_6), C.double(_swig_i_7))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGenericTabuSearch(arg2 bool, arg3 IntVar, arg4 int64, arg5 IntVarVector, arg6 int64) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := arg6
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeGenericTabuSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_261(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_type_262(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSimulatedAnnealing(arg2 bool, arg3 IntVar, arg4 int64, arg5 int64) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeSimulatedAnnealing_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_263(_swig_i_3), C.swig_type_264(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLexicographicSimulatedAnnealing(arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64, arg5 []int64) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeLexicographicSimulatedAnnealing_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_265)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_266)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGuidedLocalSearch__SWIG_0(arg2 bool, arg3 IntVar, arg4 RoutingTransitCallback2, arg5 int64, arg6 IntVarVector, arg7 float64, arg8 bool) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeGuidedLocalSearch__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_type_267(_swig_i_4), C.uintptr_t(_swig_i_5), C.double(_swig_i_6), C._Bool(_swig_i_7))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGuidedLocalSearch__SWIG_1(arg2 bool, arg3 IntVar, arg4 RoutingTransitCallback2, arg5 int64, arg6 IntVarVector, arg7 float64) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := arg7
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeGuidedLocalSearch__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_type_268(_swig_i_4), C.uintptr_t(_swig_i_5), C.double(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGuidedLocalSearch__SWIG_2(arg2 bool, arg3 IntVar, arg4 Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_, arg5 int64, arg6 IntVarVector, arg7 IntVarVector, arg8 float64, arg9 bool) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := getSwigcptr(arg7)
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeGuidedLocalSearch__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_type_269(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), C.double(_swig_i_7), C._Bool(_swig_i_8))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeGuidedLocalSearch__SWIG_3(arg2 bool, arg3 IntVar, arg4 Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_, arg5 int64, arg6 IntVarVector, arg7 IntVarVector, arg8 float64) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := getSwigcptr(arg7)
	_swig_i_7 := arg8
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_Solver_MakeGuidedLocalSearch__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_type_270(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), C.double(_swig_i_7))))
	return swig_r
}

func (p SwigcptrSolver) MakeGuidedLocalSearch(a ...interface{}) ObjectiveMonitor {
	argc := len(a)
	if argc == 6 {
		return p.MakeGuidedLocalSearch__SWIG_1(a[0].(bool), a[1].(IntVar), a[2].(RoutingTransitCallback2), a[3].(int64), a[4].(IntVarVector), a[5].(float64))
	}
	if argc == 7 {
		if _, ok := a[2].(SwigcptrRoutingTransitCallback2); !ok {
			goto check_2
		}
		if _, ok := a[5].(float64); !ok {
			goto check_2
		}
		if _, ok := a[6].(bool); !ok {
			goto check_2
		}
		return p.MakeGuidedLocalSearch__SWIG_0(a[0].(bool), a[1].(IntVar), a[2].(RoutingTransitCallback2), a[3].(int64), a[4].(IntVarVector), a[5].(float64), a[6].(bool))
	}
check_2:
	if argc == 7 {
		return p.MakeGuidedLocalSearch__SWIG_3(a[0].(bool), a[1].(IntVar), a[2].(Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_), a[3].(int64), a[4].(IntVarVector), a[5].(IntVarVector), a[6].(float64))
	}
	if argc == 8 {
		return p.MakeGuidedLocalSearch__SWIG_2(a[0].(bool), a[1].(IntVar), a[2].(Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_), a[3].(int64), a[4].(IntVarVector), a[5].(IntVarVector), a[6].(float64), a[7].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeLubyRestart(arg2 int) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeLubyRestart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeConstantRestart(arg2 int) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeConstantRestart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeTimeLimit__SWIG_0(arg2 Absl_Duration) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeTimeLimit__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeTimeLimit__SWIG_1(arg2 int64) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeTimeLimit__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_271(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) MakeTimeLimit(a ...interface{}) RegularLimit {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrAbsl_Duration); !ok {
			goto check_1
		}
		return p.MakeTimeLimit__SWIG_0(a[0].(Absl_Duration))
	}
check_1:
	if argc == 1 {
		return p.MakeTimeLimit__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeBranchesLimit(arg2 int64) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeBranchesLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_272(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFailuresLimit(arg2 int64) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeFailuresLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_273(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSolutionsLimit(arg2 int64) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeSolutionsLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_274(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLimit__SWIG_0(arg2 Absl_Duration, arg3 int64, arg4 int64, arg5 int64, arg6 bool, arg7 bool) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeLimit__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_275(_swig_i_2), C.swig_type_276(_swig_i_3), C.swig_type_277(_swig_i_4), C._Bool(_swig_i_5), C._Bool(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLimit__SWIG_1(arg2 Absl_Duration, arg3 int64, arg4 int64, arg5 int64, arg6 bool) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeLimit__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_278(_swig_i_2), C.swig_type_279(_swig_i_3), C.swig_type_280(_swig_i_4), C._Bool(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLimit__SWIG_2(arg2 Absl_Duration, arg3 int64, arg4 int64, arg5 int64) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeLimit__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_281(_swig_i_2), C.swig_type_282(_swig_i_3), C.swig_type_283(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLimit__SWIG_3(arg2 RegularLimitParameters) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeLimit__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_284)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLimit__SWIG_4(arg2 int64, arg3 int64, arg4 int64, arg5 int64, arg6 bool, arg7 bool) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeLimit__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_285(_swig_i_1), C.swig_type_286(_swig_i_2), C.swig_type_287(_swig_i_3), C.swig_type_288(_swig_i_4), C._Bool(_swig_i_5), C._Bool(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLimit__SWIG_5(arg2 int64, arg3 int64, arg4 int64, arg5 int64, arg6 bool) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeLimit__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_289(_swig_i_1), C.swig_type_290(_swig_i_2), C.swig_type_291(_swig_i_3), C.swig_type_292(_swig_i_4), C._Bool(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLimit__SWIG_6(arg2 int64, arg3 int64, arg4 int64, arg5 int64) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_Solver_MakeLimit__SWIG_6_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_293(_swig_i_1), C.swig_type_294(_swig_i_2), C.swig_type_295(_swig_i_3), C.swig_type_296(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDefaultRegularLimitParameters() (_swig_ret RegularLimitParameters) {
	var swig_r []byte
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Solver_MakeDefaultRegularLimitParameters_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]byte)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 RegularLimitParameters
{
  // go
  if err := proto.Unmarshal(swig_r, &swig_r_1); err != nil {
    panic(fmt.Sprintf("Unable to parse RegularLimitParameters protocol message: %v", err))
  }

  // free dynamic mem
  p := *(*swig_goslice)(unsafe.Pointer(&swig_r))
  Swig_free(p.arr)
}
	return swig_r_1
}

func (arg1 SwigcptrSolver) MakeLimit__SWIG_7(arg2 SearchLimit, arg3 SearchLimit) (_swig_ret SearchLimit) {
	var swig_r SearchLimit
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (SearchLimit)(SwigcptrSearchLimit(C._wrap_Solver_MakeLimit__SWIG_7_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeLimit(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.MakeLimit__SWIG_3(a[0].(RegularLimitParameters))
	}
	if argc == 2 {
		return p.MakeLimit__SWIG_7(a[0].(SearchLimit), a[1].(SearchLimit))
	}
	if argc == 4 {
		if _, ok := a[0].(SwigcptrAbsl_Duration); !ok {
			goto check_3
		}
		return p.MakeLimit__SWIG_2(a[0].(Absl_Duration), a[1].(int64), a[2].(int64), a[3].(int64))
	}
check_3:
	if argc == 4 {
		return p.MakeLimit__SWIG_6(a[0].(int64), a[1].(int64), a[2].(int64), a[3].(int64))
	}
	if argc == 5 {
		if _, ok := a[0].(SwigcptrAbsl_Duration); !ok {
			goto check_5
		}
		return p.MakeLimit__SWIG_1(a[0].(Absl_Duration), a[1].(int64), a[2].(int64), a[3].(int64), a[4].(bool))
	}
check_5:
	if argc == 5 {
		return p.MakeLimit__SWIG_5(a[0].(int64), a[1].(int64), a[2].(int64), a[3].(int64), a[4].(bool))
	}
	if argc == 6 {
		if _, ok := a[0].(SwigcptrAbsl_Duration); !ok {
			goto check_7
		}
		return p.MakeLimit__SWIG_0(a[0].(Absl_Duration), a[1].(int64), a[2].(int64), a[3].(int64), a[4].(bool), a[5].(bool))
	}
check_7:
	if argc == 6 {
		return p.MakeLimit__SWIG_4(a[0].(int64), a[1].(int64), a[2].(int64), a[3].(int64), a[4].(bool), a[5].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeImprovementLimit(arg2 IntVar, arg3 bool, arg4 float64, arg5 float64, arg6 float64, arg7 int) (_swig_ret ImprovementSearchLimit) {
	var swig_r ImprovementSearchLimit
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (ImprovementSearchLimit)(SwigcptrImprovementSearchLimit(C._wrap_Solver_MakeImprovementLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4), C.double(_swig_i_5), C.swig_intgo(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLexicographicImprovementLimit(arg2 IntVarVector, arg3 Std_vector_Sl_bool_Sg_, arg4 Std_vector_Sl_double_Sg_, arg5 Std_vector_Sl_double_Sg_, arg6 float64, arg7 int) (_swig_ret ImprovementSearchLimit) {
	var swig_r ImprovementSearchLimit
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (ImprovementSearchLimit)(SwigcptrImprovementSearchLimit(C._wrap_Solver_MakeLexicographicImprovementLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.double(_swig_i_5), C.swig_intgo(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeCustomLimit(arg2 Std_function_Sl_bool_Sp__SP__Sg_) (_swig_ret SearchLimit) {
	var swig_r SearchLimit
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SearchLimit)(SwigcptrSearchLimit(C._wrap_Solver_MakeCustomLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSearchLog__SWIG_0(arg2 int) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSearchLog__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSearchLog__SWIG_1(arg2 int, arg3 IntVar) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSearchLog__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSearchLog__SWIG_2(arg2 int, arg3 Std_function_Sl_std_string_Sp__SP__Sg_) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSearchLog__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSearchLog__SWIG_3(arg2 int, arg3 IntVar, arg4 Std_function_Sl_std_string_Sp__SP__Sg_) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSearchLog__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSearchLog__SWIG_4(arg2 int, arg3 IntVarVector, arg4 Std_function_Sl_std_string_Sp__SP__Sg_) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSearchLog__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSearchLog__SWIG_5(arg2 int, arg3 OptimizeVar) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSearchLog__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSearchLog__SWIG_6(arg2 int, arg3 OptimizeVar, arg4 Std_function_Sl_std_string_Sp__SP__Sg_) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSearchLog__SWIG_6_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (p SwigcptrSolver) MakeSearchLog(a ...interface{}) SearchMonitor {
	argc := len(a)
	if argc == 1 {
		return p.MakeSearchLog__SWIG_0(a[0].(int))
	}
	if argc == 2 {
		if _, ok := a[1].(SwigcptrIntVar); !ok {
			goto check_2
		}
		return p.MakeSearchLog__SWIG_1(a[0].(int), a[1].(IntVar))
	}
check_2:
	if argc == 2 {
		if _, ok := a[1].(SwigcptrStd_function_Sl_std_string_Sp__SP__Sg_); !ok {
			goto check_3
		}
		return p.MakeSearchLog__SWIG_2(a[0].(int), a[1].(Std_function_Sl_std_string_Sp__SP__Sg_))
	}
check_3:
	if argc == 2 {
		return p.MakeSearchLog__SWIG_5(a[0].(int), a[1].(OptimizeVar))
	}
	if argc == 3 {
		if _, ok := a[1].(IntVarVector); !ok {
			goto check_5
		}
		return p.MakeSearchLog__SWIG_4(a[0].(int), a[1].(IntVarVector), a[2].(Std_function_Sl_std_string_Sp__SP__Sg_))
	}
check_5:
	if argc == 3 {
		if _, ok := a[1].(SwigcptrIntVar); !ok {
			goto check_6
		}
		return p.MakeSearchLog__SWIG_3(a[0].(int), a[1].(IntVar), a[2].(Std_function_Sl_std_string_Sp__SP__Sg_))
	}
check_6:
	if argc == 3 {
		return p.MakeSearchLog__SWIG_6(a[0].(int), a[1].(OptimizeVar), a[2].(Std_function_Sl_std_string_Sp__SP__Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeSearchTrace(arg2 string) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSearchTrace_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_298)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeEnterSearchCallback(arg2 AtSolutionCallback) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeEnterSearchCallback_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeExitSearchCallback(arg2 AtSolutionCallback) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeExitSearchCallback_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAtSolutionCallback(arg2 AtSolutionCallback) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeAtSolutionCallback_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePrintModelVisitor() (_swig_ret ModelVisitor) {
	var swig_r ModelVisitor
	_swig_i_0 := arg1
	swig_r = (ModelVisitor)(SwigcptrModelVisitor(C._wrap_Solver_MakePrintModelVisitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeStatisticsModelVisitor() (_swig_ret ModelVisitor) {
	var swig_r ModelVisitor
	_swig_i_0 := arg1
	swig_r = (ModelVisitor)(SwigcptrModelVisitor(C._wrap_Solver_MakeStatisticsModelVisitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSymmetryManager__SWIG_0(arg2 SymmetryBreakerVector) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSymmetryManager__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSymmetryManager__SWIG_1(arg2 SymmetryBreaker) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSymmetryManager__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSymmetryManager__SWIG_2(arg2 SymmetryBreaker, arg3 SymmetryBreaker) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSymmetryManager__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSymmetryManager__SWIG_3(arg2 SymmetryBreaker, arg3 SymmetryBreaker, arg4 SymmetryBreaker) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSymmetryManager__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSymmetryManager__SWIG_4(arg2 SymmetryBreaker, arg3 SymmetryBreaker, arg4 SymmetryBreaker, arg5 SymmetryBreaker) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_Solver_MakeSymmetryManager__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (p SwigcptrSolver) MakeSymmetryManager(a ...interface{}) SearchMonitor {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SymmetryBreakerVector); !ok {
			goto check_1
		}
		return p.MakeSymmetryManager__SWIG_0(a[0].(SymmetryBreakerVector))
	}
check_1:
	if argc == 1 {
		return p.MakeSymmetryManager__SWIG_1(a[0].(SymmetryBreaker))
	}
	if argc == 2 {
		return p.MakeSymmetryManager__SWIG_2(a[0].(SymmetryBreaker), a[1].(SymmetryBreaker))
	}
	if argc == 3 {
		return p.MakeSymmetryManager__SWIG_3(a[0].(SymmetryBreaker), a[1].(SymmetryBreaker), a[2].(SymmetryBreaker))
	}
	if argc == 4 {
		return p.MakeSymmetryManager__SWIG_4(a[0].(SymmetryBreaker), a[1].(SymmetryBreaker), a[2].(SymmetryBreaker), a[3].(SymmetryBreaker))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeAssignVariableValue(arg2 IntVar, arg3 int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeAssignVariableValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_299(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeVariableLessOrEqualValue(arg2 IntVar, arg3 int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeVariableLessOrEqualValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_300(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeVariableGreaterOrEqualValue(arg2 IntVar, arg3 int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeVariableGreaterOrEqualValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_301(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSplitVariableDomain(arg2 IntVar, arg3 int64, arg4 bool) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeSplitVariableDomain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_302(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAssignVariableValueOrFail(arg2 IntVar, arg3 int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeAssignVariableValueOrFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_303(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAssignVariableValueOrDoNothing(arg2 IntVar, arg3 int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeAssignVariableValueOrDoNothing_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_304(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAssignVariablesValues(arg2 IntVarVector, arg3 []int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeAssignVariablesValues_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_305)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAssignVariablesValuesOrDoNothing(arg2 IntVarVector, arg3 []int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeAssignVariablesValuesOrDoNothing_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_306)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeAssignVariablesValuesOrFail(arg2 IntVarVector, arg3 []int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeAssignVariablesValuesOrFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_307)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSolver) MakeFailDecision() (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeFailDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDecision(arg2 Std_function_Sl_void_Sp_operations_research_Solver_Sm__SP__Sg_, arg3 Std_function_Sl_void_Sp_operations_research_Solver_Sm__SP__Sg_) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) Compose__SWIG_0(arg2 DecisionBuilder, arg3 DecisionBuilder) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_Compose__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) Compose__SWIG_1(arg2 DecisionBuilder, arg3 DecisionBuilder, arg4 DecisionBuilder) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_Compose__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) Compose__SWIG_2(arg2 DecisionBuilder, arg3 DecisionBuilder, arg4 DecisionBuilder, arg5 DecisionBuilder) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_Compose__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) Compose__SWIG_3(arg2 DecisionBuilderVector) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_Compose__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) Compose(a ...interface{}) DecisionBuilder {
	argc := len(a)
	if argc == 1 {
		return p.Compose__SWIG_3(a[0].(DecisionBuilderVector))
	}
	if argc == 2 {
		return p.Compose__SWIG_0(a[0].(DecisionBuilder), a[1].(DecisionBuilder))
	}
	if argc == 3 {
		return p.Compose__SWIG_1(a[0].(DecisionBuilder), a[1].(DecisionBuilder), a[2].(DecisionBuilder))
	}
	if argc == 4 {
		return p.Compose__SWIG_2(a[0].(DecisionBuilder), a[1].(DecisionBuilder), a[2].(DecisionBuilder), a[3].(DecisionBuilder))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) Try__SWIG_0(arg2 DecisionBuilder, arg3 DecisionBuilder) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_Try__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) Try__SWIG_1(arg2 DecisionBuilder, arg3 DecisionBuilder, arg4 DecisionBuilder) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_Try__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) Try__SWIG_2(arg2 DecisionBuilder, arg3 DecisionBuilder, arg4 DecisionBuilder, arg5 DecisionBuilder) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_Try__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) Try__SWIG_3(arg2 DecisionBuilderVector) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_Try__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) Try(a ...interface{}) DecisionBuilder {
	argc := len(a)
	if argc == 1 {
		return p.Try__SWIG_3(a[0].(DecisionBuilderVector))
	}
	if argc == 2 {
		return p.Try__SWIG_0(a[0].(DecisionBuilder), a[1].(DecisionBuilder))
	}
	if argc == 3 {
		return p.Try__SWIG_1(a[0].(DecisionBuilder), a[1].(DecisionBuilder), a[2].(DecisionBuilder))
	}
	if argc == 4 {
		return p.Try__SWIG_2(a[0].(DecisionBuilder), a[1].(DecisionBuilder), a[2].(DecisionBuilder), a[3].(DecisionBuilder))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_0(arg2 IntVarVector, arg3 Operations_researchSolverIntVarStrategy, arg4 Operations_researchSolverIntValueStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_1(arg2 IntVarVector, arg3 RoutingTransitCallback1, arg4 Operations_researchSolverIntValueStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_2(arg2 IntVarVector, arg3 Operations_researchSolverIntVarStrategy, arg4 RoutingTransitCallback2) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_3(arg2 IntVarVector, arg3 Operations_researchSolverIntVarStrategy, arg4 Std_function_Sl_bool_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_4(arg2 IntVarVector, arg3 RoutingTransitCallback1, arg4 RoutingTransitCallback2) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_5(arg2 IntVarVector, arg3 Operations_researchSolverIntVarStrategy, arg4 RoutingTransitCallback2, arg5 RoutingTransitCallback1) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_6(arg2 IntVarVector, arg3 RoutingTransitCallback1, arg4 RoutingTransitCallback2, arg5 RoutingTransitCallback1) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_6_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDefaultPhase__SWIG_0(arg2 IntVarVector) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeDefaultPhase__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeDefaultPhase__SWIG_1(arg2 IntVarVector, arg3 DefaultPhaseParameters) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeDefaultPhase__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeDefaultPhase(a ...interface{}) DecisionBuilder {
	argc := len(a)
	if argc == 1 {
		return p.MakeDefaultPhase__SWIG_0(a[0].(IntVarVector))
	}
	if argc == 2 {
		return p.MakeDefaultPhase__SWIG_1(a[0].(IntVarVector), a[1].(DefaultPhaseParameters))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_7(arg2 IntVar, arg3 Operations_researchSolverIntVarStrategy, arg4 Operations_researchSolverIntValueStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_7_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_8(arg2 IntVar, arg3 IntVar, arg4 Operations_researchSolverIntVarStrategy, arg5 Operations_researchSolverIntValueStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_8_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_9(arg2 IntVar, arg3 IntVar, arg4 IntVar, arg5 Operations_researchSolverIntVarStrategy, arg6 Operations_researchSolverIntValueStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_9_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_10(arg2 IntVar, arg3 IntVar, arg4 IntVar, arg5 IntVar, arg6 Operations_researchSolverIntVarStrategy, arg7 Operations_researchSolverIntValueStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_10_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_intgo(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeScheduleOrPostpone(arg2 IntervalVar, arg3 int64, arg4 *int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeScheduleOrPostpone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_308(_swig_i_2), C.swig_voidp(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeScheduleOrExpedite(arg2 IntervalVar, arg3 int64, arg4 *int64) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeScheduleOrExpedite_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_309(_swig_i_2), C.swig_voidp(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeRankFirstInterval(arg2 SequenceVar, arg3 int) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeRankFirstInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeRankLastInterval(arg2 SequenceVar, arg3 int) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_MakeRankLastInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_11(arg2 IntVarVector, arg3 RoutingTransitCallback2, arg4 Operations_researchSolverEvaluatorStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_11_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_12(arg2 IntVarVector, arg3 RoutingTransitCallback2, arg4 RoutingTransitCallback1, arg5 Operations_researchSolverEvaluatorStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_12_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_13(arg2 IntervalVarVector, arg3 Operations_researchSolverIntervalStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_13_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakePhase__SWIG_14(arg2 SequenceVarVector, arg3 Operations_researchSolverSequenceStrategy) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakePhase__SWIG_14_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakePhase(a ...interface{}) DecisionBuilder {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(IntervalVarVector); !ok {
			goto check_1
		}
		if _, ok := a[1].(Operations_researchSolverIntervalStrategy); !ok {
			goto check_1
		}
		return p.MakePhase__SWIG_13(a[0].(IntervalVarVector), a[1].(Operations_researchSolverIntervalStrategy))
	}
check_1:
	if argc == 2 {
		return p.MakePhase__SWIG_14(a[0].(SequenceVarVector), a[1].(Operations_researchSolverSequenceStrategy))
	}
	if argc == 3 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_3
		}
		if _, ok := a[1].(Operations_researchSolverIntVarStrategy); !ok {
			goto check_3
		}
		if _, ok := a[2].(SwigcptrRoutingTransitCallback2); !ok {
			goto check_3
		}
		return p.MakePhase__SWIG_2(a[0].(IntVarVector), a[1].(Operations_researchSolverIntVarStrategy), a[2].(RoutingTransitCallback2))
	}
check_3:
	if argc == 3 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_4
		}
		if _, ok := a[1].(Operations_researchSolverIntVarStrategy); !ok {
			goto check_4
		}
		if _, ok := a[2].(SwigcptrStd_function_Sl_bool_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_); !ok {
			goto check_4
		}
		return p.MakePhase__SWIG_3(a[0].(IntVarVector), a[1].(Operations_researchSolverIntVarStrategy), a[2].(Std_function_Sl_bool_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_))
	}
check_4:
	if argc == 3 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_5
		}
		if _, ok := a[1].(SwigcptrRoutingTransitCallback1); !ok {
			goto check_5
		}
		if _, ok := a[2].(SwigcptrRoutingTransitCallback2); !ok {
			goto check_5
		}
		return p.MakePhase__SWIG_4(a[0].(IntVarVector), a[1].(RoutingTransitCallback1), a[2].(RoutingTransitCallback2))
	}
check_5:
	if argc == 3 {
		if _, ok := a[0].(SwigcptrIntVar); !ok {
			goto check_6
		}
		if _, ok := a[1].(Operations_researchSolverIntVarStrategy); !ok {
			goto check_6
		}
		if _, ok := a[2].(Operations_researchSolverIntValueStrategy); !ok {
			goto check_6
		}
		return p.MakePhase__SWIG_7(a[0].(IntVar), a[1].(Operations_researchSolverIntVarStrategy), a[2].(Operations_researchSolverIntValueStrategy))
	}
check_6:
	if argc == 3 {
		if _, ok := a[1].(SwigcptrRoutingTransitCallback2); !ok {
			goto check_7
		}
		if _, ok := a[2].(Operations_researchSolverEvaluatorStrategy); !ok {
			goto check_7
		}
		return p.MakePhase__SWIG_11(a[0].(IntVarVector), a[1].(RoutingTransitCallback2), a[2].(Operations_researchSolverEvaluatorStrategy))
	}
check_7:
	if argc == 3 {
		if _, ok := a[1].(Operations_researchSolverIntVarStrategy); !ok {
			goto check_8
		}
		return p.MakePhase__SWIG_0(a[0].(IntVarVector), a[1].(Operations_researchSolverIntVarStrategy), a[2].(Operations_researchSolverIntValueStrategy))
	}
check_8:
	if argc == 3 {
		return p.MakePhase__SWIG_1(a[0].(IntVarVector), a[1].(RoutingTransitCallback1), a[2].(Operations_researchSolverIntValueStrategy))
	}
	if argc == 4 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_10
		}
		if _, ok := a[1].(SwigcptrRoutingTransitCallback1); !ok {
			goto check_10
		}
		if _, ok := a[2].(SwigcptrRoutingTransitCallback2); !ok {
			goto check_10
		}
		if _, ok := a[3].(SwigcptrRoutingTransitCallback1); !ok {
			goto check_10
		}
		return p.MakePhase__SWIG_6(a[0].(IntVarVector), a[1].(RoutingTransitCallback1), a[2].(RoutingTransitCallback2), a[3].(RoutingTransitCallback1))
	}
check_10:
	if argc == 4 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_11
		}
		if _, ok := a[1].(SwigcptrRoutingTransitCallback2); !ok {
			goto check_11
		}
		if _, ok := a[2].(SwigcptrRoutingTransitCallback1); !ok {
			goto check_11
		}
		if _, ok := a[3].(Operations_researchSolverEvaluatorStrategy); !ok {
			goto check_11
		}
		return p.MakePhase__SWIG_12(a[0].(IntVarVector), a[1].(RoutingTransitCallback2), a[2].(RoutingTransitCallback1), a[3].(Operations_researchSolverEvaluatorStrategy))
	}
check_11:
	if argc == 4 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_12
		}
		if _, ok := a[1].(Operations_researchSolverIntVarStrategy); !ok {
			goto check_12
		}
		if _, ok := a[2].(SwigcptrRoutingTransitCallback2); !ok {
			goto check_12
		}
		if _, ok := a[3].(SwigcptrRoutingTransitCallback1); !ok {
			goto check_12
		}
		return p.MakePhase__SWIG_5(a[0].(IntVarVector), a[1].(Operations_researchSolverIntVarStrategy), a[2].(RoutingTransitCallback2), a[3].(RoutingTransitCallback1))
	}
check_12:
	if argc == 4 {
		return p.MakePhase__SWIG_8(a[0].(IntVar), a[1].(IntVar), a[2].(Operations_researchSolverIntVarStrategy), a[3].(Operations_researchSolverIntValueStrategy))
	}
	if argc == 5 {
		return p.MakePhase__SWIG_9(a[0].(IntVar), a[1].(IntVar), a[2].(IntVar), a[3].(Operations_researchSolverIntVarStrategy), a[4].(Operations_researchSolverIntValueStrategy))
	}
	if argc == 6 {
		return p.MakePhase__SWIG_10(a[0].(IntVar), a[1].(IntVar), a[2].(IntVar), a[3].(IntVar), a[4].(Operations_researchSolverIntVarStrategy), a[5].(Operations_researchSolverIntValueStrategy))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeDecisionBuilderFromAssignment(arg2 Assignment, arg3 DecisionBuilder, arg4 IntVarVector) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeDecisionBuilderFromAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeConstraintAdder(arg2 Constraint) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeConstraintAdder_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSolveOnce__SWIG_0(arg2 DecisionBuilder) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeSolveOnce__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSolveOnce__SWIG_1(arg2 DecisionBuilder, arg3 SearchMonitor) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeSolveOnce__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSolveOnce__SWIG_2(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeSolveOnce__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSolveOnce__SWIG_3(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor, arg5 SearchMonitor) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeSolveOnce__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSolveOnce__SWIG_4(arg2 DecisionBuilder, arg3 SearchMonitor, arg4 SearchMonitor, arg5 SearchMonitor, arg6 SearchMonitor) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeSolveOnce__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSolveOnce__SWIG_5(arg2 DecisionBuilder, arg3 SearchMonitorVector) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeSolveOnce__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) MakeSolveOnce(a ...interface{}) DecisionBuilder {
	argc := len(a)
	if argc == 1 {
		return p.MakeSolveOnce__SWIG_0(a[0].(DecisionBuilder))
	}
	if argc == 2 {
		if _, ok := a[1].(SwigcptrSearchMonitor); !ok {
			goto check_2
		}
		return p.MakeSolveOnce__SWIG_1(a[0].(DecisionBuilder), a[1].(SearchMonitor))
	}
check_2:
	if argc == 2 {
		return p.MakeSolveOnce__SWIG_5(a[0].(DecisionBuilder), a[1].(SearchMonitorVector))
	}
	if argc == 3 {
		return p.MakeSolveOnce__SWIG_2(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor))
	}
	if argc == 4 {
		return p.MakeSolveOnce__SWIG_3(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor), a[3].(SearchMonitor))
	}
	if argc == 5 {
		return p.MakeSolveOnce__SWIG_4(a[0].(DecisionBuilder), a[1].(SearchMonitor), a[2].(SearchMonitor), a[3].(SearchMonitor), a[4].(SearchMonitor))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeNestedOptimize__SWIG_0(arg2 DecisionBuilder, arg3 Assignment, arg4 bool, arg5 int64) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeNestedOptimize__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_type_310(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNestedOptimize__SWIG_1(arg2 DecisionBuilder, arg3 Assignment, arg4 bool, arg5 int64, arg6 SearchMonitor) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeNestedOptimize__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_type_311(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNestedOptimize__SWIG_2(arg2 DecisionBuilder, arg3 Assignment, arg4 bool, arg5 int64, arg6 SearchMonitor, arg7 SearchMonitor) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := getSwigcptr(arg7)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeNestedOptimize__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_type_312(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNestedOptimize__SWIG_3(arg2 DecisionBuilder, arg3 Assignment, arg4 bool, arg5 int64, arg6 SearchMonitor, arg7 SearchMonitor, arg8 SearchMonitor) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := getSwigcptr(arg7)
	_swig_i_7 := getSwigcptr(arg8)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeNestedOptimize__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_type_313(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), C.uintptr_t(_swig_i_7))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNestedOptimize__SWIG_4(arg2 DecisionBuilder, arg3 Assignment, arg4 bool, arg5 int64, arg6 SearchMonitor, arg7 SearchMonitor, arg8 SearchMonitor, arg9 SearchMonitor) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := getSwigcptr(arg7)
	_swig_i_7 := getSwigcptr(arg8)
	_swig_i_8 := getSwigcptr(arg9)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeNestedOptimize__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_type_314(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), C.uintptr_t(_swig_i_7), C.uintptr_t(_swig_i_8))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNestedOptimize__SWIG_5(arg2 DecisionBuilder, arg3 Assignment, arg4 bool, arg5 int64, arg6 SearchMonitorVector) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeNestedOptimize__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_type_315(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func (p SwigcptrSolver) MakeNestedOptimize(a ...interface{}) DecisionBuilder {
	argc := len(a)
	if argc == 4 {
		return p.MakeNestedOptimize__SWIG_0(a[0].(DecisionBuilder), a[1].(Assignment), a[2].(bool), a[3].(int64))
	}
	if argc == 5 {
		if _, ok := a[4].(SwigcptrSearchMonitor); !ok {
			goto check_2
		}
		return p.MakeNestedOptimize__SWIG_1(a[0].(DecisionBuilder), a[1].(Assignment), a[2].(bool), a[3].(int64), a[4].(SearchMonitor))
	}
check_2:
	if argc == 5 {
		return p.MakeNestedOptimize__SWIG_5(a[0].(DecisionBuilder), a[1].(Assignment), a[2].(bool), a[3].(int64), a[4].(SearchMonitorVector))
	}
	if argc == 6 {
		return p.MakeNestedOptimize__SWIG_2(a[0].(DecisionBuilder), a[1].(Assignment), a[2].(bool), a[3].(int64), a[4].(SearchMonitor), a[5].(SearchMonitor))
	}
	if argc == 7 {
		return p.MakeNestedOptimize__SWIG_3(a[0].(DecisionBuilder), a[1].(Assignment), a[2].(bool), a[3].(int64), a[4].(SearchMonitor), a[5].(SearchMonitor), a[6].(SearchMonitor))
	}
	if argc == 8 {
		return p.MakeNestedOptimize__SWIG_4(a[0].(DecisionBuilder), a[1].(Assignment), a[2].(bool), a[3].(int64), a[4].(SearchMonitor), a[5].(SearchMonitor), a[6].(SearchMonitor), a[7].(SearchMonitor))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeRestoreAssignment(arg2 Assignment) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeRestoreAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeStoreAssignment(arg2 Assignment) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeStoreAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeOperator__SWIG_0(arg2 IntVarVector, arg3 Operations_researchSolverLocalSearchOperators, arg4 Std_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeOperator__SWIG_1(arg2 IntVarVector, arg3 Operations_researchSolverLocalSearchOperators) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeOperator__SWIG_2(arg2 IntVarVector, arg3 IntVarVector, arg4 Operations_researchSolverLocalSearchOperators, arg5 Std_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeOperator__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeOperator__SWIG_3(arg2 IntVarVector, arg3 IntVarVector, arg4 Operations_researchSolverLocalSearchOperators) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeOperator__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeOperator__SWIG_4(arg2 IntVarVector, arg3 Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_, arg4 Operations_researchSolverEvaluatorLocalSearchOperators) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeOperator__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeOperator__SWIG_5(arg2 IntVarVector, arg3 IntVarVector, arg4 Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_, arg5 Operations_researchSolverEvaluatorLocalSearchOperators) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeOperator__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (p SwigcptrSolver) MakeOperator(a ...interface{}) LocalSearchOperator {
	argc := len(a)
	if argc == 2 {
		return p.MakeOperator__SWIG_1(a[0].(IntVarVector), a[1].(Operations_researchSolverLocalSearchOperators))
	}
	if argc == 3 {
		if _, ok := a[1].(Operations_researchSolverLocalSearchOperators); !ok {
			goto check_2
		}
		if _, ok := a[2].(SwigcptrStd_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_); !ok {
			goto check_2
		}
		return p.MakeOperator__SWIG_0(a[0].(IntVarVector), a[1].(Operations_researchSolverLocalSearchOperators), a[2].(Std_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_))
	}
check_2:
	if argc == 3 {
		if _, ok := a[1].(IntVarVector); !ok {
			goto check_3
		}
		if _, ok := a[2].(Operations_researchSolverLocalSearchOperators); !ok {
			goto check_3
		}
		return p.MakeOperator__SWIG_3(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Operations_researchSolverLocalSearchOperators))
	}
check_3:
	if argc == 3 {
		return p.MakeOperator__SWIG_4(a[0].(IntVarVector), a[1].(Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_), a[2].(Operations_researchSolverEvaluatorLocalSearchOperators))
	}
	if argc == 4 {
		if _, ok := a[2].(Operations_researchSolverLocalSearchOperators); !ok {
			goto check_5
		}
		if _, ok := a[3].(SwigcptrStd_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_); !ok {
			goto check_5
		}
		return p.MakeOperator__SWIG_2(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Operations_researchSolverLocalSearchOperators), a[3].(Std_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_))
	}
check_5:
	if argc == 4 {
		return p.MakeOperator__SWIG_5(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_), a[3].(Operations_researchSolverEvaluatorLocalSearchOperators))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeRandomLnsOperator__SWIG_0(arg2 IntVarVector, arg3 int) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeRandomLnsOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeRandomLnsOperator__SWIG_1(arg2 IntVarVector, arg3 int, arg4 int) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeRandomLnsOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (p SwigcptrSolver) MakeRandomLnsOperator(a ...interface{}) LocalSearchOperator {
	argc := len(a)
	if argc == 2 {
		return p.MakeRandomLnsOperator__SWIG_0(a[0].(IntVarVector), a[1].(int))
	}
	if argc == 3 {
		return p.MakeRandomLnsOperator__SWIG_1(a[0].(IntVarVector), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeMoveTowardTargetOperator__SWIG_0(arg2 Assignment) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeMoveTowardTargetOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeMoveTowardTargetOperator__SWIG_1(arg2 IntVarVector, arg3 []int64) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeMoveTowardTargetOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_316)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrSolver) MakeMoveTowardTargetOperator(a ...interface{}) LocalSearchOperator {
	argc := len(a)
	if argc == 1 {
		return p.MakeMoveTowardTargetOperator__SWIG_0(a[0].(Assignment))
	}
	if argc == 2 {
		return p.MakeMoveTowardTargetOperator__SWIG_1(a[0].(IntVarVector), a[1].([]int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) ConcatenateOperators__SWIG_0(arg2 LocalSearchOperatorVector) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_ConcatenateOperators__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) ConcatenateOperators__SWIG_1(arg2 LocalSearchOperatorVector, arg3 bool) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_ConcatenateOperators__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) ConcatenateOperators__SWIG_2(arg2 LocalSearchOperatorVector, arg3 Std_function_Sl_long_SS_long_Sp_int_Sc_int_SP__Sg_) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_ConcatenateOperators__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) ConcatenateOperators(a ...interface{}) LocalSearchOperator {
	argc := len(a)
	if argc == 1 {
		return p.ConcatenateOperators__SWIG_0(a[0].(LocalSearchOperatorVector))
	}
	if argc == 2 {
		if _, ok := a[1].(SwigcptrStd_function_Sl_long_SS_long_Sp_int_Sc_int_SP__Sg_); !ok {
			goto check_2
		}
		return p.ConcatenateOperators__SWIG_2(a[0].(LocalSearchOperatorVector), a[1].(Std_function_Sl_long_SS_long_Sp_int_Sc_int_SP__Sg_))
	}
check_2:
	if argc == 2 {
		return p.ConcatenateOperators__SWIG_1(a[0].(LocalSearchOperatorVector), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) RandomConcatenateOperators__SWIG_0(arg2 LocalSearchOperatorVector) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_RandomConcatenateOperators__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) RandomConcatenateOperators__SWIG_1(arg2 LocalSearchOperatorVector, arg3 int) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_RandomConcatenateOperators__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (p SwigcptrSolver) RandomConcatenateOperators(a ...interface{}) LocalSearchOperator {
	argc := len(a)
	if argc == 1 {
		return p.RandomConcatenateOperators__SWIG_0(a[0].(LocalSearchOperatorVector))
	}
	if argc == 2 {
		return p.RandomConcatenateOperators__SWIG_1(a[0].(LocalSearchOperatorVector), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MultiArmedBanditConcatenateOperators(arg2 LocalSearchOperatorVector, arg3 float64, arg4 float64, arg5 bool) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MultiArmedBanditConcatenateOperators_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), C._Bool(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeNeighborhoodLimit(arg2 LocalSearchOperator, arg3 int64) (_swig_ret LocalSearchOperator) {
	var swig_r LocalSearchOperator
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (LocalSearchOperator)(SwigcptrLocalSearchOperator(C._wrap_Solver_MakeNeighborhoodLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_317(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhase__SWIG_0(arg2 Assignment, arg3 LocalSearchPhaseParameters) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeLocalSearchPhase__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhase__SWIG_1(arg2 IntVarVector, arg3 DecisionBuilder, arg4 LocalSearchPhaseParameters) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeLocalSearchPhase__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhase__SWIG_2(arg2 IntVarVector, arg3 DecisionBuilder, arg4 DecisionBuilder, arg5 LocalSearchPhaseParameters) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeLocalSearchPhase__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhase__SWIG_3(arg2 SequenceVarVector, arg3 DecisionBuilder, arg4 LocalSearchPhaseParameters) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeLocalSearchPhase__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (p SwigcptrSolver) MakeLocalSearchPhase(a ...interface{}) DecisionBuilder {
	argc := len(a)
	if argc == 2 {
		return p.MakeLocalSearchPhase__SWIG_0(a[0].(Assignment), a[1].(LocalSearchPhaseParameters))
	}
	if argc == 3 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_2
		}
		return p.MakeLocalSearchPhase__SWIG_1(a[0].(IntVarVector), a[1].(DecisionBuilder), a[2].(LocalSearchPhaseParameters))
	}
check_2:
	if argc == 3 {
		return p.MakeLocalSearchPhase__SWIG_3(a[0].(SequenceVarVector), a[1].(DecisionBuilder), a[2].(LocalSearchPhaseParameters))
	}
	if argc == 4 {
		return p.MakeLocalSearchPhase__SWIG_2(a[0].(IntVarVector), a[1].(DecisionBuilder), a[2].(DecisionBuilder), a[3].(LocalSearchPhaseParameters))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) RunUncheckedLocalSearch__SWIG_0(arg2 Assignment, arg3 LocalSearchFilterManager, arg4 LocalSearchOperator, arg5 SearchMonitorVector, arg6 RegularLimit, arg7 Absl_flat_hash_set_Sl_operations_research_IntVar_Sm__Sg_) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := getSwigcptr(arg7)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_Solver_RunUncheckedLocalSearch__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrSolver) RunUncheckedLocalSearch__SWIG_1(arg2 Assignment, arg3 LocalSearchFilterManager, arg4 LocalSearchOperator, arg5 SearchMonitorVector, arg6 RegularLimit) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_Solver_RunUncheckedLocalSearch__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func (p SwigcptrSolver) RunUncheckedLocalSearch(a ...interface{}) Assignment {
	argc := len(a)
	if argc == 5 {
		return p.RunUncheckedLocalSearch__SWIG_1(a[0].(Assignment), a[1].(LocalSearchFilterManager), a[2].(LocalSearchOperator), a[3].(SearchMonitorVector), a[4].(RegularLimit))
	}
	if argc == 6 {
		return p.RunUncheckedLocalSearch__SWIG_0(a[0].(Assignment), a[1].(LocalSearchFilterManager), a[2].(LocalSearchOperator), a[3].(SearchMonitorVector), a[4].(RegularLimit), a[5].(Absl_flat_hash_set_Sl_operations_research_IntVar_Sm__Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeDefaultSolutionPool() (_swig_ret SolutionPool) {
	var swig_r SolutionPool
	_swig_i_0 := arg1
	swig_r = (SolutionPool)(SwigcptrSolutionPool(C._wrap_Solver_MakeDefaultSolutionPool_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhaseParameters__SWIG_0(arg2 IntVar, arg3 LocalSearchOperator, arg4 DecisionBuilder) (_swig_ret LocalSearchPhaseParameters) {
	var swig_r LocalSearchPhaseParameters
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (LocalSearchPhaseParameters)(SwigcptrLocalSearchPhaseParameters(C._wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhaseParameters__SWIG_1(arg2 IntVar, arg3 LocalSearchOperator, arg4 DecisionBuilder, arg5 RegularLimit) (_swig_ret LocalSearchPhaseParameters) {
	var swig_r LocalSearchPhaseParameters
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (LocalSearchPhaseParameters)(SwigcptrLocalSearchPhaseParameters(C._wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhaseParameters__SWIG_2(arg2 IntVar, arg3 LocalSearchOperator, arg4 DecisionBuilder, arg5 RegularLimit, arg6 LocalSearchFilterManager) (_swig_ret LocalSearchPhaseParameters) {
	var swig_r LocalSearchPhaseParameters
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (LocalSearchPhaseParameters)(SwigcptrLocalSearchPhaseParameters(C._wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhaseParameters__SWIG_3(arg2 IntVar, arg3 SolutionPool, arg4 LocalSearchOperator, arg5 DecisionBuilder) (_swig_ret LocalSearchPhaseParameters) {
	var swig_r LocalSearchPhaseParameters
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (LocalSearchPhaseParameters)(SwigcptrLocalSearchPhaseParameters(C._wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhaseParameters__SWIG_4(arg2 IntVar, arg3 SolutionPool, arg4 LocalSearchOperator, arg5 DecisionBuilder, arg6 RegularLimit) (_swig_ret LocalSearchPhaseParameters) {
	var swig_r LocalSearchPhaseParameters
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (LocalSearchPhaseParameters)(SwigcptrLocalSearchPhaseParameters(C._wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeLocalSearchPhaseParameters__SWIG_5(arg2 IntVar, arg3 SolutionPool, arg4 LocalSearchOperator, arg5 DecisionBuilder, arg6 RegularLimit, arg7 LocalSearchFilterManager) (_swig_ret LocalSearchPhaseParameters) {
	var swig_r LocalSearchPhaseParameters
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := getSwigcptr(arg7)
	swig_r = (LocalSearchPhaseParameters)(SwigcptrLocalSearchPhaseParameters(C._wrap_Solver_MakeLocalSearchPhaseParameters__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6))))
	return swig_r
}

func (p SwigcptrSolver) MakeLocalSearchPhaseParameters(a ...interface{}) LocalSearchPhaseParameters {
	argc := len(a)
	if argc == 3 {
		return p.MakeLocalSearchPhaseParameters__SWIG_0(a[0].(IntVar), a[1].(LocalSearchOperator), a[2].(DecisionBuilder))
	}
	if argc == 4 {
		if _, ok := a[1].(SwigcptrLocalSearchOperator); !ok {
			goto check_2
		}
		if _, ok := a[2].(SwigcptrDecisionBuilder); !ok {
			goto check_2
		}
		if _, ok := a[3].(SwigcptrRegularLimit); !ok {
			goto check_2
		}
		return p.MakeLocalSearchPhaseParameters__SWIG_1(a[0].(IntVar), a[1].(LocalSearchOperator), a[2].(DecisionBuilder), a[3].(RegularLimit))
	}
check_2:
	if argc == 4 {
		return p.MakeLocalSearchPhaseParameters__SWIG_3(a[0].(IntVar), a[1].(SolutionPool), a[2].(LocalSearchOperator), a[3].(DecisionBuilder))
	}
	if argc == 5 {
		if _, ok := a[1].(SwigcptrLocalSearchOperator); !ok {
			goto check_4
		}
		if _, ok := a[2].(SwigcptrDecisionBuilder); !ok {
			goto check_4
		}
		if _, ok := a[3].(SwigcptrRegularLimit); !ok {
			goto check_4
		}
		if _, ok := a[4].(SwigcptrLocalSearchFilterManager); !ok {
			goto check_4
		}
		return p.MakeLocalSearchPhaseParameters__SWIG_2(a[0].(IntVar), a[1].(LocalSearchOperator), a[2].(DecisionBuilder), a[3].(RegularLimit), a[4].(LocalSearchFilterManager))
	}
check_4:
	if argc == 5 {
		return p.MakeLocalSearchPhaseParameters__SWIG_4(a[0].(IntVar), a[1].(SolutionPool), a[2].(LocalSearchOperator), a[3].(DecisionBuilder), a[4].(RegularLimit))
	}
	if argc == 6 {
		return p.MakeLocalSearchPhaseParameters__SWIG_5(a[0].(IntVar), a[1].(SolutionPool), a[2].(LocalSearchOperator), a[3].(DecisionBuilder), a[4].(RegularLimit), a[5].(LocalSearchFilterManager))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) MakeAcceptFilter() (_swig_ret LocalSearchFilter) {
	var swig_r LocalSearchFilter
	_swig_i_0 := arg1
	swig_r = (LocalSearchFilter)(SwigcptrLocalSearchFilter(C._wrap_Solver_MakeAcceptFilter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeRejectFilter() (_swig_ret LocalSearchFilter) {
	var swig_r LocalSearchFilter
	_swig_i_0 := arg1
	swig_r = (LocalSearchFilter)(SwigcptrLocalSearchFilter(C._wrap_Solver_MakeRejectFilter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeVariableDomainFilter() (_swig_ret LocalSearchFilter) {
	var swig_r LocalSearchFilter
	_swig_i_0 := arg1
	swig_r = (LocalSearchFilter)(SwigcptrLocalSearchFilter(C._wrap_Solver_MakeVariableDomainFilter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSumObjectiveFilter__SWIG_0(arg2 IntVarVector, arg3 RoutingTransitCallback2, arg4 Operations_researchSolverLocalSearchFilterBound) (_swig_ret IntVarLocalSearchFilter) {
	var swig_r IntVarLocalSearchFilter
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (IntVarLocalSearchFilter)(SwigcptrIntVarLocalSearchFilter(C._wrap_Solver_MakeSumObjectiveFilter__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrSolver) MakeSumObjectiveFilter__SWIG_1(arg2 IntVarVector, arg3 IntVarVector, arg4 Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_, arg5 Operations_researchSolverLocalSearchFilterBound) (_swig_ret IntVarLocalSearchFilter) {
	var swig_r IntVarLocalSearchFilter
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	swig_r = (IntVarLocalSearchFilter)(SwigcptrIntVarLocalSearchFilter(C._wrap_Solver_MakeSumObjectiveFilter__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (p SwigcptrSolver) MakeSumObjectiveFilter(a ...interface{}) IntVarLocalSearchFilter {
	argc := len(a)
	if argc == 3 {
		return p.MakeSumObjectiveFilter__SWIG_0(a[0].(IntVarVector), a[1].(RoutingTransitCallback2), a[2].(Operations_researchSolverLocalSearchFilterBound))
	}
	if argc == 4 {
		return p.MakeSumObjectiveFilter__SWIG_1(a[0].(IntVarVector), a[1].(IntVarVector), a[2].(Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_), a[3].(Operations_researchSolverLocalSearchFilterBound))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) TopPeriodicCheck() {
	_swig_i_0 := arg1
	C._wrap_Solver_TopPeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) TopProgressPercent() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Solver_TopProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) PushState() {
	_swig_i_0 := arg1
	C._wrap_Solver_PushState_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) PopState() {
	_swig_i_0 := arg1
	C._wrap_Solver_PopState_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) SearchDepth() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Solver_SearchDepth_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) SearchLeftDepth() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Solver_SearchLeftDepth_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) SolveDepth() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Solver_SolveDepth_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Rand64(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_Solver_Rand64_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_319(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) Rand32(arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Solver_Rand32_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) ReSeed(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Solver_ReSeed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSolver) ExportProfilingOverview(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Solver_ExportProfilingOverview_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_320)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSolver) LocalSearchProfile() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Solver_LocalSearchProfile_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSolver) CurrentlyInSolve() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_CurrentlyInSolve_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Constraints() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Solver_Constraints_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Solver_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolver) BalancingDecision() (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	swig_r = (Decision)(SwigcptrDecision(C._wrap_Solver_BalancingDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) ClearFailIntercept() {
	_swig_i_0 := arg1
	C._wrap_Solver_ClearFailIntercept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) SetUseFastLocalSearch(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Solver_SetUseFastLocalSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSolver) UseFastLocalSearch() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_UseFastLocalSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) HasName(arg2 PropagationBaseObject) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Solver_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) RegisterDemon(arg2 Demon) (_swig_ret Demon) {
	var swig_r Demon
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Demon)(SwigcptrDemon(C._wrap_Solver_RegisterDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) RegisterIntExpr(arg2 IntExpr) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_RegisterIntExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) RegisterIntVar(arg2 IntVar) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Solver_RegisterIntVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) RegisterIntervalVar(arg2 IntervalVar) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_Solver_RegisterIntervalVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) Cache() (_swig_ret ModelCache) {
	var swig_r ModelCache
	_swig_i_0 := arg1
	swig_r = (ModelCache)(SwigcptrModelCache(C._wrap_Solver_Cache_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) InstrumentsDemons() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_InstrumentsDemons_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) IsProfilingEnabled() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_IsProfilingEnabled_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) IsLocalSearchProfilingEnabled() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_IsLocalSearchProfilingEnabled_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) InstrumentsVariables() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_InstrumentsVariables_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) NameAllVariables() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_NameAllVariables_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) ModelName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Solver_ModelName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSolver) GetPropagationMonitor() (_swig_ret PropagationMonitor) {
	var swig_r PropagationMonitor
	_swig_i_0 := arg1
	swig_r = (PropagationMonitor)(SwigcptrPropagationMonitor(C._wrap_Solver_GetPropagationMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) AddPropagationMonitor(arg2 PropagationMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Solver_AddPropagationMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolver) GetLocalSearchMonitor() (_swig_ret LocalSearchMonitor) {
	var swig_r LocalSearchMonitor
	_swig_i_0 := arg1
	swig_r = (LocalSearchMonitor)(SwigcptrLocalSearchMonitor(C._wrap_Solver_GetLocalSearchMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) AddLocalSearchMonitor(arg2 LocalSearchMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Solver_AddLocalSearchMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolver) GetOrCreateLocalSearchState() (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_Solver_GetOrCreateLocalSearchState_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) ClearLocalSearchState() {
	_swig_i_0 := arg1
	C._wrap_Solver_ClearLocalSearchState_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) CastExpression(arg2 IntVar) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_Solver_CastExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolver) FinishCurrentSearch() {
	_swig_i_0 := arg1
	C._wrap_Solver_FinishCurrentSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) RestartCurrentSearch() {
	_swig_i_0 := arg1
	C._wrap_Solver_RestartCurrentSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) ShouldFail() {
	_swig_i_0 := arg1
	C._wrap_Solver_ShouldFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) CheckFail() {
	_swig_i_0 := arg1
	C._wrap_Solver_CheckFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) MakeProfiledDecisionBuilderWrapper(arg2 DecisionBuilder) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_Solver_MakeProfiledDecisionBuilderWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

type Solver interface {
	Swigcptr() uintptr
	SwigIsSolver()
	Parameters() (_swig_ret ConstraintSolverParameters)
	ConstParameters() (_swig_ret *ConstraintSolverParameters)
	AddConstraint(arg2 Constraint)
	AddCastConstraint(arg2 CastConstraint, arg3 IntVar, arg4 IntExpr)
	Solve(a ...interface{}) bool
	NewSearch(a ...interface{})
	NextSolution() (_swig_ret bool)
	RestartSearch()
	EndSearch()
	SolveAndCommit(a ...interface{}) bool
	CheckAssignment(arg2 Assignment) (_swig_ret bool)
	CheckConstraint(arg2 Constraint) (_swig_ret bool)
	State() (_swig_ret Operations_researchSolverSolverState)
	Fail()
	ToString() (_swig_ret string)
	WallTime() (_swig_ret int64)
	Branches() (_swig_ret int64)
	Solutions() (_swig_ret int64)
	UncheckedSolutions() (_swig_ret int64)
	DemonRuns(arg2 Operations_researchSolverDemonPriority) (_swig_ret int64)
	Failures() (_swig_ret int64)
	Neighbors() (_swig_ret int64)
	ClearNeighbors()
	IncrementNeighbors()
	FilteredNeighbors() (_swig_ret int64)
	AcceptedNeighbors() (_swig_ret int64)
	Stamp() (_swig_ret uint64)
	FailStamp() (_swig_ret uint64)
	SetContext(arg2 Absl_string_view)
	Context() (_swig_ret string)
	SetOptimizationDirection(arg2 Operations_researchSolverOptimizationDirection)
	MakeIntVar(a ...interface{}) IntVar
	MakeBoolVar(a ...interface{}) IntVar
	MakeIntConst(a ...interface{}) IntVar
	MakeSum(a ...interface{}) IntExpr
	MakeScalProd(a ...interface{}) IntExpr
	MakeDifference(a ...interface{}) IntExpr
	MakeOpposite(arg2 IntExpr) (_swig_ret IntExpr)
	MakeProd(a ...interface{}) IntExpr
	MakeDiv(a ...interface{}) IntExpr
	MakeAbs(arg2 IntExpr) (_swig_ret IntExpr)
	MakeSquare(arg2 IntExpr) (_swig_ret IntExpr)
	MakePower(arg2 IntExpr, arg3 int64) (_swig_ret IntExpr)
	MakeMonotonicElement(arg2 RoutingTransitCallback1, arg3 bool, arg4 IntVar) (_swig_ret IntExpr)
	MakeElement(a ...interface{}) IntExpr
	MakeIndexExpression(arg2 IntVarVector, arg3 int64) (_swig_ret IntExpr)
	MakeIfThenElseCt(arg2 IntVar, arg3 IntExpr, arg4 IntExpr, arg5 IntVar) (_swig_ret Constraint)
	MakeMin(a ...interface{}) IntExpr
	MakeMax(a ...interface{}) IntExpr
	MakeConvexPiecewiseExpr(arg2 IntExpr, arg3 int64, arg4 int64, arg5 int64, arg6 int64) (_swig_ret IntExpr)
	MakeSemiContinuousExpr(arg2 IntExpr, arg3 int64, arg4 int64) (_swig_ret IntExpr)
	MakeModulo(a ...interface{}) IntExpr
	MakeConditionalExpression(arg2 IntVar, arg3 IntExpr, arg4 int64) (_swig_ret IntExpr)
	MakeTrueConstraint() (_swig_ret Constraint)
	MakeFalseConstraint(a ...interface{}) Constraint
	MakeIsEqualCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint)
	MakeIsEqualCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar)
	MakeIsEqualCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint)
	MakeIsEqualVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar)
	MakeIsDifferentCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint)
	MakeIsDifferentCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar)
	MakeIsDifferentVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar)
	MakeIsDifferentCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint)
	MakeNonEquality(a ...interface{}) Constraint
	MakeIsLessOrEqualCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint)
	MakeIsLessOrEqualCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar)
	MakeIsLessOrEqualVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar)
	MakeIsLessOrEqualCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint)
	MakeLessOrEqual(a ...interface{}) Constraint
	MakeIsGreaterOrEqualCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint)
	MakeIsGreaterOrEqualCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar)
	MakeIsGreaterOrEqualVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar)
	MakeIsGreaterOrEqualCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint)
	MakeGreaterOrEqual(a ...interface{}) Constraint
	MakeIsGreaterCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint)
	MakeIsGreaterCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar)
	MakeIsGreaterVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar)
	MakeIsGreaterCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint)
	MakeGreater(a ...interface{}) Constraint
	MakeIsLessCstCt(arg2 IntExpr, arg3 int64, arg4 IntVar) (_swig_ret Constraint)
	MakeIsLessCstVar(arg2 IntExpr, arg3 int64) (_swig_ret IntVar)
	MakeIsLessVar(arg2 IntExpr, arg3 IntExpr) (_swig_ret IntVar)
	MakeIsLessCt(arg2 IntExpr, arg3 IntExpr, arg4 IntVar) (_swig_ret Constraint)
	MakeLess(a ...interface{}) Constraint
	MakeSumLessOrEqual(arg2 IntVarVector, arg3 int64) (_swig_ret Constraint)
	MakeSumGreaterOrEqual(arg2 IntVarVector, arg3 int64) (_swig_ret Constraint)
	MakeSumEquality(a ...interface{}) Constraint
	MakeScalProdEquality(a ...interface{}) Constraint
	MakeScalProdGreaterOrEqual(a ...interface{}) Constraint
	MakeScalProdLessOrEqual(a ...interface{}) Constraint
	MakeMinEquality(arg2 IntVarVector, arg3 IntVar) (_swig_ret Constraint)
	MakeMaxEquality(arg2 IntVarVector, arg3 IntVar) (_swig_ret Constraint)
	MakeElementEquality(a ...interface{}) Constraint
	MakeAbsEquality(arg2 IntVar, arg3 IntVar) (_swig_ret Constraint)
	MakeIndexOfConstraint(arg2 IntVarVector, arg3 IntVar, arg4 int64) (_swig_ret Constraint)
	MakeConstraintInitialPropagateCallback(arg2 Constraint) (_swig_ret Demon)
	MakeDelayedConstraintInitialPropagateCallback(arg2 Constraint) (_swig_ret Demon)
	MakeClosureDemon(arg2 AtSolutionCallback) (_swig_ret Demon)
	MakeBetweenCt(arg2 IntExpr, arg3 int64, arg4 int64) (_swig_ret Constraint)
	MakeNotBetweenCt(arg2 IntExpr, arg3 int64, arg4 int64) (_swig_ret Constraint)
	MakeIsBetweenCt(arg2 IntExpr, arg3 int64, arg4 int64, arg5 IntVar) (_swig_ret Constraint)
	MakeIsBetweenVar(arg2 IntExpr, arg3 int64, arg4 int64) (_swig_ret IntVar)
	MakeMemberCt(a ...interface{}) Constraint
	MakeNotMemberCt(a ...interface{}) Constraint
	MakeIsMemberCt(a ...interface{}) Constraint
	MakeIsMemberVar(a ...interface{}) IntVar
	MakeCount(a ...interface{}) Constraint
	MakeDistribute(a ...interface{}) Constraint
	MakeDeviation(arg2 IntVarVector, arg3 IntVar, arg4 int64) (_swig_ret Constraint)
	MakeAllDifferent(a ...interface{}) Constraint
	MakeAllDifferentExcept(arg2 IntVarVector, arg3 int64) (_swig_ret Constraint)
	MakeSortingConstraint(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint)
	MakeLexicalLess(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint)
	MakeLexicalLessOrEqual(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint)
	MakeLexicalLessOrEqualWithOffsets(arg2 IntVarVector, arg3 IntVarVector, arg4 []int64) (_swig_ret Constraint)
	MakeIsLexicalLessOrEqualWithOffsetsCt(arg2 IntVarVector, arg3 IntVarVector, arg4 []int64, arg5 IntVar) (_swig_ret Constraint)
	MakeInversePermutationConstraint(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint)
	MakeIndexOfFirstMaxValueConstraint(arg2 IntVar, arg3 IntVarVector) (_swig_ret Constraint)
	MakeIndexOfFirstMinValueConstraint(arg2 IntVar, arg3 IntVarVector) (_swig_ret Constraint)
	MakeNullIntersect(arg2 IntVarVector, arg3 IntVarVector) (_swig_ret Constraint)
	MakeNullIntersectExcept(arg2 IntVarVector, arg3 IntVarVector, arg4 int64) (_swig_ret Constraint)
	MakeNoCycle(a ...interface{}) Constraint
	MakeCircuit(arg2 IntVarVector) (_swig_ret Constraint)
	MakeSubCircuit(arg2 IntVarVector) (_swig_ret Constraint)
	MakeDelayedPathCumul(arg2 IntVarVector, arg3 IntVarVector, arg4 IntVarVector, arg5 IntVarVector) (_swig_ret Constraint)
	MakePathCumul(a ...interface{}) Constraint
	MakePathConnected(arg2 IntVarVector, arg3 []int64, arg4 []int64, arg5 IntVarVector) (_swig_ret Constraint)
	MakeMapDomain(arg2 IntVar, arg3 IntVarVector) (_swig_ret Constraint)
	MakeAllowedAssignments(arg2 IntVarVector, arg3 IntTupleSet) (_swig_ret Constraint)
	MakeTransitionConstraint(a ...interface{}) Constraint
	MakeNonOverlappingBoxesConstraint(a ...interface{}) Constraint
	MakeNonOverlappingNonStrictBoxesConstraint(a ...interface{}) Constraint
	MakePack(arg2 IntVarVector, arg3 int) (_swig_ret Pack)
	MakeFixedDurationIntervalVar(a ...interface{}) IntervalVar
	MakeFixedInterval(arg2 int64, arg3 int64, arg4 string) (_swig_ret IntervalVar)
	MakeIntervalVar(arg2 int64, arg3 int64, arg4 int64, arg5 int64, arg6 int64, arg7 int64, arg8 bool, arg9 string) (_swig_ret IntervalVar)
	MakeIntervalVarArray(arg2 int, arg3 int64, arg4 int64, arg5 int64, arg6 int64, arg7 int64, arg8 int64, arg9 bool, arg10 Absl_string_view, arg11 IntervalVarVector)
	MakeMirrorInterval(arg2 IntervalVar) (_swig_ret IntervalVar)
	MakeFixedDurationStartSyncedOnStartIntervalVar(arg2 IntervalVar, arg3 int64, arg4 int64) (_swig_ret IntervalVar)
	MakeFixedDurationStartSyncedOnEndIntervalVar(arg2 IntervalVar, arg3 int64, arg4 int64) (_swig_ret IntervalVar)
	MakeFixedDurationEndSyncedOnStartIntervalVar(arg2 IntervalVar, arg3 int64, arg4 int64) (_swig_ret IntervalVar)
	MakeFixedDurationEndSyncedOnEndIntervalVar(arg2 IntervalVar, arg3 int64, arg4 int64) (_swig_ret IntervalVar)
	MakeIntervalRelaxedMin(arg2 IntervalVar) (_swig_ret IntervalVar)
	MakeIntervalRelaxedMax(arg2 IntervalVar) (_swig_ret IntervalVar)
	MakeIntervalVarRelation(a ...interface{}) Constraint
	MakeIntervalVarRelationWithDelay(arg2 IntervalVar, arg3 Operations_researchSolverBinaryIntervalRelation, arg4 IntervalVar, arg5 int64) (_swig_ret Constraint)
	MakeTemporalDisjunction(a ...interface{}) Constraint
	MakeDisjunctiveConstraint(arg2 IntervalVarVector, arg3 string) (_swig_ret DisjunctiveConstraint)
	MakeStrictDisjunctiveConstraint(arg2 IntervalVarVector, arg3 string) (_swig_ret DisjunctiveConstraint)
	MakeCumulative(a ...interface{}) Constraint
	MakeCover(arg2 IntervalVarVector, arg3 IntervalVar) (_swig_ret Constraint)
	MakeEquality(a ...interface{}) Constraint
	MakeAssignment(a ...interface{}) Assignment
	MakeFirstSolutionCollector(a ...interface{}) SolutionCollector
	MakeLastSolutionCollector(a ...interface{}) SolutionCollector
	MakeBestValueSolutionCollector(a ...interface{}) SolutionCollector
	MakeBestLexicographicValueSolutionCollector(a ...interface{}) SolutionCollector
	MakeNBestValueSolutionCollector(a ...interface{}) SolutionCollector
	MakeNBestLexicographicValueSolutionCollector(a ...interface{}) SolutionCollector
	MakeAllSolutionCollector(a ...interface{}) SolutionCollector
	MakeMinimize(arg2 IntVar, arg3 int64) (_swig_ret OptimizeVar)
	MakeMaximize(arg2 IntVar, arg3 int64) (_swig_ret OptimizeVar)
	MakeOptimize(arg2 bool, arg3 IntVar, arg4 int64) (_swig_ret OptimizeVar)
	MakeWeightedMinimize(a ...interface{}) OptimizeVar
	MakeWeightedMaximize(a ...interface{}) OptimizeVar
	MakeWeightedOptimize(a ...interface{}) OptimizeVar
	MakeLexicographicOptimize(arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64) (_swig_ret OptimizeVar)
	MakeTabuSearch(arg2 bool, arg3 IntVar, arg4 int64, arg5 IntVarVector, arg6 int64, arg7 int64, arg8 float64) (_swig_ret ObjectiveMonitor)
	MakeLexicographicTabuSearch(arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64, arg5 IntVarVector, arg6 int64, arg7 int64, arg8 float64) (_swig_ret ObjectiveMonitor)
	MakeGenericTabuSearch(arg2 bool, arg3 IntVar, arg4 int64, arg5 IntVarVector, arg6 int64) (_swig_ret ObjectiveMonitor)
	MakeSimulatedAnnealing(arg2 bool, arg3 IntVar, arg4 int64, arg5 int64) (_swig_ret ObjectiveMonitor)
	MakeLexicographicSimulatedAnnealing(arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64, arg5 []int64) (_swig_ret ObjectiveMonitor)
	MakeGuidedLocalSearch(a ...interface{}) ObjectiveMonitor
	MakeLubyRestart(arg2 int) (_swig_ret SearchMonitor)
	MakeConstantRestart(arg2 int) (_swig_ret SearchMonitor)
	MakeTimeLimit(a ...interface{}) RegularLimit
	MakeBranchesLimit(arg2 int64) (_swig_ret RegularLimit)
	MakeFailuresLimit(arg2 int64) (_swig_ret RegularLimit)
	MakeSolutionsLimit(arg2 int64) (_swig_ret RegularLimit)
	MakeDefaultRegularLimitParameters() (_swig_ret RegularLimitParameters)
	MakeLimit(a ...interface{}) interface{}
	MakeImprovementLimit(arg2 IntVar, arg3 bool, arg4 float64, arg5 float64, arg6 float64, arg7 int) (_swig_ret ImprovementSearchLimit)
	MakeLexicographicImprovementLimit(arg2 IntVarVector, arg3 Std_vector_Sl_bool_Sg_, arg4 Std_vector_Sl_double_Sg_, arg5 Std_vector_Sl_double_Sg_, arg6 float64, arg7 int) (_swig_ret ImprovementSearchLimit)
	MakeCustomLimit(arg2 Std_function_Sl_bool_Sp__SP__Sg_) (_swig_ret SearchLimit)
	MakeSearchLog(a ...interface{}) SearchMonitor
	MakeSearchTrace(arg2 string) (_swig_ret SearchMonitor)
	MakeEnterSearchCallback(arg2 AtSolutionCallback) (_swig_ret SearchMonitor)
	MakeExitSearchCallback(arg2 AtSolutionCallback) (_swig_ret SearchMonitor)
	MakeAtSolutionCallback(arg2 AtSolutionCallback) (_swig_ret SearchMonitor)
	MakePrintModelVisitor() (_swig_ret ModelVisitor)
	MakeStatisticsModelVisitor() (_swig_ret ModelVisitor)
	MakeSymmetryManager(a ...interface{}) SearchMonitor
	MakeAssignVariableValue(arg2 IntVar, arg3 int64) (_swig_ret Decision)
	MakeVariableLessOrEqualValue(arg2 IntVar, arg3 int64) (_swig_ret Decision)
	MakeVariableGreaterOrEqualValue(arg2 IntVar, arg3 int64) (_swig_ret Decision)
	MakeSplitVariableDomain(arg2 IntVar, arg3 int64, arg4 bool) (_swig_ret Decision)
	MakeAssignVariableValueOrFail(arg2 IntVar, arg3 int64) (_swig_ret Decision)
	MakeAssignVariableValueOrDoNothing(arg2 IntVar, arg3 int64) (_swig_ret Decision)
	MakeAssignVariablesValues(arg2 IntVarVector, arg3 []int64) (_swig_ret Decision)
	MakeAssignVariablesValuesOrDoNothing(arg2 IntVarVector, arg3 []int64) (_swig_ret Decision)
	MakeAssignVariablesValuesOrFail(arg2 IntVarVector, arg3 []int64) (_swig_ret Decision)
	MakeFailDecision() (_swig_ret Decision)
	MakeDecision(arg2 Std_function_Sl_void_Sp_operations_research_Solver_Sm__SP__Sg_, arg3 Std_function_Sl_void_Sp_operations_research_Solver_Sm__SP__Sg_) (_swig_ret Decision)
	Compose(a ...interface{}) DecisionBuilder
	Try(a ...interface{}) DecisionBuilder
	MakeDefaultPhase(a ...interface{}) DecisionBuilder
	MakeScheduleOrPostpone(arg2 IntervalVar, arg3 int64, arg4 *int64) (_swig_ret Decision)
	MakeScheduleOrExpedite(arg2 IntervalVar, arg3 int64, arg4 *int64) (_swig_ret Decision)
	MakeRankFirstInterval(arg2 SequenceVar, arg3 int) (_swig_ret Decision)
	MakeRankLastInterval(arg2 SequenceVar, arg3 int) (_swig_ret Decision)
	MakePhase(a ...interface{}) DecisionBuilder
	MakeDecisionBuilderFromAssignment(arg2 Assignment, arg3 DecisionBuilder, arg4 IntVarVector) (_swig_ret DecisionBuilder)
	MakeConstraintAdder(arg2 Constraint) (_swig_ret DecisionBuilder)
	MakeSolveOnce(a ...interface{}) DecisionBuilder
	MakeNestedOptimize(a ...interface{}) DecisionBuilder
	MakeRestoreAssignment(arg2 Assignment) (_swig_ret DecisionBuilder)
	MakeStoreAssignment(arg2 Assignment) (_swig_ret DecisionBuilder)
	MakeOperator(a ...interface{}) LocalSearchOperator
	MakeRandomLnsOperator(a ...interface{}) LocalSearchOperator
	MakeMoveTowardTargetOperator(a ...interface{}) LocalSearchOperator
	ConcatenateOperators(a ...interface{}) LocalSearchOperator
	RandomConcatenateOperators(a ...interface{}) LocalSearchOperator
	MultiArmedBanditConcatenateOperators(arg2 LocalSearchOperatorVector, arg3 float64, arg4 float64, arg5 bool) (_swig_ret LocalSearchOperator)
	MakeNeighborhoodLimit(arg2 LocalSearchOperator, arg3 int64) (_swig_ret LocalSearchOperator)
	MakeLocalSearchPhase(a ...interface{}) DecisionBuilder
	RunUncheckedLocalSearch(a ...interface{}) Assignment
	MakeDefaultSolutionPool() (_swig_ret SolutionPool)
	MakeLocalSearchPhaseParameters(a ...interface{}) LocalSearchPhaseParameters
	MakeAcceptFilter() (_swig_ret LocalSearchFilter)
	MakeRejectFilter() (_swig_ret LocalSearchFilter)
	MakeVariableDomainFilter() (_swig_ret LocalSearchFilter)
	MakeSumObjectiveFilter(a ...interface{}) IntVarLocalSearchFilter
	TopPeriodicCheck()
	TopProgressPercent() (_swig_ret int)
	PushState()
	PopState()
	SearchDepth() (_swig_ret int)
	SearchLeftDepth() (_swig_ret int)
	SolveDepth() (_swig_ret int)
	Rand64(arg2 int64) (_swig_ret int64)
	Rand32(arg2 int) (_swig_ret int)
	ReSeed(arg2 int)
	ExportProfilingOverview(arg2 string)
	LocalSearchProfile() (_swig_ret string)
	CurrentlyInSolve() (_swig_ret bool)
	Constraints() (_swig_ret int)
	Accept(arg2 ModelVisitor)
	BalancingDecision() (_swig_ret Decision)
	ClearFailIntercept()
	SetUseFastLocalSearch(arg2 bool)
	UseFastLocalSearch() (_swig_ret bool)
	HasName(arg2 PropagationBaseObject) (_swig_ret bool)
	RegisterDemon(arg2 Demon) (_swig_ret Demon)
	RegisterIntExpr(arg2 IntExpr) (_swig_ret IntExpr)
	RegisterIntVar(arg2 IntVar) (_swig_ret IntVar)
	RegisterIntervalVar(arg2 IntervalVar) (_swig_ret IntervalVar)
	Cache() (_swig_ret ModelCache)
	InstrumentsDemons() (_swig_ret bool)
	IsProfilingEnabled() (_swig_ret bool)
	IsLocalSearchProfilingEnabled() (_swig_ret bool)
	InstrumentsVariables() (_swig_ret bool)
	NameAllVariables() (_swig_ret bool)
	ModelName() (_swig_ret string)
	GetPropagationMonitor() (_swig_ret PropagationMonitor)
	AddPropagationMonitor(arg2 PropagationMonitor)
	GetLocalSearchMonitor() (_swig_ret LocalSearchMonitor)
	AddLocalSearchMonitor(arg2 LocalSearchMonitor)
	GetOrCreateLocalSearchState() (_swig_ret Assignment)
	ClearLocalSearchState()
	CastExpression(arg2 IntVar) (_swig_ret IntExpr)
	FinishCurrentSearch()
	RestartCurrentSearch()
	ShouldFail()
	CheckFail()
	MakeProfiledDecisionBuilderWrapper(arg2 DecisionBuilder) (_swig_ret DecisionBuilder)
}

func Zero() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_Zero_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

func One() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_One_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

type SwigcptrBaseObject uintptr

func (p SwigcptrBaseObject) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBaseObject) SwigIsBaseObject() {
}

func NewBaseObject() (_swig_ret BaseObject) {
	var swig_r BaseObject
	swig_r = (BaseObject)(SwigcptrBaseObject(C._wrap_new_BaseObject_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func DeleteBaseObject(arg1 BaseObject) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_BaseObject_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBaseObject) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BaseObject_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

type BaseObject interface {
	Swigcptr() uintptr
	SwigIsBaseObject()
	ToString() (_swig_ret string)
}

type SwigcptrPropagationBaseObject uintptr

func (p SwigcptrPropagationBaseObject) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPropagationBaseObject) SwigIsPropagationBaseObject() {
}

func NewPropagationBaseObject(arg1 Solver) (_swig_ret PropagationBaseObject) {
	var swig_r PropagationBaseObject
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (PropagationBaseObject)(SwigcptrPropagationBaseObject(C._wrap_new_PropagationBaseObject_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeletePropagationBaseObject(arg1 PropagationBaseObject) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_PropagationBaseObject_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPropagationBaseObject) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PropagationBaseObject_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPropagationBaseObject) Solver() (_swig_ret Solver) {
	var swig_r Solver
	_swig_i_0 := arg1
	swig_r = (Solver)(SwigcptrSolver(C._wrap_PropagationBaseObject_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrPropagationBaseObject) FreezeQueue() {
	_swig_i_0 := arg1
	C._wrap_PropagationBaseObject_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPropagationBaseObject) UnfreezeQueue() {
	_swig_i_0 := arg1
	C._wrap_PropagationBaseObject_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPropagationBaseObject) EnqueueDelayedDemon(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationBaseObject_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationBaseObject) EnqueueVar(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationBaseObject_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationBaseObject) ResetActionOnFail() {
	_swig_i_0 := arg1
	C._wrap_PropagationBaseObject_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPropagationBaseObject) SetVariableToCleanOnFail(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationBaseObject_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationBaseObject) Name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PropagationBaseObject_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPropagationBaseObject) SetName(arg2 Absl_string_view) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationBaseObject_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationBaseObject) HasName() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PropagationBaseObject_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPropagationBaseObject) BaseName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PropagationBaseObject_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrPropagationBaseObject) SwigIsBaseObject() {
}

func (p SwigcptrPropagationBaseObject) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type PropagationBaseObject interface {
	Swigcptr() uintptr
	SwigIsPropagationBaseObject()
	ToString() (_swig_ret string)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg2 Demon)
	EnqueueVar(arg2 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg2 IntVar)
	Name() (_swig_ret string)
	SetName(arg2 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorDecision struct {
	SwigcptrDecision
	v interface{}
}

func (p *_swig_DirectorDecision) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrDecision)
}

func (p *_swig_DirectorDecision) SwigIsDecision() {
}

func (p *_swig_DirectorDecision) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorDecision(v interface{}) Decision {
	p := &_swig_DirectorDecision{0, v}
	p.SwigcptrDecision = SwigcptrDecision(C._wrap__swig_NewDirectorDecisionDecision_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_Decision_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_Decision_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorDecision).SwigcptrDecision = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceDecisionToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorDecision) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDecisionToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorDecision_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrDecision))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorDecisionToString(swig_p Decision) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorDecision_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorDecision).SwigcptrDecision))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorDecision_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDecision_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDecision)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceDecisionApplyWrapper interface {
	ApplyWrapper(Solver)
}

func (swig_p *_swig_DirectorDecision) ApplyWrapper(s Solver) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDecisionApplyWrapper); swig_ok {
		swig_g.ApplyWrapper(s)
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorDecision_callback_ApplyWrapper_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDecision_callback_ApplyWrapper_constraintsolver_e5a2167dd134d32d(swig_c int, s uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDecision)
	swig_p.ApplyWrapper(SwigcptrSolver(s))
}

type _swig_DirectorInterfaceDecisionRefuteWrapper interface {
	RefuteWrapper(Solver)
}

func (swig_p *_swig_DirectorDecision) RefuteWrapper(s Solver) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDecisionRefuteWrapper); swig_ok {
		swig_g.RefuteWrapper(s)
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorDecision_callback_RefuteWrapper_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDecision_callback_RefuteWrapper_constraintsolver_e5a2167dd134d32d(swig_c int, s uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDecision)
	swig_p.RefuteWrapper(SwigcptrSolver(s))
}

type _swig_DirectorInterfaceDecisionAccept interface {
	Accept(DecisionVisitor)
}

func (swig_p *_swig_DirectorDecision) Accept(visitor DecisionVisitor) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDecisionAccept); swig_ok {
		swig_g.Accept(visitor)
		return
	}
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorDecision_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrDecision), C.uintptr_t(_swig_i_0))
}

func DirectorDecisionAccept(swig_p Decision, visitor DecisionVisitor) {
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorDecision_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorDecision).SwigcptrDecision), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorDecision_callback_Accept_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDecision_callback_Accept_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDecision)
	swig_p.Accept(SwigcptrDecisionVisitor(arg2))
}

type SwigcptrDecision uintptr

func (p SwigcptrDecision) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDecision) SwigIsDecision() {
}

func (p SwigcptrDecision) DirectorInterface() interface{} {
	return nil
}

func DeleteDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Decision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDecision) ApplyWrapper(arg2 Solver) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Decision_ApplyWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDecision) RefuteWrapper(arg2 Solver) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Decision_RefuteWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDecision) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Decision_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDecision) Accept(arg2 DecisionVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Decision_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrDecision) SwigIsBaseObject() {
}

func (p SwigcptrDecision) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type Decision interface {
	Swigcptr() uintptr
	SwigIsDecision()
	DirectorInterface() interface{}
	ApplyWrapper(arg2 Solver)
	RefuteWrapper(arg2 Solver)
	ToString() (_swig_ret string)
	Accept(arg2 DecisionVisitor)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrDecisionVisitor uintptr

func (p SwigcptrDecisionVisitor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDecisionVisitor) SwigIsDecisionVisitor() {
}

func NewDecisionVisitor() (_swig_ret DecisionVisitor) {
	var swig_r DecisionVisitor
	swig_r = (DecisionVisitor)(SwigcptrDecisionVisitor(C._wrap_new_DecisionVisitor_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func DeleteDecisionVisitor(arg1 DecisionVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_DecisionVisitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDecisionVisitor) VisitSetVariableValue(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_DecisionVisitor_VisitSetVariableValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_331(_swig_i_2))
}

func (arg1 SwigcptrDecisionVisitor) VisitSplitVariableDomain(arg2 IntVar, arg3 int64, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DecisionVisitor_VisitSplitVariableDomain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_332(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrDecisionVisitor) VisitScheduleOrPostpone(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_DecisionVisitor_VisitScheduleOrPostpone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_333(_swig_i_2))
}

func (arg1 SwigcptrDecisionVisitor) VisitScheduleOrExpedite(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_DecisionVisitor_VisitScheduleOrExpedite_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_334(_swig_i_2))
}

func (arg1 SwigcptrDecisionVisitor) VisitRankFirstInterval(arg2 SequenceVar, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_DecisionVisitor_VisitRankFirstInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrDecisionVisitor) VisitRankLastInterval(arg2 SequenceVar, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_DecisionVisitor_VisitRankLastInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrDecisionVisitor) VisitUnknownDecision() {
	_swig_i_0 := arg1
	C._wrap_DecisionVisitor_VisitUnknownDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrDecisionVisitor) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DecisionVisitor_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrDecisionVisitor) SwigIsBaseObject() {
}

func (p SwigcptrDecisionVisitor) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type DecisionVisitor interface {
	Swigcptr() uintptr
	SwigIsDecisionVisitor()
	VisitSetVariableValue(arg2 IntVar, arg3 int64)
	VisitSplitVariableDomain(arg2 IntVar, arg3 int64, arg4 bool)
	VisitScheduleOrPostpone(arg2 IntervalVar, arg3 int64)
	VisitScheduleOrExpedite(arg2 IntervalVar, arg3 int64)
	VisitRankFirstInterval(arg2 SequenceVar, arg3 int)
	VisitRankLastInterval(arg2 SequenceVar, arg3 int)
	VisitUnknownDecision()
	ToString() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorDecisionBuilder struct {
	SwigcptrDecisionBuilder
	v interface{}
}

func (p *_swig_DirectorDecisionBuilder) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrDecisionBuilder)
}

func (p *_swig_DirectorDecisionBuilder) SwigIsDecisionBuilder() {
}

func (p *_swig_DirectorDecisionBuilder) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorDecisionBuilder(v interface{}) DecisionBuilder {
	p := &_swig_DirectorDecisionBuilder{0, v}
	p.SwigcptrDecisionBuilder = SwigcptrDecisionBuilder(C._wrap__swig_NewDirectorDecisionBuilderDecisionBuilder_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorDecisionBuilder(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorDecisionBuilder_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_DecisionBuilder_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_DecisionBuilder_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorDecisionBuilder).SwigcptrDecisionBuilder = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceDecisionBuilderToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorDecisionBuilder) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDecisionBuilderToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorDecisionBuilder_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrDecisionBuilder))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorDecisionBuilderToString(swig_p DecisionBuilder) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorDecisionBuilder_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorDecisionBuilder).SwigcptrDecisionBuilder))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorDecisionBuilder_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDecisionBuilder_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDecisionBuilder)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceDecisionBuilderNextWrapper interface {
	NextWrapper(Solver) Decision
}

func (swig_p *_swig_DirectorDecisionBuilder) NextWrapper(s Solver) Decision {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDecisionBuilderNextWrapper); swig_ok {
		return swig_g.NextWrapper(s)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorDecisionBuilder_callback_NextWrapper_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDecisionBuilder_callback_NextWrapper_constraintsolver_e5a2167dd134d32d(swig_c int, s uintptr) (swig_result SwigcptrDecision) {
	var swig_r SwigcptrDecision
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDecisionBuilder)
	swig_r = SwigcptrDecision(getSwigcptr(swig_p.NextWrapper(SwigcptrSolver(s))))
	return swig_r
}

type SwigcptrDecisionBuilder uintptr

func (p SwigcptrDecisionBuilder) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDecisionBuilder) SwigIsDecisionBuilder() {
}

func (p SwigcptrDecisionBuilder) DirectorInterface() interface{} {
	return nil
}

func DeleteDecisionBuilder(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_DecisionBuilder_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDecisionBuilder) NextWrapper(arg2 Solver) (_swig_ret Decision) {
	var swig_r Decision
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Decision)(SwigcptrDecision(C._wrap_DecisionBuilder_NextWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDecisionBuilder) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DecisionBuilder_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDecisionBuilder) SetName(arg2 Absl_string_view) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_DecisionBuilder_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDecisionBuilder) GetName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DecisionBuilder_GetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrDecisionBuilder) SwigIsBaseObject() {
}

func (p SwigcptrDecisionBuilder) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type DecisionBuilder interface {
	Swigcptr() uintptr
	SwigIsDecisionBuilder()
	DirectorInterface() interface{}
	NextWrapper(arg2 Solver) (_swig_ret Decision)
	ToString() (_swig_ret string)
	SetName(arg2 Absl_string_view)
	GetName() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorDemon struct {
	SwigcptrDemon
	v interface{}
}

func (p *_swig_DirectorDemon) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrDemon)
}

func (p *_swig_DirectorDemon) SwigIsDemon() {
}

func (p *_swig_DirectorDemon) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorDemon(v interface{}) Demon {
	p := &_swig_DirectorDemon{0, v}
	p.SwigcptrDemon = SwigcptrDemon(C._wrap__swig_NewDirectorDemonDemon_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_Demon_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_Demon_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorDemon).SwigcptrDemon = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceDemonToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorDemon) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDemonToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorDemon_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrDemon))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorDemonToString(swig_p Demon) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorDemon_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorDemon).SwigcptrDemon))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorDemon_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDemon_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDemon)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceDemonRunWrapper interface {
	RunWrapper(Solver)
}

func (swig_p *_swig_DirectorDemon) RunWrapper(s Solver) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDemonRunWrapper); swig_ok {
		swig_g.RunWrapper(s)
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorDemon_callback_RunWrapper_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDemon_callback_RunWrapper_constraintsolver_e5a2167dd134d32d(swig_c int, s uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDemon)
	swig_p.RunWrapper(SwigcptrSolver(s))
}

type _swig_DirectorInterfaceDemonPriority interface {
	Priority() Operations_researchSolverDemonPriority
}

func (swig_p *_swig_DirectorDemon) Priority() Operations_researchSolverDemonPriority {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceDemonPriority); swig_ok {
		return swig_g.Priority()
	}
	var swig_r Operations_researchSolverDemonPriority
	swig_r = (Operations_researchSolverDemonPriority)(C._wrap__swig_DirectorDemon_upcall_Priority_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrDemon)))
	return swig_r
}

func DirectorDemonPriority(swig_p Demon) Operations_researchSolverDemonPriority {
	var swig_r Operations_researchSolverDemonPriority
	swig_r = (Operations_researchSolverDemonPriority)(C._wrap__swig_DirectorDemon_upcall_Priority_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorDemon).SwigcptrDemon)))
	return swig_r
}

//export Swig_DirectorDemon_callback_Priority_constraintsolver_e5a2167dd134d32d
func Swig_DirectorDemon_callback_Priority_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result Operations_researchSolverDemonPriority) {
	var swig_r Operations_researchSolverDemonPriority
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorDemon)
	swig_r = swig_p.Priority()
	return swig_r
}

type SwigcptrDemon uintptr

func (p SwigcptrDemon) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDemon) SwigIsDemon() {
}

func (p SwigcptrDemon) DirectorInterface() interface{} {
	return nil
}

func DeleteDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Demon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDemon) RunWrapper(arg2 Solver) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Demon_RunWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDemon) Priority() (_swig_ret Operations_researchSolverDemonPriority) {
	var swig_r Operations_researchSolverDemonPriority
	_swig_i_0 := arg1
	swig_r = (Operations_researchSolverDemonPriority)(C._wrap_Demon_Priority_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDemon) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Demon_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDemon) Inhibit(arg2 Solver) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Demon_Inhibit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDemon) Desinhibit(arg2 Solver) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Demon_Desinhibit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrDemon) SwigIsBaseObject() {
}

func (p SwigcptrDemon) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type Demon interface {
	Swigcptr() uintptr
	SwigIsDemon()
	DirectorInterface() interface{}
	RunWrapper(arg2 Solver)
	Priority() (_swig_ret Operations_researchSolverDemonPriority)
	ToString() (_swig_ret string)
	Inhibit(arg2 Solver)
	Desinhibit(arg2 Solver)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrModelVisitor uintptr

func (p SwigcptrModelVisitor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrModelVisitor) SwigIsModelVisitor() {
}

func GetModelVisitorKAbs() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kAbs_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKAbsEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kAbsEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKAllDifferent() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kAllDifferent_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKAllowedAssignments() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kAllowedAssignments_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKAtMost() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kAtMost_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIndexOf() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIndexOf_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKBetween() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kBetween_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKConditionalExpr() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kConditionalExpr_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCircuit() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCircuit_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKConvexPiecewise() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kConvexPiecewise_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCountEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCountEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCover() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCover_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCumulative() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCumulative_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDeviation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDeviation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDifference() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDifference_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDisjunctive() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDisjunctive_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDistribute() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDistribute_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDivide() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDivide_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDurationExpr() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDurationExpr_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKElement() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kElement_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKLightElementEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kLightElementEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKElementEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kElementEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKEndExpr() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kEndExpr_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKEquality() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kEquality_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKFalseConstraint() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kFalseConstraint_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKGlobalCardinality() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kGlobalCardinality_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKGreater() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kGreater_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKGreaterOrEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kGreaterOrEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIntegerVariable() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIntegerVariable_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIntervalBinaryRelation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIntervalBinaryRelation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIntervalDisjunction() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIntervalDisjunction_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIntervalUnaryRelation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIntervalUnaryRelation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIntervalVariable() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIntervalVariable_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKInversePermutation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kInversePermutation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIsBetween() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIsBetween_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIsDifferent() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIsDifferent_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIsEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIsEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIsGreater() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIsGreater_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIsGreaterOrEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIsGreaterOrEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIsLess() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIsLess_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIsLessOrEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIsLessOrEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIsMember() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIsMember_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKLess() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kLess_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKLessOrEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kLessOrEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKLexLess() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kLexLess_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKLinkExprVar() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kLinkExprVar_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMapDomain() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMapDomain_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMax() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMax_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMaxEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMaxEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMember() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMember_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMin() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMin_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMinEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMinEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKModulo() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kModulo_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKNoCycle() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kNoCycle_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKNonEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kNonEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKNotBetween() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kNotBetween_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKNotMember() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kNotMember_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKNullIntersect() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kNullIntersect_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKOpposite() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kOpposite_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKPack() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kPack_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKPathCumul() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kPathCumul_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDelayedPathCumul() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDelayedPathCumul_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKPerformedExpr() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kPerformedExpr_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKPower() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kPower_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKProduct() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kProduct_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKScalProd() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kScalProd_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKScalProdEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kScalProdEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKScalProdGreaterOrEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kScalProdGreaterOrEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKScalProdLessOrEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kScalProdLessOrEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSemiContinuous() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSemiContinuous_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSequenceVariable() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSequenceVariable_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSortingConstraint() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSortingConstraint_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSquare() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSquare_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKStartExpr() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kStartExpr_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSum() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSum_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSumEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSumEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSumGreaterOrEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSumGreaterOrEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSumLessOrEqual() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSumLessOrEqual_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKTrace() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kTrace_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKTransition() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kTransition_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKTrueConstraint() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kTrueConstraint_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKVarBoundWatcher() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kVarBoundWatcher_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKVarValueWatcher() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kVarValueWatcher_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCountAssignedItemsExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCountAssignedItemsExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCountUsedBinsExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCountUsedBinsExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKInt64ToBoolExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kInt64ToBoolExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKInt64ToInt64Extension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kInt64ToInt64Extension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKObjectiveExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kObjectiveExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSearchLimitExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSearchLimitExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKUsageEqualVariableExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kUsageEqualVariableExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKUsageLessConstantExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kUsageLessConstantExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKVariableGroupExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kVariableGroupExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKVariableUsageLessConstantExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kVariableUsageLessConstantExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKWeightedSumOfAssignedEqualVariableExtension() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kWeightedSumOfAssignedEqualVariableExtension_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKActiveArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kActiveArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKAssumePathsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kAssumePathsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKBranchesLimitArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kBranchesLimitArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCapacityArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCapacityArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCardsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCardsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCoefficientsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCoefficientsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCountArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCountArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCumulativeArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCumulativeArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKCumulsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kCumulsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDemandsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDemandsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDurationMaxArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDurationMaxArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDurationMinArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDurationMinArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKEarlyCostArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kEarlyCostArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKEarlyDateArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kEarlyDateArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKEndMaxArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kEndMaxArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKEndMinArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kEndMinArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKEndsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kEndsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKExpressionArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kExpressionArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKFailuresLimitArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kFailuresLimitArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKFinalStatesArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kFinalStatesArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKFixedChargeArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kFixedChargeArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIndex2Argument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIndex2Argument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIndexArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIndexArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKInitialState() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kInitialState_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIntervalArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIntervalArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKIntervalsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kIntervalsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKLateCostArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kLateCostArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKLateDateArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kLateDateArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKLeftArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kLeftArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMaxArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMaxArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMaximizeArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMaximizeArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMinArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMinArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKModuloArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kModuloArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKNextsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kNextsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKOptionalArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kOptionalArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKPartialArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kPartialArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKPositionXArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kPositionXArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKPositionYArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kPositionYArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKRangeArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kRangeArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKRelationArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kRelationArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKRightArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kRightArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSequenceArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSequenceArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSequencesArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSequencesArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSizeArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSizeArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSizeXArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSizeXArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSizeYArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSizeYArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSmartTimeCheckArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSmartTimeCheckArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSolutionLimitArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSolutionLimitArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKStartMaxArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kStartMaxArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKStartMinArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kStartMinArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKStartsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kStartsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKStepArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kStepArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKTargetArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kTargetArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKTimeLimitArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kTimeLimitArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKTransitsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kTransitsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKTuplesArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kTuplesArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKValueArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kValueArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKValuesArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kValuesArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKVariableArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kVariableArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKVarsArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kVarsArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKEvaluatorArgument() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kEvaluatorArgument_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKMirrorOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kMirrorOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKRelaxedMaxOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kRelaxedMaxOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKRelaxedMinOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kRelaxedMinOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKSumOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kSumOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKDifferenceOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kDifferenceOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKProductOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kProductOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKStartSyncOnStartOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kStartSyncOnStartOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKStartSyncOnEndOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kStartSyncOnEndOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetModelVisitorKTraceOperation() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_kTraceOperation_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeleteModelVisitor(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ModelVisitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrModelVisitor) BeginVisitModel(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ModelVisitor_BeginVisitModel_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_505)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) EndVisitModel(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ModelVisitor_EndVisitModel_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_506)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) BeginVisitConstraint(arg2 string, arg3 Constraint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_BeginVisitConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_507)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) EndVisitConstraint(arg2 string, arg3 Constraint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_EndVisitConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_508)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) BeginVisitExtension(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ModelVisitor_BeginVisitExtension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_509)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) EndVisitExtension(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ModelVisitor_EndVisitExtension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_510)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) BeginVisitIntegerExpression(arg2 string, arg3 IntExpr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_BeginVisitIntegerExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_511)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) EndVisitIntegerExpression(arg2 string, arg3 IntExpr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_EndVisitIntegerExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_512)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) VisitIntegerVariable__SWIG_0(arg2 IntVar, arg3 IntExpr) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_VisitIntegerVariable__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrModelVisitor) VisitIntegerVariable__SWIG_1(arg2 IntVar, arg3 string, arg4 int64, arg5 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	C._wrap_ModelVisitor_VisitIntegerVariable__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_513)(unsafe.Pointer(&_swig_i_2)), C.swig_type_514(_swig_i_3), C.uintptr_t(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (p SwigcptrModelVisitor) VisitIntegerVariable(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.VisitIntegerVariable__SWIG_0(a[0].(IntVar), a[1].(IntExpr))
		return
	}
	if argc == 4 {
		p.VisitIntegerVariable__SWIG_1(a[0].(IntVar), a[1].(string), a[2].(int64), a[3].(IntVar))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModelVisitor) VisitIntervalVariable(arg2 IntervalVar, arg3 string, arg4 int64, arg5 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	C._wrap_ModelVisitor_VisitIntervalVariable_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_515)(unsafe.Pointer(&_swig_i_2)), C.swig_type_516(_swig_i_3), C.uintptr_t(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrModelVisitor) VisitSequenceVariable(arg2 SequenceVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ModelVisitor_VisitSequenceVariable_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModelVisitor) VisitIntegerArgument(arg2 string, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ModelVisitor_VisitIntegerArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_517)(unsafe.Pointer(&_swig_i_1)), C.swig_type_518(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) VisitIntegerArrayArgument(arg2 string, arg3 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ModelVisitor_VisitIntegerArrayArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_519)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_520)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrModelVisitor) VisitIntegerMatrixArgument(arg2 string, arg3 IntTupleSet) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_VisitIntegerMatrixArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_521)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) VisitIntegerExpressionArgument(arg2 string, arg3 IntExpr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_VisitIntegerExpressionArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_522)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) VisitIntegerVariableArrayArgument(arg2 string, arg3 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_VisitIntegerVariableArrayArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_523)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) VisitIntervalArgument(arg2 string, arg3 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_VisitIntervalArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_524)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) VisitIntervalArrayArgument(arg2 string, arg3 IntervalVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_VisitIntervalArrayArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_525)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) VisitSequenceArgument(arg2 string, arg3 SequenceVar) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_VisitSequenceArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_526)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrModelVisitor) VisitSequenceArrayArgument(arg2 string, arg3 SequenceVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ModelVisitor_VisitSequenceArrayArgument_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_527)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func NewModelVisitor() (_swig_ret ModelVisitor) {
	var swig_r ModelVisitor
	swig_r = (ModelVisitor)(SwigcptrModelVisitor(C._wrap_new_ModelVisitor_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func (_swig_base SwigcptrModelVisitor) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ModelVisitor_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrModelVisitor) SwigIsBaseObject() {
}

func (p SwigcptrModelVisitor) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type ModelVisitor interface {
	Swigcptr() uintptr
	SwigIsModelVisitor()
	BeginVisitModel(arg2 string)
	EndVisitModel(arg2 string)
	BeginVisitConstraint(arg2 string, arg3 Constraint)
	EndVisitConstraint(arg2 string, arg3 Constraint)
	BeginVisitExtension(arg2 string)
	EndVisitExtension(arg2 string)
	BeginVisitIntegerExpression(arg2 string, arg3 IntExpr)
	EndVisitIntegerExpression(arg2 string, arg3 IntExpr)
	VisitIntegerVariable(a ...interface{})
	VisitIntervalVariable(arg2 IntervalVar, arg3 string, arg4 int64, arg5 IntervalVar)
	VisitSequenceVariable(arg2 SequenceVar)
	VisitIntegerArgument(arg2 string, arg3 int64)
	VisitIntegerArrayArgument(arg2 string, arg3 []int64)
	VisitIntegerMatrixArgument(arg2 string, arg3 IntTupleSet)
	VisitIntegerExpressionArgument(arg2 string, arg3 IntExpr)
	VisitIntegerVariableArrayArgument(arg2 string, arg3 IntVarVector)
	VisitIntervalArgument(arg2 string, arg3 IntervalVar)
	VisitIntervalArrayArgument(arg2 string, arg3 IntervalVarVector)
	VisitSequenceArgument(arg2 string, arg3 SequenceVar)
	VisitSequenceArrayArgument(arg2 string, arg3 SequenceVarVector)
	ToString() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorConstraint struct {
	SwigcptrConstraint
	v interface{}
}

func (p *_swig_DirectorConstraint) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrConstraint)
}

func (p *_swig_DirectorConstraint) SwigIsConstraint() {
}

func (p *_swig_DirectorConstraint) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorConstraint(v interface{}, arg1 Solver) Constraint {
	p := &_swig_DirectorConstraint{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	p.SwigcptrConstraint = SwigcptrConstraint(C._wrap__swig_NewDirectorConstraintConstraint_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0)))
	return p
}

func DeleteDirectorConstraint(arg1 Constraint) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_Constraint_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_Constraint_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorConstraint).SwigcptrConstraint = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceConstraintToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorConstraint) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceConstraintToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorConstraint_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrConstraint))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorConstraintToString(swig_p Constraint) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorConstraint_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorConstraint).SwigcptrConstraint))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorConstraint_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorConstraint_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorConstraint)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceConstraintName interface {
	Name() string
}

func (swig_p *_swig_DirectorConstraint) Name() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceConstraintName); swig_ok {
		return swig_g.Name()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorConstraint_upcall_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrConstraint))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorConstraintName(swig_p Constraint) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorConstraint_upcall_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorConstraint).SwigcptrConstraint))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorConstraint_callback_Name_constraintsolver_e5a2167dd134d32d
func Swig_DirectorConstraint_callback_Name_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorConstraint)
	swig_r = swig_p.Name()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceConstraintBaseName interface {
	BaseName() string
}

func (swig_p *_swig_DirectorConstraint) BaseName() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceConstraintBaseName); swig_ok {
		return swig_g.BaseName()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorConstraint_upcall_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrConstraint))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorConstraintBaseName(swig_p Constraint) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorConstraint_upcall_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorConstraint).SwigcptrConstraint))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorConstraint_callback_BaseName_constraintsolver_e5a2167dd134d32d
func Swig_DirectorConstraint_callback_BaseName_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorConstraint)
	swig_r = swig_p.BaseName()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceConstraintPost interface {
	Post()
}

func (swig_p *_swig_DirectorConstraint) Post() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceConstraintPost); swig_ok {
		swig_g.Post()
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorConstraint_callback_Post_constraintsolver_e5a2167dd134d32d
func Swig_DirectorConstraint_callback_Post_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorConstraint)
	swig_p.Post()
}

type _swig_DirectorInterfaceConstraintInitialPropagateWrapper interface {
	InitialPropagateWrapper()
}

func (swig_p *_swig_DirectorConstraint) InitialPropagateWrapper() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceConstraintInitialPropagateWrapper); swig_ok {
		swig_g.InitialPropagateWrapper()
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorConstraint_callback_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d
func Swig_DirectorConstraint_callback_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorConstraint)
	swig_p.InitialPropagateWrapper()
}

type SwigcptrConstraint uintptr

func (p SwigcptrConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConstraint) SwigIsConstraint() {
}

func (p SwigcptrConstraint) DirectorInterface() interface{} {
	return nil
}

func DeleteConstraint(arg1 Constraint) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Constraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrConstraint) Post() {
	_swig_i_0 := arg1
	C._wrap_Constraint_Post_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrConstraint) InitialPropagateWrapper() {
	_swig_i_0 := arg1
	C._wrap_Constraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrConstraint) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Constraint_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrConstraint) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Constraint_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrConstraint) IsCastConstraint() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Constraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrConstraint) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Constraint_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrConstraint) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_Constraint_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrConstraint) FreezeQueue() {
	C._wrap_Constraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConstraint) UnfreezeQueue() {
	C._wrap_Constraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConstraint) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Constraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConstraint) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Constraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConstraint) ResetActionOnFail() {
	C._wrap_Constraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConstraint) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Constraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConstraint) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Constraint_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrConstraint) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Constraint_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConstraint) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_Constraint_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConstraint) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Constraint_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrConstraint) SwigIsPropagationBaseObject() {
}

func (p SwigcptrConstraint) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrConstraint) SwigIsBaseObject() {
}

func (p SwigcptrConstraint) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type Constraint interface {
	Swigcptr() uintptr
	SwigIsConstraint()
	DirectorInterface() interface{}
	Post()
	InitialPropagateWrapper()
	ToString() (_swig_ret string)
	Accept(arg2 ModelVisitor)
	IsCastConstraint() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrCastConstraint uintptr

func (p SwigcptrCastConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCastConstraint) SwigIsCastConstraint() {
}

func DeleteCastConstraint(arg1 CastConstraint) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_CastConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCastConstraint) TargetVar() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_CastConstraint_TargetVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrCastConstraint) Post() {
	C._wrap_CastConstraint_Post_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrCastConstraint) InitialPropagateWrapper() {
	C._wrap_CastConstraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrCastConstraint) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_CastConstraint_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrCastConstraint) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_CastConstraint_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrCastConstraint) IsCastConstraint() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_CastConstraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrCastConstraint) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_CastConstraint_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrCastConstraint) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_CastConstraint_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrCastConstraint) FreezeQueue() {
	C._wrap_CastConstraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrCastConstraint) UnfreezeQueue() {
	C._wrap_CastConstraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrCastConstraint) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_CastConstraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrCastConstraint) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_CastConstraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrCastConstraint) ResetActionOnFail() {
	C._wrap_CastConstraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrCastConstraint) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_CastConstraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrCastConstraint) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_CastConstraint_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrCastConstraint) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_CastConstraint_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrCastConstraint) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_CastConstraint_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrCastConstraint) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_CastConstraint_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrCastConstraint) SwigIsConstraint() {
}

func (p SwigcptrCastConstraint) SwigGetConstraint() Constraint {
	return SwigcptrConstraint(getSwigcptr(p))
}

func (p SwigcptrCastConstraint) SwigIsPropagationBaseObject() {
}

func (p SwigcptrCastConstraint) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrCastConstraint) SwigIsBaseObject() {
}

func (p SwigcptrCastConstraint) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type CastConstraint interface {
	Swigcptr() uintptr
	SwigIsCastConstraint()
	TargetVar() (_swig_ret IntVar)
	Post()
	InitialPropagateWrapper()
	ToString() (_swig_ret string)
	Accept(arg1 ModelVisitor)
	IsCastConstraint() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsConstraint()
	SwigGetConstraint() Constraint
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorSearchMonitor struct {
	SwigcptrSearchMonitor
	v interface{}
}

func (p *_swig_DirectorSearchMonitor) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrSearchMonitor)
}

func (p *_swig_DirectorSearchMonitor) SwigIsSearchMonitor() {
}

func (p *_swig_DirectorSearchMonitor) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorSearchMonitor(v interface{}, arg1 Solver) SearchMonitor {
	p := &_swig_DirectorSearchMonitor{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	p.SwigcptrSearchMonitor = SwigcptrSearchMonitor(C._wrap__swig_NewDirectorSearchMonitorSearchMonitor_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0)))
	return p
}

func DeleteDirectorSearchMonitor(arg1 SearchMonitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorSearchMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_SearchMonitor_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_SearchMonitor_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceSearchMonitorToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorSearchMonitor) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorSearchMonitor_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorSearchMonitorToString(swig_p SearchMonitor) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorSearchMonitor_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorSearchMonitor_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceSearchMonitorEnterSearch interface {
	EnterSearch()
}

func (swig_p *_swig_DirectorSearchMonitor) EnterSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorEnterSearch); swig_ok {
		swig_g.EnterSearch()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorEnterSearch(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_EnterSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_EnterSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.EnterSearch()
}

type _swig_DirectorInterfaceSearchMonitorRestartSearch interface {
	RestartSearch()
}

func (swig_p *_swig_DirectorSearchMonitor) RestartSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorRestartSearch); swig_ok {
		swig_g.RestartSearch()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorRestartSearch(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_RestartSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_RestartSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.RestartSearch()
}

type _swig_DirectorInterfaceSearchMonitorExitSearch interface {
	ExitSearch()
}

func (swig_p *_swig_DirectorSearchMonitor) ExitSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorExitSearch); swig_ok {
		swig_g.ExitSearch()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorExitSearch(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_ExitSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_ExitSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.ExitSearch()
}

type _swig_DirectorInterfaceSearchMonitorBeginNextDecision interface {
	BeginNextDecision(DecisionBuilder)
}

func (swig_p *_swig_DirectorSearchMonitor) BeginNextDecision(b DecisionBuilder) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorBeginNextDecision); swig_ok {
		swig_g.BeginNextDecision(b)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	C._wrap__swig_DirectorSearchMonitor_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0))
}

func DirectorSearchMonitorBeginNextDecision(swig_p SearchMonitor, b DecisionBuilder) {
	_swig_i_0 := getSwigcptr(b)
	C._wrap__swig_DirectorSearchMonitor_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSearchMonitor_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.BeginNextDecision(SwigcptrDecisionBuilder(arg2))
}

type _swig_DirectorInterfaceSearchMonitorEndNextDecision interface {
	EndNextDecision(DecisionBuilder, Decision)
}

func (swig_p *_swig_DirectorSearchMonitor) EndNextDecision(b DecisionBuilder, d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorEndNextDecision); swig_ok {
		swig_g.EndNextDecision(b, d)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchMonitor_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorSearchMonitorEndNextDecision(swig_p SearchMonitor, b DecisionBuilder, d Decision) {
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchMonitor_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorSearchMonitor_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.EndNextDecision(SwigcptrDecisionBuilder(arg2), SwigcptrDecision(arg3))
}

type _swig_DirectorInterfaceSearchMonitorApplyDecision interface {
	ApplyDecision(Decision)
}

func (swig_p *_swig_DirectorSearchMonitor) ApplyDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorApplyDecision); swig_ok {
		swig_g.ApplyDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchMonitor_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0))
}

func DirectorSearchMonitorApplyDecision(swig_p SearchMonitor, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchMonitor_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSearchMonitor_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.ApplyDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceSearchMonitorRefuteDecision interface {
	RefuteDecision(Decision)
}

func (swig_p *_swig_DirectorSearchMonitor) RefuteDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorRefuteDecision); swig_ok {
		swig_g.RefuteDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchMonitor_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0))
}

func DirectorSearchMonitorRefuteDecision(swig_p SearchMonitor, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchMonitor_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSearchMonitor_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.RefuteDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceSearchMonitorAfterDecision interface {
	AfterDecision(Decision, bool)
}

func (swig_p *_swig_DirectorSearchMonitor) AfterDecision(d Decision, apply bool) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorAfterDecision); swig_ok {
		swig_g.AfterDecision(d, apply)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorSearchMonitor_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func DirectorSearchMonitorAfterDecision(swig_p SearchMonitor, d Decision, apply bool) {
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorSearchMonitor_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

//export Swig_DirectorSearchMonitor_callback_AfterDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_AfterDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 bool) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.AfterDecision(SwigcptrDecision(arg2), arg3)
}

type _swig_DirectorInterfaceSearchMonitorBeginFail interface {
	BeginFail()
}

func (swig_p *_swig_DirectorSearchMonitor) BeginFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorBeginFail); swig_ok {
		swig_g.BeginFail()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorBeginFail(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_BeginFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_BeginFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.BeginFail()
}

type _swig_DirectorInterfaceSearchMonitorEndFail interface {
	EndFail()
}

func (swig_p *_swig_DirectorSearchMonitor) EndFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorEndFail); swig_ok {
		swig_g.EndFail()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorEndFail(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_EndFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_EndFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.EndFail()
}

type _swig_DirectorInterfaceSearchMonitorBeginInitialPropagation interface {
	BeginInitialPropagation()
}

func (swig_p *_swig_DirectorSearchMonitor) BeginInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorBeginInitialPropagation); swig_ok {
		swig_g.BeginInitialPropagation()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorBeginInitialPropagation(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.BeginInitialPropagation()
}

type _swig_DirectorInterfaceSearchMonitorEndInitialPropagation interface {
	EndInitialPropagation()
}

func (swig_p *_swig_DirectorSearchMonitor) EndInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorEndInitialPropagation); swig_ok {
		swig_g.EndInitialPropagation()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorEndInitialPropagation(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.EndInitialPropagation()
}

type _swig_DirectorInterfaceSearchMonitorAcceptSolution interface {
	AcceptSolution() bool
}

func (swig_p *_swig_DirectorSearchMonitor) AcceptSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorAcceptSolution); swig_ok {
		return swig_g.AcceptSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor)))
	return swig_r
}

func DirectorSearchMonitorAcceptSolution(swig_p SearchMonitor) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor)))
	return swig_r
}

//export Swig_DirectorSearchMonitor_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_r = swig_p.AcceptSolution()
	return swig_r
}

type _swig_DirectorInterfaceSearchMonitorAtSolution interface {
	AtSolution() bool
}

func (swig_p *_swig_DirectorSearchMonitor) AtSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorAtSolution); swig_ok {
		return swig_g.AtSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor)))
	return swig_r
}

func DirectorSearchMonitorAtSolution(swig_p SearchMonitor) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor)))
	return swig_r
}

//export Swig_DirectorSearchMonitor_callback_AtSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_AtSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_r = swig_p.AtSolution()
	return swig_r
}

type _swig_DirectorInterfaceSearchMonitorNoMoreSolutions interface {
	NoMoreSolutions()
}

func (swig_p *_swig_DirectorSearchMonitor) NoMoreSolutions() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorNoMoreSolutions); swig_ok {
		swig_g.NoMoreSolutions()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorNoMoreSolutions(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.NoMoreSolutions()
}

type _swig_DirectorInterfaceSearchMonitorLocalOptimum interface {
	LocalOptimum() bool
}

func (swig_p *_swig_DirectorSearchMonitor) LocalOptimum() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorLocalOptimum); swig_ok {
		return swig_g.LocalOptimum()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor)))
	return swig_r
}

func DirectorSearchMonitorLocalOptimum(swig_p SearchMonitor) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor)))
	return swig_r
}

//export Swig_DirectorSearchMonitor_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_r = swig_p.LocalOptimum()
	return swig_r
}

type _swig_DirectorInterfaceSearchMonitorAcceptDelta interface {
	AcceptDelta(Assignment, Assignment) bool
}

func (swig_p *_swig_DirectorSearchMonitor) AcceptDelta(delta Assignment, deltadelta Assignment) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorAcceptDelta); swig_ok {
		return swig_g.AcceptDelta(delta, deltadelta)
	}
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func DirectorSearchMonitorAcceptDelta(swig_p SearchMonitor, delta Assignment, deltadelta Assignment) bool {
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

//export Swig_DirectorSearchMonitor_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_r = swig_p.AcceptDelta(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
	return swig_r
}

type _swig_DirectorInterfaceSearchMonitorAcceptNeighbor interface {
	AcceptNeighbor()
}

func (swig_p *_swig_DirectorSearchMonitor) AcceptNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorAcceptNeighbor); swig_ok {
		swig_g.AcceptNeighbor()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorAcceptNeighbor(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.AcceptNeighbor()
}

type _swig_DirectorInterfaceSearchMonitorAcceptUncheckedNeighbor interface {
	AcceptUncheckedNeighbor()
}

func (swig_p *_swig_DirectorSearchMonitor) AcceptUncheckedNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorAcceptUncheckedNeighbor); swig_ok {
		swig_g.AcceptUncheckedNeighbor()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorAcceptUncheckedNeighbor(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.AcceptUncheckedNeighbor()
}

type _swig_DirectorInterfaceSearchMonitorIsUncheckedSolutionLimitReached interface {
	IsUncheckedSolutionLimitReached() bool
}

func (swig_p *_swig_DirectorSearchMonitor) IsUncheckedSolutionLimitReached() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorIsUncheckedSolutionLimitReached); swig_ok {
		return swig_g.IsUncheckedSolutionLimitReached()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor)))
	return swig_r
}

func DirectorSearchMonitorIsUncheckedSolutionLimitReached(swig_p SearchMonitor) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchMonitor_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor)))
	return swig_r
}

//export Swig_DirectorSearchMonitor_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_r = swig_p.IsUncheckedSolutionLimitReached()
	return swig_r
}

type _swig_DirectorInterfaceSearchMonitorPeriodicCheck interface {
	PeriodicCheck()
}

func (swig_p *_swig_DirectorSearchMonitor) PeriodicCheck() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorPeriodicCheck); swig_ok {
		swig_g.PeriodicCheck()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorPeriodicCheck(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.PeriodicCheck()
}

type _swig_DirectorInterfaceSearchMonitorProgressPercent interface {
	ProgressPercent() int
}

func (swig_p *_swig_DirectorSearchMonitor) ProgressPercent() int {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorProgressPercent); swig_ok {
		return swig_g.ProgressPercent()
	}
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorSearchMonitor_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor)))
	return swig_r
}

func DirectorSearchMonitorProgressPercent(swig_p SearchMonitor) int {
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorSearchMonitor_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor)))
	return swig_r
}

//export Swig_DirectorSearchMonitor_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int) {
	var swig_r int
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_r = swig_p.ProgressPercent()
	return swig_r
}

type _swig_DirectorInterfaceSearchMonitorAccept interface {
	Accept(ModelVisitor)
}

func (swig_p *_swig_DirectorSearchMonitor) Accept(visitor ModelVisitor) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorAccept); swig_ok {
		swig_g.Accept(visitor)
		return
	}
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorSearchMonitor_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0))
}

func DirectorSearchMonitorAccept(swig_p SearchMonitor, visitor ModelVisitor) {
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorSearchMonitor_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSearchMonitor_callback_Accept_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_Accept_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.Accept(SwigcptrModelVisitor(arg2))
}

type _swig_DirectorInterfaceSearchMonitorInstall interface {
	Install()
}

func (swig_p *_swig_DirectorSearchMonitor) Install() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchMonitorInstall); swig_ok {
		swig_g.Install()
		return
	}
	C._wrap__swig_DirectorSearchMonitor_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchMonitor))
}

func DirectorSearchMonitorInstall(swig_p SearchMonitor) {
	C._wrap__swig_DirectorSearchMonitor_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchMonitor).SwigcptrSearchMonitor))
}

//export Swig_DirectorSearchMonitor_callback_Install_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchMonitor_callback_Install_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchMonitor)
	swig_p.Install()
}

type SwigcptrSearchMonitor uintptr

func (p SwigcptrSearchMonitor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSearchMonitor) SwigIsSearchMonitor() {
}

func (p SwigcptrSearchMonitor) DirectorInterface() interface{} {
	return nil
}

func _swig_getSearchMonitor_SearchMonitor_kNoProgress_SearchMonitor() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_SearchMonitor_kNoProgress_SearchMonitor_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var SearchMonitorKNoProgress int = _swig_getSearchMonitor_SearchMonitor_kNoProgress_SearchMonitor()
func NewSearchMonitor(arg1 Solver) (_swig_ret SearchMonitor) {
	var swig_r SearchMonitor
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SearchMonitor)(SwigcptrSearchMonitor(C._wrap_new_SearchMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteSearchMonitor(arg1 SearchMonitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SearchMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) EnterSearch() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) RestartSearch() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) ExitSearch() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) BeginNextDecision(arg2 DecisionBuilder) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchMonitor_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchMonitor) EndNextDecision(arg2 DecisionBuilder, arg3 Decision) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_SearchMonitor_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrSearchMonitor) ApplyDecision(arg2 Decision) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchMonitor_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchMonitor) RefuteDecision(arg2 Decision) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchMonitor_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchMonitor) AfterDecision(arg2 Decision, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_SearchMonitor_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrSearchMonitor) BeginFail() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) EndFail() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) BeginInitialPropagation() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) EndInitialPropagation() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SearchMonitor_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitor) AtSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SearchMonitor_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitor) NoMoreSolutions() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SearchMonitor_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitor) AcceptDelta(arg2 Assignment, arg3 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_SearchMonitor_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitor) AcceptNeighbor() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) AcceptUncheckedNeighbor() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SearchMonitor_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitor) PeriodicCheck() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) ProgressPercent() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SearchMonitor_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchMonitor) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchMonitor_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchMonitor) Install() {
	_swig_i_0 := arg1
	C._wrap_SearchMonitor_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchMonitor) Solver() (_swig_ret Solver) {
	var swig_r Solver
	_swig_i_0 := arg1
	swig_r = (Solver)(SwigcptrSolver(C._wrap_SearchMonitor_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrSearchMonitor) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SearchMonitor_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrSearchMonitor) SwigIsBaseObject() {
}

func (p SwigcptrSearchMonitor) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type SearchMonitor interface {
	Swigcptr() uintptr
	SwigIsSearchMonitor()
	DirectorInterface() interface{}
	EnterSearch()
	RestartSearch()
	ExitSearch()
	BeginNextDecision(arg2 DecisionBuilder)
	EndNextDecision(arg2 DecisionBuilder, arg3 Decision)
	ApplyDecision(arg2 Decision)
	RefuteDecision(arg2 Decision)
	AfterDecision(arg2 Decision, arg3 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	AcceptSolution() (_swig_ret bool)
	AtSolution() (_swig_ret bool)
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptDelta(arg2 Assignment, arg3 Assignment) (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	PeriodicCheck()
	ProgressPercent() (_swig_ret int)
	Accept(arg2 ModelVisitor)
	Install()
	Solver() (_swig_ret Solver)
	ToString() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrIntExpr uintptr

func (p SwigcptrIntExpr) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntExpr) SwigIsIntExpr() {
}

func DeleteIntExpr(arg1 IntExpr) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntExpr) Min() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntExpr_Min_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntExpr) SetMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntExpr_SetMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_541(_swig_i_1))
}

func (arg1 SwigcptrIntExpr) Max() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntExpr_Max_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntExpr) SetMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntExpr_SetMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_543(_swig_i_1))
}

func (arg1 SwigcptrIntExpr) Range(arg2 []int64, arg3 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntExpr_Range_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_544)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_545)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrIntExpr) SetRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntExpr_SetRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_546(_swig_i_1), C.swig_type_547(_swig_i_2))
}

func (arg1 SwigcptrIntExpr) SetValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntExpr_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_548(_swig_i_1))
}

func (arg1 SwigcptrIntExpr) Bound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntExpr_Bound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntExpr) IsVar() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntExpr_IsVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntExpr) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntExpr_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntExpr) VarWithName(arg2 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntExpr_VarWithName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_549)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrIntExpr) WhenRange__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntExpr_WhenRange__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntExpr) WhenRange__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntExpr_WhenRange__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntExpr) WhenRange(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenRange__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenRange__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntExpr) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntExpr_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrIntExpr) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntExpr_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrIntExpr) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_IntExpr_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrIntExpr) FreezeQueue() {
	C._wrap_IntExpr_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntExpr) UnfreezeQueue() {
	C._wrap_IntExpr_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntExpr) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntExpr_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntExpr) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntExpr_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntExpr) ResetActionOnFail() {
	C._wrap_IntExpr_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntExpr) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntExpr_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntExpr) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntExpr_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrIntExpr) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntExpr_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntExpr) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IntExpr_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntExpr) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntExpr_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrIntExpr) SwigIsPropagationBaseObject() {
}

func (p SwigcptrIntExpr) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrIntExpr) SwigIsBaseObject() {
}

func (p SwigcptrIntExpr) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type IntExpr interface {
	Swigcptr() uintptr
	SwigIsIntExpr()
	Min() (_swig_ret int64)
	SetMin(arg2 int64)
	Max() (_swig_ret int64)
	SetMax(arg2 int64)
	Range(arg2 []int64, arg3 []int64)
	SetRange(arg2 int64, arg3 int64)
	SetValue(arg2 int64)
	Bound() (_swig_ret bool)
	IsVar() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	VarWithName(arg2 string) (_swig_ret IntVar)
	WhenRange(a ...interface{})
	Accept(arg2 ModelVisitor)
	ToString() (_swig_ret string)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrIntVarIterator uintptr

func (p SwigcptrIntVarIterator) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntVarIterator) SwigIsIntVarIterator() {
}

func DeleteIntVarIterator(arg1 IntVarIterator) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntVarIterator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVarIterator) Init() {
	_swig_i_0 := arg1
	C._wrap_IntVarIterator_Init_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVarIterator) Ok() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntVarIterator_Ok_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarIterator) Value() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVarIterator_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarIterator) Next() {
	_swig_i_0 := arg1
	C._wrap_IntVarIterator_Next_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVarIterator) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_IntVarIterator_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrIntVarIterator) SwigIsBaseObject() {
}

func (p SwigcptrIntVarIterator) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type IntVarIterator interface {
	Swigcptr() uintptr
	SwigIsIntVarIterator()
	Init()
	Ok() (_swig_ret bool)
	Value() (_swig_ret int64)
	Next()
	ToString() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrIntVar uintptr

func (p SwigcptrIntVar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntVar) SwigIsIntVar() {
}

func DeleteIntVar(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVar) IsVar() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntVar_IsVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVar) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVar_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntVar) Value() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVar_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVar) RemoveValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVar_RemoveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_556(_swig_i_1))
}

func (arg1 SwigcptrIntVar) RemoveInterval(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntVar_RemoveInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_557(_swig_i_1), C.swig_type_558(_swig_i_2))
}

func (arg1 SwigcptrIntVar) RemoveValues(arg2 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVar_RemoveValues_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_559)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIntVar) SetValues(arg2 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVar_SetValues_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_560)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIntVar) WhenBound__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVar_WhenBound__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVar) WhenBound__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVar_WhenBound__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntVar) WhenBound(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenBound__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenBound__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntVar) WhenDomain__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVar_WhenDomain__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVar) WhenDomain__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVar_WhenDomain__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntVar) WhenDomain(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenDomain__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenDomain__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntVar) Size() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_IntVar_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVar) Contains(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_IntVar_Contains_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_562(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrIntVar) OldMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVar_OldMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVar) OldMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVar_OldMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVar) VarType() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IntVar_VarType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVar) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVar_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVar) IsEqual(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVar_IsEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_565(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntVar) IsDifferent(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVar_IsDifferent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_566(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntVar) IsGreaterOrEqual(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVar_IsGreaterOrEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_567(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntVar) IsLessOrEqual(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVar_IsLessOrEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_568(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntVar) Index() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IntVar_Index_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVar) GetDomain() (_swig_ret IntVarIterator) {
	var swig_r IntVarIterator
	_swig_i_0 := arg1
	swig_r = (IntVarIterator)(SwigcptrIntVarIterator(C._wrap_IntVar_GetDomain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntVar) GetHoles() (_swig_ret IntVarIterator) {
	var swig_r IntVarIterator
	_swig_i_0 := arg1
	swig_r = (IntVarIterator)(SwigcptrIntVarIterator(C._wrap_IntVar_GetHoles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrIntVar) Min() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_IntVar_Min_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntVar) SetMin(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_IntVar_SetMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_570(_swig_i_0))
}

func (_swig_base SwigcptrIntVar) Max() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_IntVar_Max_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntVar) SetMax(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_IntVar_SetMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_572(_swig_i_0))
}

func (_swig_base SwigcptrIntVar) Range(arg1 []int64, arg2 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVar_Range_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), *(*C.swig_type_573)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_574)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrIntVar) SetRange(arg1 int64, arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVar_SetRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_575(_swig_i_0), C.swig_type_576(_swig_i_1))
}

func (_swig_base SwigcptrIntVar) SetValue(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_IntVar_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_577(_swig_i_0))
}

func (_swig_base SwigcptrIntVar) Bound() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IntVar_Bound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntVar) VarWithName(arg1 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVar_VarWithName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), *(*C.swig_type_578)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrIntVar) WhenRange__SWIG_0(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntVar_WhenRange__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntVar) WhenRange__SWIG_1(arg1 AtSolutionCallback) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntVar_WhenRange__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrIntVar) WhenRange(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenRange__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenRange__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrIntVar) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntVar_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrIntVar) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_IntVar_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrIntVar) FreezeQueue() {
	C._wrap_IntVar_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntVar) UnfreezeQueue() {
	C._wrap_IntVar_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntVar) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntVar_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntVar) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntVar_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntVar) ResetActionOnFail() {
	C._wrap_IntVar_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntVar) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntVar_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntVar) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntVar_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrIntVar) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntVar_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntVar) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IntVar_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntVar) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntVar_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrIntVar) SwigIsIntExpr() {
}

func (p SwigcptrIntVar) SwigGetIntExpr() IntExpr {
	return SwigcptrIntExpr(getSwigcptr(p))
}

func (p SwigcptrIntVar) SwigIsPropagationBaseObject() {
}

func (p SwigcptrIntVar) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrIntVar) SwigIsBaseObject() {
}

func (p SwigcptrIntVar) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type IntVar interface {
	Swigcptr() uintptr
	SwigIsIntVar()
	IsVar() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	Value() (_swig_ret int64)
	RemoveValue(arg2 int64)
	RemoveInterval(arg2 int64, arg3 int64)
	RemoveValues(arg2 []int64)
	SetValues(arg2 []int64)
	WhenBound(a ...interface{})
	WhenDomain(a ...interface{})
	Size() (_swig_ret uint64)
	Contains(arg2 int64) (_swig_ret bool)
	OldMin() (_swig_ret int64)
	OldMax() (_swig_ret int64)
	VarType() (_swig_ret int)
	Accept(arg2 ModelVisitor)
	IsEqual(arg2 int64) (_swig_ret IntVar)
	IsDifferent(arg2 int64) (_swig_ret IntVar)
	IsGreaterOrEqual(arg2 int64) (_swig_ret IntVar)
	IsLessOrEqual(arg2 int64) (_swig_ret IntVar)
	Index() (_swig_ret int)
	GetDomain() (_swig_ret IntVarIterator)
	GetHoles() (_swig_ret IntVarIterator)
	Min() (_swig_ret int64)
	SetMin(arg1 int64)
	Max() (_swig_ret int64)
	SetMax(arg1 int64)
	Range(arg1 []int64, arg2 []int64)
	SetRange(arg1 int64, arg2 int64)
	SetValue(arg1 int64)
	Bound() (_swig_ret bool)
	VarWithName(arg1 string) (_swig_ret IntVar)
	WhenRange(a ...interface{})
	ToString() (_swig_ret string)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsIntExpr()
	SwigGetIntExpr() IntExpr
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorSolutionCollector struct {
	SwigcptrSolutionCollector
	v interface{}
}

func (p *_swig_DirectorSolutionCollector) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrSolutionCollector)
}

func (p *_swig_DirectorSolutionCollector) SwigIsSolutionCollector() {
}

func (p *_swig_DirectorSolutionCollector) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorSolutionCollector__SWIG_0(v interface{}, arg1 Solver, arg2 Assignment) SolutionCollector {
	p := &_swig_DirectorSolutionCollector{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	p.SwigcptrSolutionCollector = SwigcptrSolutionCollector(C._wrap__swig_NewDirectorSolutionCollectorSolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return p
}

func NewDirectorSolutionCollector__SWIG_1(v interface{}, arg1 Solver) SolutionCollector {
	p := &_swig_DirectorSolutionCollector{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	p.SwigcptrSolutionCollector = SwigcptrSolutionCollector(C._wrap__swig_NewDirectorSolutionCollectorSolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0)))
	return p
}

func NewDirectorSolutionCollector(abi interface{}, a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 1 {
		return NewDirectorSolutionCollector__SWIG_1(abi, a[0].(Solver))
	}
	if argc == 2 {
		return NewDirectorSolutionCollector__SWIG_0(abi, a[0].(Solver), a[1].(Assignment))
	}
	panic("No match for overloaded function call")
}

func DeleteDirectorSolutionCollector(arg1 SolutionCollector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorSolutionCollector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_SolutionCollector_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_SolutionCollector_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceSolutionCollectorToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorSolutionCollector) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorSolutionCollector_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorSolutionCollectorToString(swig_p SolutionCollector) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorSolutionCollector_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorSolutionCollector_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceSolutionCollectorEnterSearch interface {
	EnterSearch()
}

func (swig_p *_swig_DirectorSolutionCollector) EnterSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorEnterSearch); swig_ok {
		swig_g.EnterSearch()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorEnterSearch(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_EnterSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_EnterSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.EnterSearch()
}

type _swig_DirectorInterfaceSolutionCollectorRestartSearch interface {
	RestartSearch()
}

func (swig_p *_swig_DirectorSolutionCollector) RestartSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorRestartSearch); swig_ok {
		swig_g.RestartSearch()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorRestartSearch(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_RestartSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_RestartSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.RestartSearch()
}

type _swig_DirectorInterfaceSolutionCollectorExitSearch interface {
	ExitSearch()
}

func (swig_p *_swig_DirectorSolutionCollector) ExitSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorExitSearch); swig_ok {
		swig_g.ExitSearch()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorExitSearch(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_ExitSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_ExitSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.ExitSearch()
}

type _swig_DirectorInterfaceSolutionCollectorBeginNextDecision interface {
	BeginNextDecision(DecisionBuilder)
}

func (swig_p *_swig_DirectorSolutionCollector) BeginNextDecision(b DecisionBuilder) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorBeginNextDecision); swig_ok {
		swig_g.BeginNextDecision(b)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	C._wrap__swig_DirectorSolutionCollector_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0))
}

func DirectorSolutionCollectorBeginNextDecision(swig_p SolutionCollector, b DecisionBuilder) {
	_swig_i_0 := getSwigcptr(b)
	C._wrap__swig_DirectorSolutionCollector_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSolutionCollector_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.BeginNextDecision(SwigcptrDecisionBuilder(arg2))
}

type _swig_DirectorInterfaceSolutionCollectorEndNextDecision interface {
	EndNextDecision(DecisionBuilder, Decision)
}

func (swig_p *_swig_DirectorSolutionCollector) EndNextDecision(b DecisionBuilder, d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorEndNextDecision); swig_ok {
		swig_g.EndNextDecision(b, d)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorSolutionCollector_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorSolutionCollectorEndNextDecision(swig_p SolutionCollector, b DecisionBuilder, d Decision) {
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorSolutionCollector_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorSolutionCollector_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.EndNextDecision(SwigcptrDecisionBuilder(arg2), SwigcptrDecision(arg3))
}

type _swig_DirectorInterfaceSolutionCollectorApplyDecision interface {
	ApplyDecision(Decision)
}

func (swig_p *_swig_DirectorSolutionCollector) ApplyDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorApplyDecision); swig_ok {
		swig_g.ApplyDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSolutionCollector_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0))
}

func DirectorSolutionCollectorApplyDecision(swig_p SolutionCollector, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSolutionCollector_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSolutionCollector_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.ApplyDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceSolutionCollectorRefuteDecision interface {
	RefuteDecision(Decision)
}

func (swig_p *_swig_DirectorSolutionCollector) RefuteDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorRefuteDecision); swig_ok {
		swig_g.RefuteDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSolutionCollector_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0))
}

func DirectorSolutionCollectorRefuteDecision(swig_p SolutionCollector, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSolutionCollector_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSolutionCollector_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.RefuteDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceSolutionCollectorAfterDecision interface {
	AfterDecision(Decision, bool)
}

func (swig_p *_swig_DirectorSolutionCollector) AfterDecision(d Decision, apply bool) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorAfterDecision); swig_ok {
		swig_g.AfterDecision(d, apply)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorSolutionCollector_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func DirectorSolutionCollectorAfterDecision(swig_p SolutionCollector, d Decision, apply bool) {
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorSolutionCollector_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

//export Swig_DirectorSolutionCollector_callback_AfterDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_AfterDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 bool) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.AfterDecision(SwigcptrDecision(arg2), arg3)
}

type _swig_DirectorInterfaceSolutionCollectorBeginFail interface {
	BeginFail()
}

func (swig_p *_swig_DirectorSolutionCollector) BeginFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorBeginFail); swig_ok {
		swig_g.BeginFail()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorBeginFail(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_BeginFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_BeginFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.BeginFail()
}

type _swig_DirectorInterfaceSolutionCollectorEndFail interface {
	EndFail()
}

func (swig_p *_swig_DirectorSolutionCollector) EndFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorEndFail); swig_ok {
		swig_g.EndFail()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorEndFail(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_EndFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_EndFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.EndFail()
}

type _swig_DirectorInterfaceSolutionCollectorBeginInitialPropagation interface {
	BeginInitialPropagation()
}

func (swig_p *_swig_DirectorSolutionCollector) BeginInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorBeginInitialPropagation); swig_ok {
		swig_g.BeginInitialPropagation()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorBeginInitialPropagation(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.BeginInitialPropagation()
}

type _swig_DirectorInterfaceSolutionCollectorEndInitialPropagation interface {
	EndInitialPropagation()
}

func (swig_p *_swig_DirectorSolutionCollector) EndInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorEndInitialPropagation); swig_ok {
		swig_g.EndInitialPropagation()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorEndInitialPropagation(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.EndInitialPropagation()
}

type _swig_DirectorInterfaceSolutionCollectorAcceptSolution interface {
	AcceptSolution() bool
}

func (swig_p *_swig_DirectorSolutionCollector) AcceptSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorAcceptSolution); swig_ok {
		return swig_g.AcceptSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector)))
	return swig_r
}

func DirectorSolutionCollectorAcceptSolution(swig_p SolutionCollector) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector)))
	return swig_r
}

//export Swig_DirectorSolutionCollector_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_r = swig_p.AcceptSolution()
	return swig_r
}

type _swig_DirectorInterfaceSolutionCollectorAtSolution interface {
	AtSolution() bool
}

func (swig_p *_swig_DirectorSolutionCollector) AtSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorAtSolution); swig_ok {
		return swig_g.AtSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector)))
	return swig_r
}

func DirectorSolutionCollectorAtSolution(swig_p SolutionCollector) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector)))
	return swig_r
}

//export Swig_DirectorSolutionCollector_callback_AtSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_AtSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_r = swig_p.AtSolution()
	return swig_r
}

type _swig_DirectorInterfaceSolutionCollectorNoMoreSolutions interface {
	NoMoreSolutions()
}

func (swig_p *_swig_DirectorSolutionCollector) NoMoreSolutions() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorNoMoreSolutions); swig_ok {
		swig_g.NoMoreSolutions()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorNoMoreSolutions(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.NoMoreSolutions()
}

type _swig_DirectorInterfaceSolutionCollectorLocalOptimum interface {
	LocalOptimum() bool
}

func (swig_p *_swig_DirectorSolutionCollector) LocalOptimum() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorLocalOptimum); swig_ok {
		return swig_g.LocalOptimum()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector)))
	return swig_r
}

func DirectorSolutionCollectorLocalOptimum(swig_p SolutionCollector) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector)))
	return swig_r
}

//export Swig_DirectorSolutionCollector_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_r = swig_p.LocalOptimum()
	return swig_r
}

type _swig_DirectorInterfaceSolutionCollectorAcceptDelta interface {
	AcceptDelta(Assignment, Assignment) bool
}

func (swig_p *_swig_DirectorSolutionCollector) AcceptDelta(delta Assignment, deltadelta Assignment) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorAcceptDelta); swig_ok {
		return swig_g.AcceptDelta(delta, deltadelta)
	}
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func DirectorSolutionCollectorAcceptDelta(swig_p SolutionCollector, delta Assignment, deltadelta Assignment) bool {
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

//export Swig_DirectorSolutionCollector_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_r = swig_p.AcceptDelta(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
	return swig_r
}

type _swig_DirectorInterfaceSolutionCollectorAcceptNeighbor interface {
	AcceptNeighbor()
}

func (swig_p *_swig_DirectorSolutionCollector) AcceptNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorAcceptNeighbor); swig_ok {
		swig_g.AcceptNeighbor()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorAcceptNeighbor(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.AcceptNeighbor()
}

type _swig_DirectorInterfaceSolutionCollectorAcceptUncheckedNeighbor interface {
	AcceptUncheckedNeighbor()
}

func (swig_p *_swig_DirectorSolutionCollector) AcceptUncheckedNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorAcceptUncheckedNeighbor); swig_ok {
		swig_g.AcceptUncheckedNeighbor()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorAcceptUncheckedNeighbor(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.AcceptUncheckedNeighbor()
}

type _swig_DirectorInterfaceSolutionCollectorIsUncheckedSolutionLimitReached interface {
	IsUncheckedSolutionLimitReached() bool
}

func (swig_p *_swig_DirectorSolutionCollector) IsUncheckedSolutionLimitReached() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorIsUncheckedSolutionLimitReached); swig_ok {
		return swig_g.IsUncheckedSolutionLimitReached()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector)))
	return swig_r
}

func DirectorSolutionCollectorIsUncheckedSolutionLimitReached(swig_p SolutionCollector) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSolutionCollector_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector)))
	return swig_r
}

//export Swig_DirectorSolutionCollector_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_r = swig_p.IsUncheckedSolutionLimitReached()
	return swig_r
}

type _swig_DirectorInterfaceSolutionCollectorPeriodicCheck interface {
	PeriodicCheck()
}

func (swig_p *_swig_DirectorSolutionCollector) PeriodicCheck() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorPeriodicCheck); swig_ok {
		swig_g.PeriodicCheck()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorPeriodicCheck(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.PeriodicCheck()
}

type _swig_DirectorInterfaceSolutionCollectorProgressPercent interface {
	ProgressPercent() int
}

func (swig_p *_swig_DirectorSolutionCollector) ProgressPercent() int {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorProgressPercent); swig_ok {
		return swig_g.ProgressPercent()
	}
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorSolutionCollector_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector)))
	return swig_r
}

func DirectorSolutionCollectorProgressPercent(swig_p SolutionCollector) int {
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorSolutionCollector_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector)))
	return swig_r
}

//export Swig_DirectorSolutionCollector_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int) {
	var swig_r int
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_r = swig_p.ProgressPercent()
	return swig_r
}

type _swig_DirectorInterfaceSolutionCollectorAccept interface {
	Accept(ModelVisitor)
}

func (swig_p *_swig_DirectorSolutionCollector) Accept(visitor ModelVisitor) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorAccept); swig_ok {
		swig_g.Accept(visitor)
		return
	}
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorSolutionCollector_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0))
}

func DirectorSolutionCollectorAccept(swig_p SolutionCollector, visitor ModelVisitor) {
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorSolutionCollector_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSolutionCollector_callback_Accept_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_Accept_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.Accept(SwigcptrModelVisitor(arg2))
}

type _swig_DirectorInterfaceSolutionCollectorInstall interface {
	Install()
}

func (swig_p *_swig_DirectorSolutionCollector) Install() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCollectorInstall); swig_ok {
		swig_g.Install()
		return
	}
	C._wrap__swig_DirectorSolutionCollector_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSolutionCollector))
}

func DirectorSolutionCollectorInstall(swig_p SolutionCollector) {
	C._wrap__swig_DirectorSolutionCollector_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSolutionCollector).SwigcptrSolutionCollector))
}

//export Swig_DirectorSolutionCollector_callback_Install_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSolutionCollector_callback_Install_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCollector)
	swig_p.Install()
}

type SwigcptrSolutionCollector uintptr

func (p SwigcptrSolutionCollector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSolutionCollector) SwigIsSolutionCollector() {
}

func (p SwigcptrSolutionCollector) DirectorInterface() interface{} {
	return nil
}

func NewSolutionCollector__SWIG_0(arg1 Solver, arg2 Assignment) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_new_SolutionCollector__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewSolutionCollector__SWIG_1(arg1 Solver) (_swig_ret SolutionCollector) {
	var swig_r SolutionCollector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SolutionCollector)(SwigcptrSolutionCollector(C._wrap_new_SolutionCollector__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSolutionCollector(a ...interface{}) SolutionCollector {
	argc := len(a)
	if argc == 1 {
		return NewSolutionCollector__SWIG_1(a[0].(Solver))
	}
	if argc == 2 {
		return NewSolutionCollector__SWIG_0(a[0].(Solver), a[1].(Assignment))
	}
	panic("No match for overloaded function call")
}

func DeleteSolutionCollector(arg1 SolutionCollector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SolutionCollector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolutionCollector) Install() {
	_swig_i_0 := arg1
	C._wrap_SolutionCollector_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolutionCollector) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SolutionCollector_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSolutionCollector) Add__SWIG_0(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_Add__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionCollector) Add__SWIG_1(arg2 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_Add__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionCollector) Add__SWIG_2(arg2 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_Add__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionCollector) Add__SWIG_3(arg2 IntervalVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_Add__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionCollector) Add__SWIG_4(arg2 SequenceVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_Add__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionCollector) Add__SWIG_5(arg2 SequenceVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_Add__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrSolutionCollector) Add(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		p.Add__SWIG_0(a[0].(IntVar))
		return
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_2
		}
		p.Add__SWIG_1(a[0].(IntVarVector))
		return
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(SwigcptrIntervalVar); !ok {
			goto check_3
		}
		p.Add__SWIG_2(a[0].(IntervalVar))
		return
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(IntervalVarVector); !ok {
			goto check_4
		}
		p.Add__SWIG_3(a[0].(IntervalVarVector))
		return
	}
check_4:
	if argc == 1 {
		if _, ok := a[0].(SwigcptrSequenceVar); !ok {
			goto check_5
		}
		p.Add__SWIG_4(a[0].(SequenceVar))
		return
	}
check_5:
	if argc == 1 {
		p.Add__SWIG_5(a[0].(SequenceVarVector))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolutionCollector) AddObjective(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_AddObjective_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionCollector) AddObjectives(arg2 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_AddObjectives_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionCollector) EnterSearch() {
	_swig_i_0 := arg1
	C._wrap_SolutionCollector_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolutionCollector) SolutionCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SolutionCollector_SolutionCount_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) HasSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SolutionCollector_HasSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) Solution(arg2 int) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_SolutionCollector_Solution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) LastSolutionOrNull() (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_SolutionCollector_LastSolutionOrNull_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) WallTime(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_SolutionCollector_WallTime_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) Branches(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_SolutionCollector_Branches_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) Failures(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_SolutionCollector_Failures_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) ObjectiveValue(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_SolutionCollector_ObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) ObjectiveValueFromIndex(arg2 int, arg3 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_SolutionCollector_ObjectiveValueFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) Value(arg2 int, arg3 IntVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (int64)(C._wrap_SolutionCollector_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) StartValue(arg2 int, arg3 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (int64)(C._wrap_SolutionCollector_StartValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) EndValue(arg2 int, arg3 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (int64)(C._wrap_SolutionCollector_EndValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) DurationValue(arg2 int, arg3 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (int64)(C._wrap_SolutionCollector_DurationValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) PerformedValue(arg2 int, arg3 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (int64)(C._wrap_SolutionCollector_PerformedValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolutionCollector) ForwardSequence(arg2 int, arg3 SequenceVar) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r_p := C._wrap_SolutionCollector_ForwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrSolutionCollector) BackwardSequence(arg2 int, arg3 SequenceVar) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r_p := C._wrap_SolutionCollector_BackwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrSolutionCollector) Unperformed(arg2 int, arg3 SequenceVar) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r_p := C._wrap_SolutionCollector_Unperformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (_swig_base SwigcptrSolutionCollector) RestartSearch() {
	C._wrap_SolutionCollector_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) ExitSearch() {
	C._wrap_SolutionCollector_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) BeginNextDecision(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SolutionCollector_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSolutionCollector) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionCollector_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrSolutionCollector) ApplyDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SolutionCollector_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSolutionCollector) RefuteDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SolutionCollector_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSolutionCollector) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SolutionCollector_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrSolutionCollector) BeginFail() {
	C._wrap_SolutionCollector_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) EndFail() {
	C._wrap_SolutionCollector_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) BeginInitialPropagation() {
	C._wrap_SolutionCollector_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) EndInitialPropagation() {
	C._wrap_SolutionCollector_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SolutionCollector_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSolutionCollector) AtSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SolutionCollector_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSolutionCollector) NoMoreSolutions() {
	C._wrap_SolutionCollector_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SolutionCollector_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSolutionCollector) AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_SolutionCollector_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrSolutionCollector) AcceptNeighbor() {
	C._wrap_SolutionCollector_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) AcceptUncheckedNeighbor() {
	C._wrap_SolutionCollector_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SolutionCollector_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSolutionCollector) PeriodicCheck() {
	C._wrap_SolutionCollector_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSolutionCollector) ProgressPercent() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_SolutionCollector_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSolutionCollector) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SolutionCollector_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSolutionCollector) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_SolutionCollector_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrSolutionCollector) SwigIsSearchMonitor() {
}

func (p SwigcptrSolutionCollector) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrSolutionCollector) SwigIsBaseObject() {
}

func (p SwigcptrSolutionCollector) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type SolutionCollector interface {
	Swigcptr() uintptr
	SwigIsSolutionCollector()
	DirectorInterface() interface{}
	Install()
	ToString() (_swig_ret string)
	Add(a ...interface{})
	AddObjective(arg2 IntVar)
	AddObjectives(arg2 IntVarVector)
	EnterSearch()
	SolutionCount() (_swig_ret int)
	HasSolution() (_swig_ret bool)
	Solution(arg2 int) (_swig_ret Assignment)
	LastSolutionOrNull() (_swig_ret Assignment)
	WallTime(arg2 int) (_swig_ret int64)
	Branches(arg2 int) (_swig_ret int64)
	Failures(arg2 int) (_swig_ret int64)
	ObjectiveValue(arg2 int) (_swig_ret int64)
	ObjectiveValueFromIndex(arg2 int, arg3 int) (_swig_ret int64)
	Value(arg2 int, arg3 IntVar) (_swig_ret int64)
	StartValue(arg2 int, arg3 IntervalVar) (_swig_ret int64)
	EndValue(arg2 int, arg3 IntervalVar) (_swig_ret int64)
	DurationValue(arg2 int, arg3 IntervalVar) (_swig_ret int64)
	PerformedValue(arg2 int, arg3 IntervalVar) (_swig_ret int64)
	ForwardSequence(arg2 int, arg3 SequenceVar) (_swig_ret []int)
	BackwardSequence(arg2 int, arg3 SequenceVar) (_swig_ret []int)
	Unperformed(arg2 int, arg3 SequenceVar) (_swig_ret []int)
	RestartSearch()
	ExitSearch()
	BeginNextDecision(arg1 DecisionBuilder)
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	ApplyDecision(arg1 Decision)
	RefuteDecision(arg1 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	AcceptSolution() (_swig_ret bool)
	AtSolution() (_swig_ret bool)
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	PeriodicCheck()
	ProgressPercent() (_swig_ret int)
	Accept(arg1 ModelVisitor)
	Solver() (_swig_ret Solver)
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrObjectiveMonitor uintptr

func (p SwigcptrObjectiveMonitor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrObjectiveMonitor) SwigIsObjectiveMonitor() {
}

func NewObjectiveMonitor(arg1 Solver, arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64) (_swig_ret ObjectiveMonitor) {
	var swig_r ObjectiveMonitor
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (ObjectiveMonitor)(SwigcptrObjectiveMonitor(C._wrap_new_ObjectiveMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_597)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func DeleteObjectiveMonitor(arg1 ObjectiveMonitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ObjectiveMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrObjectiveMonitor) ObjectiveVar(arg2 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_ObjectiveMonitor_ObjectiveVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrObjectiveMonitor) MinimizationVar(arg2 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_ObjectiveMonitor_MinimizationVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrObjectiveMonitor) Step(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_ObjectiveMonitor_Step_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrObjectiveMonitor) Maximize(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ObjectiveMonitor_Maximize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrObjectiveMonitor) BestValue(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_ObjectiveMonitor_BestValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrObjectiveMonitor) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ObjectiveMonitor_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrObjectiveMonitor) EnterSearch() {
	_swig_i_0 := arg1
	C._wrap_ObjectiveMonitor_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrObjectiveMonitor) AtSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ObjectiveMonitor_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrObjectiveMonitor) AcceptDelta(arg2 Assignment, arg3 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_ObjectiveMonitor_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrObjectiveMonitor) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ObjectiveMonitor_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrObjectiveMonitor) RestartSearch() {
	C._wrap_ObjectiveMonitor_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) ExitSearch() {
	C._wrap_ObjectiveMonitor_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) BeginNextDecision(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ObjectiveMonitor_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrObjectiveMonitor) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ObjectiveMonitor_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrObjectiveMonitor) ApplyDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ObjectiveMonitor_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrObjectiveMonitor) RefuteDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ObjectiveMonitor_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrObjectiveMonitor) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ObjectiveMonitor_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrObjectiveMonitor) BeginFail() {
	C._wrap_ObjectiveMonitor_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) EndFail() {
	C._wrap_ObjectiveMonitor_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) BeginInitialPropagation() {
	C._wrap_ObjectiveMonitor_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) EndInitialPropagation() {
	C._wrap_ObjectiveMonitor_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ObjectiveMonitor_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrObjectiveMonitor) NoMoreSolutions() {
	C._wrap_ObjectiveMonitor_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ObjectiveMonitor_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrObjectiveMonitor) AcceptNeighbor() {
	C._wrap_ObjectiveMonitor_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) AcceptUncheckedNeighbor() {
	C._wrap_ObjectiveMonitor_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ObjectiveMonitor_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrObjectiveMonitor) PeriodicCheck() {
	C._wrap_ObjectiveMonitor_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) ProgressPercent() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ObjectiveMonitor_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrObjectiveMonitor) Install() {
	C._wrap_ObjectiveMonitor_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrObjectiveMonitor) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_ObjectiveMonitor_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrObjectiveMonitor) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ObjectiveMonitor_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrObjectiveMonitor) SwigIsSearchMonitor() {
}

func (p SwigcptrObjectiveMonitor) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrObjectiveMonitor) SwigIsBaseObject() {
}

func (p SwigcptrObjectiveMonitor) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type ObjectiveMonitor interface {
	Swigcptr() uintptr
	SwigIsObjectiveMonitor()
	ObjectiveVar(arg2 int) (_swig_ret IntVar)
	MinimizationVar(arg2 int) (_swig_ret IntVar)
	Step(arg2 int) (_swig_ret int64)
	Maximize(arg2 int) (_swig_ret bool)
	BestValue(arg2 int) (_swig_ret int64)
	Size() (_swig_ret int)
	EnterSearch()
	AtSolution() (_swig_ret bool)
	AcceptDelta(arg2 Assignment, arg3 Assignment) (_swig_ret bool)
	Accept(arg2 ModelVisitor)
	RestartSearch()
	ExitSearch()
	BeginNextDecision(arg1 DecisionBuilder)
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	ApplyDecision(arg1 Decision)
	RefuteDecision(arg1 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	AcceptSolution() (_swig_ret bool)
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	PeriodicCheck()
	ProgressPercent() (_swig_ret int)
	Install()
	Solver() (_swig_ret Solver)
	ToString() (_swig_ret string)
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorOptimizeVar struct {
	SwigcptrOptimizeVar
	v interface{}
}

func (p *_swig_DirectorOptimizeVar) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrOptimizeVar)
}

func (p *_swig_DirectorOptimizeVar) SwigIsOptimizeVar() {
}

func (p *_swig_DirectorOptimizeVar) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorOptimizeVar__SWIG_0(v interface{}, arg1 Solver, arg2 bool, arg3 IntVar, arg4 int64) OptimizeVar {
	p := &_swig_DirectorOptimizeVar{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	p.SwigcptrOptimizeVar = SwigcptrOptimizeVar(C._wrap__swig_NewDirectorOptimizeVarOptimizeVar__SWIG_0_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_601(_swig_i_3)))
	return p
}

func NewDirectorOptimizeVar__SWIG_1(v interface{}, arg1 Solver, arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64) OptimizeVar {
	p := &_swig_DirectorOptimizeVar{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	p.SwigcptrOptimizeVar = SwigcptrOptimizeVar(C._wrap__swig_NewDirectorOptimizeVarOptimizeVar__SWIG_1_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_602)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	return p
}

func NewDirectorOptimizeVar(abi interface{}, a ...interface{}) OptimizeVar {
	argc := len(a)
	if argc == 4 {
		if _, ok := a[1].(SwigcptrStd_vector_Sl_bool_Sg_); !ok {
			goto check_1
		}
		if _, ok := a[2].(IntVarVector); !ok {
			goto check_1
		}
		if _, ok := a[3].([]int64); !ok {
			goto check_1
		}
		return NewDirectorOptimizeVar__SWIG_1(abi, a[0].(Solver), a[1].(Std_vector_Sl_bool_Sg_), a[2].(IntVarVector), a[3].([]int64))
	}
check_1:
	if argc == 4 {
		return NewDirectorOptimizeVar__SWIG_0(abi, a[0].(Solver), a[1].(bool), a[2].(IntVar), a[3].(int64))
	}
	panic("No match for overloaded function call")
}

func DeleteDirectorOptimizeVar(arg1 OptimizeVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorOptimizeVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_OptimizeVar_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_OptimizeVar_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceOptimizeVarToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorOptimizeVar) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorOptimizeVar_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorOptimizeVarToString(swig_p OptimizeVar) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorOptimizeVar_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorOptimizeVar_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceOptimizeVarEnterSearch interface {
	EnterSearch()
}

func (swig_p *_swig_DirectorOptimizeVar) EnterSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarEnterSearch); swig_ok {
		swig_g.EnterSearch()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarEnterSearch(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_EnterSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_EnterSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.EnterSearch()
}

type _swig_DirectorInterfaceOptimizeVarRestartSearch interface {
	RestartSearch()
}

func (swig_p *_swig_DirectorOptimizeVar) RestartSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarRestartSearch); swig_ok {
		swig_g.RestartSearch()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarRestartSearch(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_RestartSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_RestartSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.RestartSearch()
}

type _swig_DirectorInterfaceOptimizeVarExitSearch interface {
	ExitSearch()
}

func (swig_p *_swig_DirectorOptimizeVar) ExitSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarExitSearch); swig_ok {
		swig_g.ExitSearch()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarExitSearch(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_ExitSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_ExitSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.ExitSearch()
}

type _swig_DirectorInterfaceOptimizeVarBeginNextDecision interface {
	BeginNextDecision(DecisionBuilder)
}

func (swig_p *_swig_DirectorOptimizeVar) BeginNextDecision(db DecisionBuilder) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarBeginNextDecision); swig_ok {
		swig_g.BeginNextDecision(db)
		return
	}
	_swig_i_0 := getSwigcptr(db)
	C._wrap__swig_DirectorOptimizeVar_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0))
}

func DirectorOptimizeVarBeginNextDecision(swig_p OptimizeVar, db DecisionBuilder) {
	_swig_i_0 := getSwigcptr(db)
	C._wrap__swig_DirectorOptimizeVar_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorOptimizeVar_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.BeginNextDecision(SwigcptrDecisionBuilder(arg2))
}

type _swig_DirectorInterfaceOptimizeVarEndNextDecision interface {
	EndNextDecision(DecisionBuilder, Decision)
}

func (swig_p *_swig_DirectorOptimizeVar) EndNextDecision(b DecisionBuilder, d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarEndNextDecision); swig_ok {
		swig_g.EndNextDecision(b, d)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorOptimizeVar_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorOptimizeVarEndNextDecision(swig_p OptimizeVar, b DecisionBuilder, d Decision) {
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorOptimizeVar_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorOptimizeVar_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.EndNextDecision(SwigcptrDecisionBuilder(arg2), SwigcptrDecision(arg3))
}

type _swig_DirectorInterfaceOptimizeVarApplyDecision interface {
	ApplyDecision(Decision)
}

func (swig_p *_swig_DirectorOptimizeVar) ApplyDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarApplyDecision); swig_ok {
		swig_g.ApplyDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorOptimizeVar_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0))
}

func DirectorOptimizeVarApplyDecision(swig_p OptimizeVar, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorOptimizeVar_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorOptimizeVar_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.ApplyDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceOptimizeVarRefuteDecision interface {
	RefuteDecision(Decision)
}

func (swig_p *_swig_DirectorOptimizeVar) RefuteDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarRefuteDecision); swig_ok {
		swig_g.RefuteDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorOptimizeVar_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0))
}

func DirectorOptimizeVarRefuteDecision(swig_p OptimizeVar, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorOptimizeVar_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorOptimizeVar_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.RefuteDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceOptimizeVarAfterDecision interface {
	AfterDecision(Decision, bool)
}

func (swig_p *_swig_DirectorOptimizeVar) AfterDecision(d Decision, apply bool) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarAfterDecision); swig_ok {
		swig_g.AfterDecision(d, apply)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorOptimizeVar_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func DirectorOptimizeVarAfterDecision(swig_p OptimizeVar, d Decision, apply bool) {
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorOptimizeVar_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

//export Swig_DirectorOptimizeVar_callback_AfterDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_AfterDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 bool) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.AfterDecision(SwigcptrDecision(arg2), arg3)
}

type _swig_DirectorInterfaceOptimizeVarBeginFail interface {
	BeginFail()
}

func (swig_p *_swig_DirectorOptimizeVar) BeginFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarBeginFail); swig_ok {
		swig_g.BeginFail()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarBeginFail(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_BeginFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_BeginFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.BeginFail()
}

type _swig_DirectorInterfaceOptimizeVarEndFail interface {
	EndFail()
}

func (swig_p *_swig_DirectorOptimizeVar) EndFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarEndFail); swig_ok {
		swig_g.EndFail()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarEndFail(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_EndFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_EndFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.EndFail()
}

type _swig_DirectorInterfaceOptimizeVarBeginInitialPropagation interface {
	BeginInitialPropagation()
}

func (swig_p *_swig_DirectorOptimizeVar) BeginInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarBeginInitialPropagation); swig_ok {
		swig_g.BeginInitialPropagation()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarBeginInitialPropagation(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.BeginInitialPropagation()
}

type _swig_DirectorInterfaceOptimizeVarEndInitialPropagation interface {
	EndInitialPropagation()
}

func (swig_p *_swig_DirectorOptimizeVar) EndInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarEndInitialPropagation); swig_ok {
		swig_g.EndInitialPropagation()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarEndInitialPropagation(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.EndInitialPropagation()
}

type _swig_DirectorInterfaceOptimizeVarAcceptSolution interface {
	AcceptSolution() bool
}

func (swig_p *_swig_DirectorOptimizeVar) AcceptSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarAcceptSolution); swig_ok {
		return swig_g.AcceptSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar)))
	return swig_r
}

func DirectorOptimizeVarAcceptSolution(swig_p OptimizeVar) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar)))
	return swig_r
}

//export Swig_DirectorOptimizeVar_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_r = swig_p.AcceptSolution()
	return swig_r
}

type _swig_DirectorInterfaceOptimizeVarAtSolution interface {
	AtSolution() bool
}

func (swig_p *_swig_DirectorOptimizeVar) AtSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarAtSolution); swig_ok {
		return swig_g.AtSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar)))
	return swig_r
}

func DirectorOptimizeVarAtSolution(swig_p OptimizeVar) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar)))
	return swig_r
}

//export Swig_DirectorOptimizeVar_callback_AtSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_AtSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_r = swig_p.AtSolution()
	return swig_r
}

type _swig_DirectorInterfaceOptimizeVarNoMoreSolutions interface {
	NoMoreSolutions()
}

func (swig_p *_swig_DirectorOptimizeVar) NoMoreSolutions() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarNoMoreSolutions); swig_ok {
		swig_g.NoMoreSolutions()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarNoMoreSolutions(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.NoMoreSolutions()
}

type _swig_DirectorInterfaceOptimizeVarLocalOptimum interface {
	LocalOptimum() bool
}

func (swig_p *_swig_DirectorOptimizeVar) LocalOptimum() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarLocalOptimum); swig_ok {
		return swig_g.LocalOptimum()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar)))
	return swig_r
}

func DirectorOptimizeVarLocalOptimum(swig_p OptimizeVar) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar)))
	return swig_r
}

//export Swig_DirectorOptimizeVar_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_r = swig_p.LocalOptimum()
	return swig_r
}

type _swig_DirectorInterfaceOptimizeVarAcceptDelta interface {
	AcceptDelta(Assignment, Assignment) bool
}

func (swig_p *_swig_DirectorOptimizeVar) AcceptDelta(delta Assignment, deltadelta Assignment) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarAcceptDelta); swig_ok {
		return swig_g.AcceptDelta(delta, deltadelta)
	}
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func DirectorOptimizeVarAcceptDelta(swig_p OptimizeVar, delta Assignment, deltadelta Assignment) bool {
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

//export Swig_DirectorOptimizeVar_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_r = swig_p.AcceptDelta(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
	return swig_r
}

type _swig_DirectorInterfaceOptimizeVarAcceptNeighbor interface {
	AcceptNeighbor()
}

func (swig_p *_swig_DirectorOptimizeVar) AcceptNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarAcceptNeighbor); swig_ok {
		swig_g.AcceptNeighbor()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarAcceptNeighbor(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.AcceptNeighbor()
}

type _swig_DirectorInterfaceOptimizeVarAcceptUncheckedNeighbor interface {
	AcceptUncheckedNeighbor()
}

func (swig_p *_swig_DirectorOptimizeVar) AcceptUncheckedNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarAcceptUncheckedNeighbor); swig_ok {
		swig_g.AcceptUncheckedNeighbor()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarAcceptUncheckedNeighbor(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.AcceptUncheckedNeighbor()
}

type _swig_DirectorInterfaceOptimizeVarIsUncheckedSolutionLimitReached interface {
	IsUncheckedSolutionLimitReached() bool
}

func (swig_p *_swig_DirectorOptimizeVar) IsUncheckedSolutionLimitReached() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarIsUncheckedSolutionLimitReached); swig_ok {
		return swig_g.IsUncheckedSolutionLimitReached()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar)))
	return swig_r
}

func DirectorOptimizeVarIsUncheckedSolutionLimitReached(swig_p OptimizeVar) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorOptimizeVar_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar)))
	return swig_r
}

//export Swig_DirectorOptimizeVar_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_r = swig_p.IsUncheckedSolutionLimitReached()
	return swig_r
}

type _swig_DirectorInterfaceOptimizeVarPeriodicCheck interface {
	PeriodicCheck()
}

func (swig_p *_swig_DirectorOptimizeVar) PeriodicCheck() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarPeriodicCheck); swig_ok {
		swig_g.PeriodicCheck()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarPeriodicCheck(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.PeriodicCheck()
}

type _swig_DirectorInterfaceOptimizeVarProgressPercent interface {
	ProgressPercent() int
}

func (swig_p *_swig_DirectorOptimizeVar) ProgressPercent() int {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarProgressPercent); swig_ok {
		return swig_g.ProgressPercent()
	}
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorOptimizeVar_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar)))
	return swig_r
}

func DirectorOptimizeVarProgressPercent(swig_p OptimizeVar) int {
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorOptimizeVar_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar)))
	return swig_r
}

//export Swig_DirectorOptimizeVar_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int) {
	var swig_r int
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_r = swig_p.ProgressPercent()
	return swig_r
}

type _swig_DirectorInterfaceOptimizeVarAccept interface {
	Accept(ModelVisitor)
}

func (swig_p *_swig_DirectorOptimizeVar) Accept(visitor ModelVisitor) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarAccept); swig_ok {
		swig_g.Accept(visitor)
		return
	}
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorOptimizeVar_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0))
}

func DirectorOptimizeVarAccept(swig_p OptimizeVar, visitor ModelVisitor) {
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorOptimizeVar_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorOptimizeVar_callback_Accept_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_Accept_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.Accept(SwigcptrModelVisitor(arg2))
}

type _swig_DirectorInterfaceOptimizeVarInstall interface {
	Install()
}

func (swig_p *_swig_DirectorOptimizeVar) Install() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarInstall); swig_ok {
		swig_g.Install()
		return
	}
	C._wrap__swig_DirectorOptimizeVar_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
}

func DirectorOptimizeVarInstall(swig_p OptimizeVar) {
	C._wrap__swig_DirectorOptimizeVar_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
}

//export Swig_DirectorOptimizeVar_callback_Install_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_Install_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_p.Install()
}

type _swig_DirectorInterfaceOptimizeVarName interface {
	Name() string
}

func (swig_p *_swig_DirectorOptimizeVar) Name() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOptimizeVarName); swig_ok {
		return swig_g.Name()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorOptimizeVar_upcall_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrOptimizeVar))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorOptimizeVarName(swig_p OptimizeVar) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorOptimizeVar_upcall_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorOptimizeVar).SwigcptrOptimizeVar))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorOptimizeVar_callback_Name_constraintsolver_e5a2167dd134d32d
func Swig_DirectorOptimizeVar_callback_Name_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorOptimizeVar)
	swig_r = swig_p.Name()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type SwigcptrOptimizeVar uintptr

func (p SwigcptrOptimizeVar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOptimizeVar) SwigIsOptimizeVar() {
}

func (p SwigcptrOptimizeVar) DirectorInterface() interface{} {
	return nil
}

func NewOptimizeVar__SWIG_0(arg1 Solver, arg2 bool, arg3 IntVar, arg4 int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_new_OptimizeVar__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_601(_swig_i_3))))
	return swig_r
}

func NewOptimizeVar__SWIG_1(arg1 Solver, arg2 Std_vector_Sl_bool_Sg_, arg3 IntVarVector, arg4 []int64) (_swig_ret OptimizeVar) {
	var swig_r OptimizeVar
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (OptimizeVar)(SwigcptrOptimizeVar(C._wrap_new_OptimizeVar__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_602)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func NewOptimizeVar(a ...interface{}) OptimizeVar {
	argc := len(a)
	if argc == 4 {
		if _, ok := a[1].(SwigcptrStd_vector_Sl_bool_Sg_); !ok {
			goto check_1
		}
		if _, ok := a[2].(IntVarVector); !ok {
			goto check_1
		}
		if _, ok := a[3].([]int64); !ok {
			goto check_1
		}
		return NewOptimizeVar__SWIG_1(a[0].(Solver), a[1].(Std_vector_Sl_bool_Sg_), a[2].(IntVarVector), a[3].([]int64))
	}
check_1:
	if argc == 4 {
		return NewOptimizeVar__SWIG_0(a[0].(Solver), a[1].(bool), a[2].(IntVar), a[3].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrOptimizeVar) Best() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_OptimizeVar_Best_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrOptimizeVar) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_OptimizeVar_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrOptimizeVar) BeginNextDecision(arg2 DecisionBuilder) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_OptimizeVar_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOptimizeVar) RefuteDecision(arg2 Decision) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_OptimizeVar_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOptimizeVar) AtSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_OptimizeVar_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrOptimizeVar) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_OptimizeVar_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrOptimizeVar) Name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_OptimizeVar_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrOptimizeVar) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_OptimizeVar_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrOptimizeVar) ApplyBound() {
	_swig_i_0 := arg1
	C._wrap_OptimizeVar_ApplyBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func DeleteOptimizeVar(arg1 OptimizeVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_OptimizeVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptimizeVar) ObjectiveVar(arg1 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_OptimizeVar_ObjectiveVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) MinimizationVar(arg1 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_OptimizeVar_MinimizationVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) Step(arg1 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_OptimizeVar_Step_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) Maximize(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_OptimizeVar_Maximize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) BestValue(arg1 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_OptimizeVar_BestValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) Size() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_OptimizeVar_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) EnterSearch() {
	C._wrap_OptimizeVar_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_OptimizeVar_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_OptimizeVar_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptimizeVar) RestartSearch() {
	C._wrap_OptimizeVar_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) ExitSearch() {
	C._wrap_OptimizeVar_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_OptimizeVar_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrOptimizeVar) ApplyDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_OptimizeVar_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptimizeVar) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_OptimizeVar_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrOptimizeVar) BeginFail() {
	C._wrap_OptimizeVar_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) EndFail() {
	C._wrap_OptimizeVar_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) BeginInitialPropagation() {
	C._wrap_OptimizeVar_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) EndInitialPropagation() {
	C._wrap_OptimizeVar_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) NoMoreSolutions() {
	C._wrap_OptimizeVar_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_OptimizeVar_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) AcceptNeighbor() {
	C._wrap_OptimizeVar_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) AcceptUncheckedNeighbor() {
	C._wrap_OptimizeVar_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_OptimizeVar_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) PeriodicCheck() {
	C._wrap_OptimizeVar_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) ProgressPercent() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_OptimizeVar_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptimizeVar) Install() {
	C._wrap_OptimizeVar_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizeVar) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_OptimizeVar_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrOptimizeVar) SwigIsObjectiveMonitor() {
}

func (p SwigcptrOptimizeVar) SwigGetObjectiveMonitor() ObjectiveMonitor {
	return SwigcptrObjectiveMonitor(getSwigcptr(p))
}

func (p SwigcptrOptimizeVar) SwigIsSearchMonitor() {
}

func (p SwigcptrOptimizeVar) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrOptimizeVar) SwigIsBaseObject() {
}

func (p SwigcptrOptimizeVar) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type OptimizeVar interface {
	Swigcptr() uintptr
	SwigIsOptimizeVar()
	DirectorInterface() interface{}
	Best() (_swig_ret int64)
	Var() (_swig_ret IntVar)
	BeginNextDecision(arg2 DecisionBuilder)
	RefuteDecision(arg2 Decision)
	AtSolution() (_swig_ret bool)
	AcceptSolution() (_swig_ret bool)
	Name() (_swig_ret string)
	ToString() (_swig_ret string)
	ApplyBound()
	ObjectiveVar(arg1 int) (_swig_ret IntVar)
	MinimizationVar(arg1 int) (_swig_ret IntVar)
	Step(arg1 int) (_swig_ret int64)
	Maximize(arg1 int) (_swig_ret bool)
	BestValue(arg1 int) (_swig_ret int64)
	Size() (_swig_ret int)
	EnterSearch()
	AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	Accept(arg1 ModelVisitor)
	RestartSearch()
	ExitSearch()
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	ApplyDecision(arg1 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	PeriodicCheck()
	ProgressPercent() (_swig_ret int)
	Install()
	Solver() (_swig_ret Solver)
	SwigIsObjectiveMonitor()
	SwigGetObjectiveMonitor() ObjectiveMonitor
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorSearchLimit struct {
	SwigcptrSearchLimit
	v interface{}
}

func (p *_swig_DirectorSearchLimit) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrSearchLimit)
}

func (p *_swig_DirectorSearchLimit) SwigIsSearchLimit() {
}

func (p *_swig_DirectorSearchLimit) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorSearchLimit(v interface{}, arg1 Solver) SearchLimit {
	p := &_swig_DirectorSearchLimit{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	p.SwigcptrSearchLimit = SwigcptrSearchLimit(C._wrap__swig_NewDirectorSearchLimitSearchLimit_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0)))
	return p
}

func DeleteDirectorSearchLimit(arg1 SearchLimit) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorSearchLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_SearchLimit_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_SearchLimit_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorSearchLimit).SwigcptrSearchLimit = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceSearchLimitToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorSearchLimit) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorSearchLimit_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorSearchLimitToString(swig_p SearchLimit) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorSearchLimit_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorSearchLimit_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceSearchLimitEnterSearch interface {
	EnterSearch()
}

func (swig_p *_swig_DirectorSearchLimit) EnterSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitEnterSearch); swig_ok {
		swig_g.EnterSearch()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitEnterSearch(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_EnterSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_EnterSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.EnterSearch()
}

type _swig_DirectorInterfaceSearchLimitRestartSearch interface {
	RestartSearch()
}

func (swig_p *_swig_DirectorSearchLimit) RestartSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitRestartSearch); swig_ok {
		swig_g.RestartSearch()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitRestartSearch(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_RestartSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_RestartSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.RestartSearch()
}

type _swig_DirectorInterfaceSearchLimitExitSearch interface {
	ExitSearch()
}

func (swig_p *_swig_DirectorSearchLimit) ExitSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitExitSearch); swig_ok {
		swig_g.ExitSearch()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitExitSearch(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_ExitSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_ExitSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.ExitSearch()
}

type _swig_DirectorInterfaceSearchLimitBeginNextDecision interface {
	BeginNextDecision(DecisionBuilder)
}

func (swig_p *_swig_DirectorSearchLimit) BeginNextDecision(b DecisionBuilder) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitBeginNextDecision); swig_ok {
		swig_g.BeginNextDecision(b)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	C._wrap__swig_DirectorSearchLimit_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit), C.uintptr_t(_swig_i_0))
}

func DirectorSearchLimitBeginNextDecision(swig_p SearchLimit, b DecisionBuilder) {
	_swig_i_0 := getSwigcptr(b)
	C._wrap__swig_DirectorSearchLimit_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSearchLimit_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.BeginNextDecision(SwigcptrDecisionBuilder(arg2))
}

type _swig_DirectorInterfaceSearchLimitEndNextDecision interface {
	EndNextDecision(DecisionBuilder, Decision)
}

func (swig_p *_swig_DirectorSearchLimit) EndNextDecision(b DecisionBuilder, d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitEndNextDecision); swig_ok {
		swig_g.EndNextDecision(b, d)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchLimit_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorSearchLimitEndNextDecision(swig_p SearchLimit, b DecisionBuilder, d Decision) {
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchLimit_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorSearchLimit_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.EndNextDecision(SwigcptrDecisionBuilder(arg2), SwigcptrDecision(arg3))
}

type _swig_DirectorInterfaceSearchLimitApplyDecision interface {
	ApplyDecision(Decision)
}

func (swig_p *_swig_DirectorSearchLimit) ApplyDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitApplyDecision); swig_ok {
		swig_g.ApplyDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchLimit_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit), C.uintptr_t(_swig_i_0))
}

func DirectorSearchLimitApplyDecision(swig_p SearchLimit, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchLimit_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSearchLimit_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.ApplyDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceSearchLimitRefuteDecision interface {
	RefuteDecision(Decision)
}

func (swig_p *_swig_DirectorSearchLimit) RefuteDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitRefuteDecision); swig_ok {
		swig_g.RefuteDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchLimit_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit), C.uintptr_t(_swig_i_0))
}

func DirectorSearchLimitRefuteDecision(swig_p SearchLimit, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorSearchLimit_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSearchLimit_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.RefuteDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceSearchLimitAfterDecision interface {
	AfterDecision(Decision, bool)
}

func (swig_p *_swig_DirectorSearchLimit) AfterDecision(d Decision, apply bool) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitAfterDecision); swig_ok {
		swig_g.AfterDecision(d, apply)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorSearchLimit_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func DirectorSearchLimitAfterDecision(swig_p SearchLimit, d Decision, apply bool) {
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorSearchLimit_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

//export Swig_DirectorSearchLimit_callback_AfterDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_AfterDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 bool) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.AfterDecision(SwigcptrDecision(arg2), arg3)
}

type _swig_DirectorInterfaceSearchLimitBeginFail interface {
	BeginFail()
}

func (swig_p *_swig_DirectorSearchLimit) BeginFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitBeginFail); swig_ok {
		swig_g.BeginFail()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitBeginFail(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_BeginFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_BeginFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.BeginFail()
}

type _swig_DirectorInterfaceSearchLimitEndFail interface {
	EndFail()
}

func (swig_p *_swig_DirectorSearchLimit) EndFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitEndFail); swig_ok {
		swig_g.EndFail()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitEndFail(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_EndFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_EndFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.EndFail()
}

type _swig_DirectorInterfaceSearchLimitBeginInitialPropagation interface {
	BeginInitialPropagation()
}

func (swig_p *_swig_DirectorSearchLimit) BeginInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitBeginInitialPropagation); swig_ok {
		swig_g.BeginInitialPropagation()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitBeginInitialPropagation(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.BeginInitialPropagation()
}

type _swig_DirectorInterfaceSearchLimitEndInitialPropagation interface {
	EndInitialPropagation()
}

func (swig_p *_swig_DirectorSearchLimit) EndInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitEndInitialPropagation); swig_ok {
		swig_g.EndInitialPropagation()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitEndInitialPropagation(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.EndInitialPropagation()
}

type _swig_DirectorInterfaceSearchLimitAcceptSolution interface {
	AcceptSolution() bool
}

func (swig_p *_swig_DirectorSearchLimit) AcceptSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitAcceptSolution); swig_ok {
		return swig_g.AcceptSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit)))
	return swig_r
}

func DirectorSearchLimitAcceptSolution(swig_p SearchLimit) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit)))
	return swig_r
}

//export Swig_DirectorSearchLimit_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = swig_p.AcceptSolution()
	return swig_r
}

type _swig_DirectorInterfaceSearchLimitAtSolution interface {
	AtSolution() bool
}

func (swig_p *_swig_DirectorSearchLimit) AtSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitAtSolution); swig_ok {
		return swig_g.AtSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit)))
	return swig_r
}

func DirectorSearchLimitAtSolution(swig_p SearchLimit) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit)))
	return swig_r
}

//export Swig_DirectorSearchLimit_callback_AtSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_AtSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = swig_p.AtSolution()
	return swig_r
}

type _swig_DirectorInterfaceSearchLimitNoMoreSolutions interface {
	NoMoreSolutions()
}

func (swig_p *_swig_DirectorSearchLimit) NoMoreSolutions() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitNoMoreSolutions); swig_ok {
		swig_g.NoMoreSolutions()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitNoMoreSolutions(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.NoMoreSolutions()
}

type _swig_DirectorInterfaceSearchLimitLocalOptimum interface {
	LocalOptimum() bool
}

func (swig_p *_swig_DirectorSearchLimit) LocalOptimum() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitLocalOptimum); swig_ok {
		return swig_g.LocalOptimum()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit)))
	return swig_r
}

func DirectorSearchLimitLocalOptimum(swig_p SearchLimit) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit)))
	return swig_r
}

//export Swig_DirectorSearchLimit_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = swig_p.LocalOptimum()
	return swig_r
}

type _swig_DirectorInterfaceSearchLimitAcceptDelta interface {
	AcceptDelta(Assignment, Assignment) bool
}

func (swig_p *_swig_DirectorSearchLimit) AcceptDelta(delta Assignment, deltadelta Assignment) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitAcceptDelta); swig_ok {
		return swig_g.AcceptDelta(delta, deltadelta)
	}
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func DirectorSearchLimitAcceptDelta(swig_p SearchLimit, delta Assignment, deltadelta Assignment) bool {
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

//export Swig_DirectorSearchLimit_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = swig_p.AcceptDelta(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
	return swig_r
}

type _swig_DirectorInterfaceSearchLimitAcceptNeighbor interface {
	AcceptNeighbor()
}

func (swig_p *_swig_DirectorSearchLimit) AcceptNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitAcceptNeighbor); swig_ok {
		swig_g.AcceptNeighbor()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitAcceptNeighbor(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.AcceptNeighbor()
}

type _swig_DirectorInterfaceSearchLimitAcceptUncheckedNeighbor interface {
	AcceptUncheckedNeighbor()
}

func (swig_p *_swig_DirectorSearchLimit) AcceptUncheckedNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitAcceptUncheckedNeighbor); swig_ok {
		swig_g.AcceptUncheckedNeighbor()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitAcceptUncheckedNeighbor(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.AcceptUncheckedNeighbor()
}

type _swig_DirectorInterfaceSearchLimitIsUncheckedSolutionLimitReached interface {
	IsUncheckedSolutionLimitReached() bool
}

func (swig_p *_swig_DirectorSearchLimit) IsUncheckedSolutionLimitReached() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitIsUncheckedSolutionLimitReached); swig_ok {
		return swig_g.IsUncheckedSolutionLimitReached()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit)))
	return swig_r
}

func DirectorSearchLimitIsUncheckedSolutionLimitReached(swig_p SearchLimit) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorSearchLimit_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit)))
	return swig_r
}

//export Swig_DirectorSearchLimit_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = swig_p.IsUncheckedSolutionLimitReached()
	return swig_r
}

type _swig_DirectorInterfaceSearchLimitPeriodicCheck interface {
	PeriodicCheck()
}

func (swig_p *_swig_DirectorSearchLimit) PeriodicCheck() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitPeriodicCheck); swig_ok {
		swig_g.PeriodicCheck()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitPeriodicCheck(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.PeriodicCheck()
}

type _swig_DirectorInterfaceSearchLimitProgressPercent interface {
	ProgressPercent() int
}

func (swig_p *_swig_DirectorSearchLimit) ProgressPercent() int {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitProgressPercent); swig_ok {
		return swig_g.ProgressPercent()
	}
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorSearchLimit_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit)))
	return swig_r
}

func DirectorSearchLimitProgressPercent(swig_p SearchLimit) int {
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorSearchLimit_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit)))
	return swig_r
}

//export Swig_DirectorSearchLimit_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int) {
	var swig_r int
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = swig_p.ProgressPercent()
	return swig_r
}

type _swig_DirectorInterfaceSearchLimitAccept interface {
	Accept(ModelVisitor)
}

func (swig_p *_swig_DirectorSearchLimit) Accept(visitor ModelVisitor) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitAccept); swig_ok {
		swig_g.Accept(visitor)
		return
	}
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorSearchLimit_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit), C.uintptr_t(_swig_i_0))
}

func DirectorSearchLimitAccept(swig_p SearchLimit, visitor ModelVisitor) {
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorSearchLimit_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorSearchLimit_callback_Accept_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_Accept_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.Accept(SwigcptrModelVisitor(arg2))
}

type _swig_DirectorInterfaceSearchLimitInstall interface {
	Install()
}

func (swig_p *_swig_DirectorSearchLimit) Install() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitInstall); swig_ok {
		swig_g.Install()
		return
	}
	C._wrap__swig_DirectorSearchLimit_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrSearchLimit))
}

func DirectorSearchLimitInstall(swig_p SearchLimit) {
	C._wrap__swig_DirectorSearchLimit_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorSearchLimit).SwigcptrSearchLimit))
}

//export Swig_DirectorSearchLimit_callback_Install_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_Install_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.Install()
}

type _swig_DirectorInterfaceSearchLimitCheckWithOffset interface {
	CheckWithOffset(Absl_Duration) bool
}

func (swig_p *_swig_DirectorSearchLimit) CheckWithOffset(offset Absl_Duration) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitCheckWithOffset); swig_ok {
		return swig_g.CheckWithOffset(offset)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorSearchLimit_callback_CheckWithOffset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_CheckWithOffset_constraintsolver_e5a2167dd134d32d(swig_c int, offset uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = swig_p.CheckWithOffset(SwigcptrAbsl_Duration(offset))
	return swig_r
}

type _swig_DirectorInterfaceSearchLimitInit interface {
	Init()
}

func (swig_p *_swig_DirectorSearchLimit) Init() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitInit); swig_ok {
		swig_g.Init()
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorSearchLimit_callback_Init_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_Init_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.Init()
}

type _swig_DirectorInterfaceSearchLimitCopy interface {
	Copy(SearchLimit)
}

func (swig_p *_swig_DirectorSearchLimit) Copy(limit SearchLimit) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitCopy); swig_ok {
		swig_g.Copy(limit)
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorSearchLimit_callback_Copy_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_Copy_constraintsolver_e5a2167dd134d32d(swig_c int, limit uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_p.Copy(SwigcptrSearchLimit(limit))
}

type _swig_DirectorInterfaceSearchLimitMakeClone interface {
	MakeClone() SearchLimit
}

func (swig_p *_swig_DirectorSearchLimit) MakeClone() SearchLimit {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSearchLimitMakeClone); swig_ok {
		return swig_g.MakeClone()
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorSearchLimit_callback_MakeClone_constraintsolver_e5a2167dd134d32d
func Swig_DirectorSearchLimit_callback_MakeClone_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result SwigcptrSearchLimit) {
	var swig_r SwigcptrSearchLimit
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSearchLimit)
	swig_r = SwigcptrSearchLimit(getSwigcptr(swig_p.MakeClone()))
	return swig_r
}

type SwigcptrSearchLimit uintptr

func (p SwigcptrSearchLimit) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSearchLimit) SwigIsSearchLimit() {
}

func (p SwigcptrSearchLimit) DirectorInterface() interface{} {
	return nil
}

func DeleteSearchLimit(arg1 SearchLimit) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SearchLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLimit) IsCrossed() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SearchLimit_IsCrossed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchLimit) Check() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SearchLimit_Check_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchLimit) CheckWithOffset(arg2 Absl_Duration) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_SearchLimit_CheckWithOffset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSearchLimit) Init() {
	_swig_i_0 := arg1
	C._wrap_SearchLimit_Init_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLimit) Copy(arg2 SearchLimit) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchLimit_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchLimit) MakeClone() (_swig_ret SearchLimit) {
	var swig_r SearchLimit
	_swig_i_0 := arg1
	swig_r = (SearchLimit)(SwigcptrSearchLimit(C._wrap_SearchLimit_MakeClone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSearchLimit) EnterSearch() {
	_swig_i_0 := arg1
	C._wrap_SearchLimit_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLimit) BeginNextDecision(arg2 DecisionBuilder) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchLimit_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchLimit) PeriodicCheck() {
	_swig_i_0 := arg1
	C._wrap_SearchLimit_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLimit) RefuteDecision(arg2 Decision) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchLimit_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchLimit) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SearchLimit_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSearchLimit) Install() {
	_swig_i_0 := arg1
	C._wrap_SearchLimit_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSearchLimit) RestartSearch() {
	C._wrap_SearchLimit_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) ExitSearch() {
	C._wrap_SearchLimit_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchLimit_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrSearchLimit) ApplyDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SearchLimit_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSearchLimit) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SearchLimit_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrSearchLimit) BeginFail() {
	C._wrap_SearchLimit_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) EndFail() {
	C._wrap_SearchLimit_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) BeginInitialPropagation() {
	C._wrap_SearchLimit_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) EndInitialPropagation() {
	C._wrap_SearchLimit_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SearchLimit_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLimit) AtSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SearchLimit_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLimit) NoMoreSolutions() {
	C._wrap_SearchLimit_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SearchLimit_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLimit) AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_SearchLimit_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrSearchLimit) AcceptNeighbor() {
	C._wrap_SearchLimit_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) AcceptUncheckedNeighbor() {
	C._wrap_SearchLimit_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLimit) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SearchLimit_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLimit) ProgressPercent() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_SearchLimit_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLimit) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SearchLimit_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSearchLimit) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_SearchLimit_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrSearchLimit) SwigIsSearchMonitor() {
}

func (p SwigcptrSearchLimit) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrSearchLimit) SwigIsBaseObject() {
}

func (p SwigcptrSearchLimit) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type SearchLimit interface {
	Swigcptr() uintptr
	SwigIsSearchLimit()
	DirectorInterface() interface{}
	IsCrossed() (_swig_ret bool)
	Check() (_swig_ret bool)
	CheckWithOffset(arg2 Absl_Duration) (_swig_ret bool)
	Init()
	Copy(arg2 SearchLimit)
	MakeClone() (_swig_ret SearchLimit)
	EnterSearch()
	BeginNextDecision(arg2 DecisionBuilder)
	PeriodicCheck()
	RefuteDecision(arg2 Decision)
	ToString() (_swig_ret string)
	Install()
	RestartSearch()
	ExitSearch()
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	ApplyDecision(arg1 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	AcceptSolution() (_swig_ret bool)
	AtSolution() (_swig_ret bool)
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	ProgressPercent() (_swig_ret int)
	Accept(arg1 ModelVisitor)
	Solver() (_swig_ret Solver)
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorRegularLimit struct {
	SwigcptrRegularLimit
	v interface{}
}

func (p *_swig_DirectorRegularLimit) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrRegularLimit)
}

func (p *_swig_DirectorRegularLimit) SwigIsRegularLimit() {
}

func (p *_swig_DirectorRegularLimit) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorRegularLimit(v interface{}, arg1 Solver, arg2 Absl_Duration, arg3 int64, arg4 int64, arg5 int64, arg6 bool, arg7 bool) RegularLimit {
	p := &_swig_DirectorRegularLimit{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	p.SwigcptrRegularLimit = SwigcptrRegularLimit(C._wrap__swig_NewDirectorRegularLimitRegularLimit_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_612(_swig_i_2), C.swig_type_613(_swig_i_3), C.swig_type_614(_swig_i_4), C._Bool(_swig_i_5), C._Bool(_swig_i_6)))
	return p
}

func DeleteDirectorRegularLimit(arg1 RegularLimit) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorRegularLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_RegularLimit_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_RegularLimit_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorRegularLimit).SwigcptrRegularLimit = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceRegularLimitToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorRegularLimit) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorRegularLimit_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorRegularLimitToString(swig_p RegularLimit) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorRegularLimit_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorRegularLimit_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceRegularLimitEnterSearch interface {
	EnterSearch()
}

func (swig_p *_swig_DirectorRegularLimit) EnterSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitEnterSearch); swig_ok {
		swig_g.EnterSearch()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitEnterSearch(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_EnterSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_EnterSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.EnterSearch()
}

type _swig_DirectorInterfaceRegularLimitRestartSearch interface {
	RestartSearch()
}

func (swig_p *_swig_DirectorRegularLimit) RestartSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitRestartSearch); swig_ok {
		swig_g.RestartSearch()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitRestartSearch(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_RestartSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_RestartSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.RestartSearch()
}

type _swig_DirectorInterfaceRegularLimitExitSearch interface {
	ExitSearch()
}

func (swig_p *_swig_DirectorRegularLimit) ExitSearch() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitExitSearch); swig_ok {
		swig_g.ExitSearch()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitExitSearch(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_ExitSearch_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_ExitSearch_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.ExitSearch()
}

type _swig_DirectorInterfaceRegularLimitBeginNextDecision interface {
	BeginNextDecision(DecisionBuilder)
}

func (swig_p *_swig_DirectorRegularLimit) BeginNextDecision(b DecisionBuilder) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitBeginNextDecision); swig_ok {
		swig_g.BeginNextDecision(b)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	C._wrap__swig_DirectorRegularLimit_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

func DirectorRegularLimitBeginNextDecision(swig_p RegularLimit, b DecisionBuilder) {
	_swig_i_0 := getSwigcptr(b)
	C._wrap__swig_DirectorRegularLimit_upcall_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorRegularLimit_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_BeginNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.BeginNextDecision(SwigcptrDecisionBuilder(arg2))
}

type _swig_DirectorInterfaceRegularLimitEndNextDecision interface {
	EndNextDecision(DecisionBuilder, Decision)
}

func (swig_p *_swig_DirectorRegularLimit) EndNextDecision(b DecisionBuilder, d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitEndNextDecision); swig_ok {
		swig_g.EndNextDecision(b, d)
		return
	}
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorRegularLimit_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorRegularLimitEndNextDecision(swig_p RegularLimit, b DecisionBuilder, d Decision) {
	_swig_i_0 := getSwigcptr(b)
	_swig_i_1 := getSwigcptr(d)
	C._wrap__swig_DirectorRegularLimit_upcall_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorRegularLimit_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_EndNextDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.EndNextDecision(SwigcptrDecisionBuilder(arg2), SwigcptrDecision(arg3))
}

type _swig_DirectorInterfaceRegularLimitApplyDecision interface {
	ApplyDecision(Decision)
}

func (swig_p *_swig_DirectorRegularLimit) ApplyDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitApplyDecision); swig_ok {
		swig_g.ApplyDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorRegularLimit_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

func DirectorRegularLimitApplyDecision(swig_p RegularLimit, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorRegularLimit_upcall_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorRegularLimit_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_ApplyDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.ApplyDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceRegularLimitRefuteDecision interface {
	RefuteDecision(Decision)
}

func (swig_p *_swig_DirectorRegularLimit) RefuteDecision(d Decision) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitRefuteDecision); swig_ok {
		swig_g.RefuteDecision(d)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorRegularLimit_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

func DirectorRegularLimitRefuteDecision(swig_p RegularLimit, d Decision) {
	_swig_i_0 := getSwigcptr(d)
	C._wrap__swig_DirectorRegularLimit_upcall_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorRegularLimit_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_RefuteDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.RefuteDecision(SwigcptrDecision(arg2))
}

type _swig_DirectorInterfaceRegularLimitAfterDecision interface {
	AfterDecision(Decision, bool)
}

func (swig_p *_swig_DirectorRegularLimit) AfterDecision(d Decision, apply bool) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitAfterDecision); swig_ok {
		swig_g.AfterDecision(d, apply)
		return
	}
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorRegularLimit_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func DirectorRegularLimitAfterDecision(swig_p RegularLimit, d Decision, apply bool) {
	_swig_i_0 := getSwigcptr(d)
	_swig_i_1 := apply
	C._wrap__swig_DirectorRegularLimit_upcall_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

//export Swig_DirectorRegularLimit_callback_AfterDecision_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_AfterDecision_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 bool) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.AfterDecision(SwigcptrDecision(arg2), arg3)
}

type _swig_DirectorInterfaceRegularLimitBeginFail interface {
	BeginFail()
}

func (swig_p *_swig_DirectorRegularLimit) BeginFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitBeginFail); swig_ok {
		swig_g.BeginFail()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitBeginFail(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_BeginFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_BeginFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.BeginFail()
}

type _swig_DirectorInterfaceRegularLimitEndFail interface {
	EndFail()
}

func (swig_p *_swig_DirectorRegularLimit) EndFail() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitEndFail); swig_ok {
		swig_g.EndFail()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitEndFail(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_EndFail_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_EndFail_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.EndFail()
}

type _swig_DirectorInterfaceRegularLimitBeginInitialPropagation interface {
	BeginInitialPropagation()
}

func (swig_p *_swig_DirectorRegularLimit) BeginInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitBeginInitialPropagation); swig_ok {
		swig_g.BeginInitialPropagation()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitBeginInitialPropagation(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.BeginInitialPropagation()
}

type _swig_DirectorInterfaceRegularLimitEndInitialPropagation interface {
	EndInitialPropagation()
}

func (swig_p *_swig_DirectorRegularLimit) EndInitialPropagation() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitEndInitialPropagation); swig_ok {
		swig_g.EndInitialPropagation()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitEndInitialPropagation(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.EndInitialPropagation()
}

type _swig_DirectorInterfaceRegularLimitAcceptSolution interface {
	AcceptSolution() bool
}

func (swig_p *_swig_DirectorRegularLimit) AcceptSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitAcceptSolution); swig_ok {
		return swig_g.AcceptSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit)))
	return swig_r
}

func DirectorRegularLimitAcceptSolution(swig_p RegularLimit) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit)))
	return swig_r
}

//export Swig_DirectorRegularLimit_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_AcceptSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = swig_p.AcceptSolution()
	return swig_r
}

type _swig_DirectorInterfaceRegularLimitAtSolution interface {
	AtSolution() bool
}

func (swig_p *_swig_DirectorRegularLimit) AtSolution() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitAtSolution); swig_ok {
		return swig_g.AtSolution()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit)))
	return swig_r
}

func DirectorRegularLimitAtSolution(swig_p RegularLimit) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit)))
	return swig_r
}

//export Swig_DirectorRegularLimit_callback_AtSolution_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_AtSolution_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = swig_p.AtSolution()
	return swig_r
}

type _swig_DirectorInterfaceRegularLimitNoMoreSolutions interface {
	NoMoreSolutions()
}

func (swig_p *_swig_DirectorRegularLimit) NoMoreSolutions() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitNoMoreSolutions); swig_ok {
		swig_g.NoMoreSolutions()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitNoMoreSolutions(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.NoMoreSolutions()
}

type _swig_DirectorInterfaceRegularLimitLocalOptimum interface {
	LocalOptimum() bool
}

func (swig_p *_swig_DirectorRegularLimit) LocalOptimum() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitLocalOptimum); swig_ok {
		return swig_g.LocalOptimum()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit)))
	return swig_r
}

func DirectorRegularLimitLocalOptimum(swig_p RegularLimit) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit)))
	return swig_r
}

//export Swig_DirectorRegularLimit_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_LocalOptimum_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = swig_p.LocalOptimum()
	return swig_r
}

type _swig_DirectorInterfaceRegularLimitAcceptDelta interface {
	AcceptDelta(Assignment, Assignment) bool
}

func (swig_p *_swig_DirectorRegularLimit) AcceptDelta(delta Assignment, deltadelta Assignment) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitAcceptDelta); swig_ok {
		return swig_g.AcceptDelta(delta, deltadelta)
	}
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func DirectorRegularLimitAcceptDelta(swig_p RegularLimit, delta Assignment, deltadelta Assignment) bool {
	var swig_r bool
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

//export Swig_DirectorRegularLimit_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_AcceptDelta_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = swig_p.AcceptDelta(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
	return swig_r
}

type _swig_DirectorInterfaceRegularLimitAcceptNeighbor interface {
	AcceptNeighbor()
}

func (swig_p *_swig_DirectorRegularLimit) AcceptNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitAcceptNeighbor); swig_ok {
		swig_g.AcceptNeighbor()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitAcceptNeighbor(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.AcceptNeighbor()
}

type _swig_DirectorInterfaceRegularLimitAcceptUncheckedNeighbor interface {
	AcceptUncheckedNeighbor()
}

func (swig_p *_swig_DirectorRegularLimit) AcceptUncheckedNeighbor() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitAcceptUncheckedNeighbor); swig_ok {
		swig_g.AcceptUncheckedNeighbor()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitAcceptUncheckedNeighbor(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.AcceptUncheckedNeighbor()
}

type _swig_DirectorInterfaceRegularLimitIsUncheckedSolutionLimitReached interface {
	IsUncheckedSolutionLimitReached() bool
}

func (swig_p *_swig_DirectorRegularLimit) IsUncheckedSolutionLimitReached() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitIsUncheckedSolutionLimitReached); swig_ok {
		return swig_g.IsUncheckedSolutionLimitReached()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit)))
	return swig_r
}

func DirectorRegularLimitIsUncheckedSolutionLimitReached(swig_p RegularLimit) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit)))
	return swig_r
}

//export Swig_DirectorRegularLimit_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = swig_p.IsUncheckedSolutionLimitReached()
	return swig_r
}

type _swig_DirectorInterfaceRegularLimitPeriodicCheck interface {
	PeriodicCheck()
}

func (swig_p *_swig_DirectorRegularLimit) PeriodicCheck() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitPeriodicCheck); swig_ok {
		swig_g.PeriodicCheck()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitPeriodicCheck(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_PeriodicCheck_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.PeriodicCheck()
}

type _swig_DirectorInterfaceRegularLimitProgressPercent interface {
	ProgressPercent() int
}

func (swig_p *_swig_DirectorRegularLimit) ProgressPercent() int {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitProgressPercent); swig_ok {
		return swig_g.ProgressPercent()
	}
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorRegularLimit_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit)))
	return swig_r
}

func DirectorRegularLimitProgressPercent(swig_p RegularLimit) int {
	var swig_r int
	swig_r = (int)(C._wrap__swig_DirectorRegularLimit_upcall_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit)))
	return swig_r
}

//export Swig_DirectorRegularLimit_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_ProgressPercent_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int) {
	var swig_r int
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = swig_p.ProgressPercent()
	return swig_r
}

type _swig_DirectorInterfaceRegularLimitAccept interface {
	Accept(ModelVisitor)
}

func (swig_p *_swig_DirectorRegularLimit) Accept(visitor ModelVisitor) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitAccept); swig_ok {
		swig_g.Accept(visitor)
		return
	}
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorRegularLimit_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

func DirectorRegularLimitAccept(swig_p RegularLimit, visitor ModelVisitor) {
	_swig_i_0 := getSwigcptr(visitor)
	C._wrap__swig_DirectorRegularLimit_upcall_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorRegularLimit_callback_Accept_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_Accept_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.Accept(SwigcptrModelVisitor(arg2))
}

type _swig_DirectorInterfaceRegularLimitInstall interface {
	Install()
}

func (swig_p *_swig_DirectorRegularLimit) Install() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitInstall); swig_ok {
		swig_g.Install()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitInstall(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_Install_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_Install_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.Install()
}

type _swig_DirectorInterfaceRegularLimitCheckWithOffset interface {
	CheckWithOffset(Absl_Duration) bool
}

func (swig_p *_swig_DirectorRegularLimit) CheckWithOffset(offset Absl_Duration) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitCheckWithOffset); swig_ok {
		return swig_g.CheckWithOffset(offset)
	}
	var swig_r bool
	_swig_i_0 := getSwigcptr(offset)
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_CheckWithOffset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DirectorRegularLimitCheckWithOffset(swig_p RegularLimit, offset Absl_Duration) bool {
	var swig_r bool
	_swig_i_0 := getSwigcptr(offset)
	swig_r = (bool)(C._wrap__swig_DirectorRegularLimit_upcall_CheckWithOffset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0)))
	return swig_r
}

//export Swig_DirectorRegularLimit_callback_CheckWithOffset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_CheckWithOffset_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = swig_p.CheckWithOffset(SwigcptrAbsl_Duration(arg2))
	return swig_r
}

type _swig_DirectorInterfaceRegularLimitInit interface {
	Init()
}

func (swig_p *_swig_DirectorRegularLimit) Init() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitInit); swig_ok {
		swig_g.Init()
		return
	}
	C._wrap__swig_DirectorRegularLimit_upcall_Init_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))
}

func DirectorRegularLimitInit(swig_p RegularLimit) {
	C._wrap__swig_DirectorRegularLimit_upcall_Init_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))
}

//export Swig_DirectorRegularLimit_callback_Init_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_Init_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.Init()
}

type _swig_DirectorInterfaceRegularLimitCopy interface {
	Copy(SearchLimit)
}

func (swig_p *_swig_DirectorRegularLimit) Copy(limit SearchLimit) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitCopy); swig_ok {
		swig_g.Copy(limit)
		return
	}
	_swig_i_0 := getSwigcptr(limit)
	C._wrap__swig_DirectorRegularLimit_upcall_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

func DirectorRegularLimitCopy(swig_p RegularLimit, limit SearchLimit) {
	_swig_i_0 := getSwigcptr(limit)
	C._wrap__swig_DirectorRegularLimit_upcall_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorRegularLimit_callback_Copy_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_Copy_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_p.Copy(SwigcptrSearchLimit(arg2))
}

type _swig_DirectorInterfaceRegularLimitMakeClone interface {
	MakeClone() SearchLimit
}

func (swig_p *_swig_DirectorRegularLimit) MakeClone() SearchLimit {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRegularLimitMakeClone); swig_ok {
		return swig_g.MakeClone()
	}
	var swig_r SearchLimit
	swig_r = (SearchLimit)((SwigcptrSearchLimit)(C._wrap__swig_DirectorRegularLimit_upcall_MakeClone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrRegularLimit))))
	return swig_r
}

func DirectorRegularLimitMakeClone(swig_p RegularLimit) SearchLimit {
	var swig_r SearchLimit
	swig_r = (SearchLimit)((SwigcptrSearchLimit)(C._wrap__swig_DirectorRegularLimit_upcall_MakeClone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorRegularLimit).SwigcptrRegularLimit))))
	return swig_r
}

//export Swig_DirectorRegularLimit_callback_MakeClone_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRegularLimit_callback_MakeClone_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result SwigcptrSearchLimit) {
	var swig_r SwigcptrSearchLimit
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRegularLimit)
	swig_r = SwigcptrSearchLimit(getSwigcptr(swig_p.MakeClone()))
	return swig_r
}

type SwigcptrRegularLimit uintptr

func (p SwigcptrRegularLimit) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRegularLimit) SwigIsRegularLimit() {
}

func (p SwigcptrRegularLimit) DirectorInterface() interface{} {
	return nil
}

func NewRegularLimit(arg1 Solver, arg2 Absl_Duration, arg3 int64, arg4 int64, arg5 int64, arg6 bool, arg7 bool) (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_new_RegularLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_612(_swig_i_2), C.swig_type_613(_swig_i_3), C.swig_type_614(_swig_i_4), C._Bool(_swig_i_5), C._Bool(_swig_i_6))))
	return swig_r
}

func DeleteRegularLimit(arg1 RegularLimit) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RegularLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRegularLimit) Copy(arg2 SearchLimit) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RegularLimit_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRegularLimit) MakeClone() (_swig_ret SearchLimit) {
	var swig_r SearchLimit
	_swig_i_0 := arg1
	swig_r = (SearchLimit)(SwigcptrSearchLimit(C._wrap_RegularLimit_MakeClone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) MakeIdenticalClone() (_swig_ret RegularLimit) {
	var swig_r RegularLimit
	_swig_i_0 := arg1
	swig_r = (RegularLimit)(SwigcptrRegularLimit(C._wrap_RegularLimit_MakeIdenticalClone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) CheckWithOffset(arg2 Absl_Duration) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_RegularLimit_CheckWithOffset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) Init() {
	_swig_i_0 := arg1
	C._wrap_RegularLimit_Init_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRegularLimit) ExitSearch() {
	_swig_i_0 := arg1
	C._wrap_RegularLimit_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRegularLimit) UpdateLimits(arg2 Absl_Duration, arg3 int64, arg4 int64, arg5 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_RegularLimit_UpdateLimits_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_616(_swig_i_2), C.swig_type_617(_swig_i_3), C.swig_type_618(_swig_i_4))
}

func (arg1 SwigcptrRegularLimit) WallTime() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RegularLimit_WallTime_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) Branches() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RegularLimit_Branches_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) Failures() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RegularLimit_Failures_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) Solutions() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RegularLimit_Solutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RegularLimit_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) ProgressPercent() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RegularLimit_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRegularLimit) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RegularLimit_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRegularLimit) Install() {
	_swig_i_0 := arg1
	C._wrap_RegularLimit_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRegularLimit) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RegularLimit_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrRegularLimit) IsCrossed() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_RegularLimit_IsCrossed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrRegularLimit) Check() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_RegularLimit_Check_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrRegularLimit) EnterSearch() {
	C._wrap_RegularLimit_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) BeginNextDecision(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_RegularLimit_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrRegularLimit) PeriodicCheck() {
	C._wrap_RegularLimit_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) RefuteDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_RegularLimit_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrRegularLimit) RestartSearch() {
	C._wrap_RegularLimit_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RegularLimit_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrRegularLimit) ApplyDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_RegularLimit_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrRegularLimit) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_RegularLimit_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrRegularLimit) BeginFail() {
	C._wrap_RegularLimit_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) EndFail() {
	C._wrap_RegularLimit_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) BeginInitialPropagation() {
	C._wrap_RegularLimit_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) EndInitialPropagation() {
	C._wrap_RegularLimit_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_RegularLimit_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrRegularLimit) AtSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_RegularLimit_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrRegularLimit) NoMoreSolutions() {
	C._wrap_RegularLimit_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_RegularLimit_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrRegularLimit) AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_RegularLimit_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrRegularLimit) AcceptNeighbor() {
	C._wrap_RegularLimit_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) AcceptUncheckedNeighbor() {
	C._wrap_RegularLimit_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRegularLimit) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_RegularLimit_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrRegularLimit) SwigIsSearchLimit() {
}

func (p SwigcptrRegularLimit) SwigGetSearchLimit() SearchLimit {
	return SwigcptrSearchLimit(getSwigcptr(p))
}

func (p SwigcptrRegularLimit) SwigIsSearchMonitor() {
}

func (p SwigcptrRegularLimit) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrRegularLimit) SwigIsBaseObject() {
}

func (p SwigcptrRegularLimit) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type RegularLimit interface {
	Swigcptr() uintptr
	SwigIsRegularLimit()
	DirectorInterface() interface{}
	Copy(arg2 SearchLimit)
	MakeClone() (_swig_ret SearchLimit)
	MakeIdenticalClone() (_swig_ret RegularLimit)
	CheckWithOffset(arg2 Absl_Duration) (_swig_ret bool)
	Init()
	ExitSearch()
	UpdateLimits(arg2 Absl_Duration, arg3 int64, arg4 int64, arg5 int64)
	WallTime() (_swig_ret int64)
	Branches() (_swig_ret int64)
	Failures() (_swig_ret int64)
	Solutions() (_swig_ret int64)
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	ProgressPercent() (_swig_ret int)
	ToString() (_swig_ret string)
	Install()
	Accept(arg2 ModelVisitor)
	IsCrossed() (_swig_ret bool)
	Check() (_swig_ret bool)
	EnterSearch()
	BeginNextDecision(arg1 DecisionBuilder)
	PeriodicCheck()
	RefuteDecision(arg1 Decision)
	RestartSearch()
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	ApplyDecision(arg1 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	AcceptSolution() (_swig_ret bool)
	AtSolution() (_swig_ret bool)
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	Solver() (_swig_ret Solver)
	SwigIsSearchLimit()
	SwigGetSearchLimit() SearchLimit
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrImprovementSearchLimit uintptr

func (p SwigcptrImprovementSearchLimit) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrImprovementSearchLimit) SwigIsImprovementSearchLimit() {
}

func NewImprovementSearchLimit__SWIG_0(arg1 Solver, arg2 IntVar, arg3 bool, arg4 float64, arg5 float64, arg6 float64, arg7 int) (_swig_ret ImprovementSearchLimit) {
	var swig_r ImprovementSearchLimit
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (ImprovementSearchLimit)(SwigcptrImprovementSearchLimit(C._wrap_new_ImprovementSearchLimit__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4), C.double(_swig_i_5), C.swig_intgo(_swig_i_6))))
	return swig_r
}

func NewImprovementSearchLimit__SWIG_1(arg1 Solver, arg2 IntVarVector, arg3 Std_vector_Sl_bool_Sg_, arg4 Std_vector_Sl_double_Sg_, arg5 Std_vector_Sl_double_Sg_, arg6 float64, arg7 int) (_swig_ret ImprovementSearchLimit) {
	var swig_r ImprovementSearchLimit
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (ImprovementSearchLimit)(SwigcptrImprovementSearchLimit(C._wrap_new_ImprovementSearchLimit__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.double(_swig_i_5), C.swig_intgo(_swig_i_6))))
	return swig_r
}

func NewImprovementSearchLimit(a ...interface{}) ImprovementSearchLimit {
	argc := len(a)
	if argc == 7 {
		if _, ok := a[1].(IntVar); !ok {
			goto check_1
		}
		if _, ok := a[2].(bool); !ok {
			goto check_1
		}
		if _, ok := a[3].(float64); !ok {
			goto check_1
		}
		if _, ok := a[4].(float64); !ok {
			goto check_1
		}
		return NewImprovementSearchLimit__SWIG_0(a[0].(Solver), a[1].(IntVar), a[2].(bool), a[3].(float64), a[4].(float64), a[5].(float64), a[6].(int))
	}
check_1:
	if argc == 7 {
		return NewImprovementSearchLimit__SWIG_1(a[0].(Solver), a[1].(IntVarVector), a[2].(Std_vector_Sl_bool_Sg_), a[3].(Std_vector_Sl_double_Sg_), a[4].(Std_vector_Sl_double_Sg_), a[5].(float64), a[6].(int))
	}
	panic("No match for overloaded function call")
}

func DeleteImprovementSearchLimit(arg1 ImprovementSearchLimit) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ImprovementSearchLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrImprovementSearchLimit) Copy(arg2 SearchLimit) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ImprovementSearchLimit_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrImprovementSearchLimit) MakeClone() (_swig_ret SearchLimit) {
	var swig_r SearchLimit
	_swig_i_0 := arg1
	swig_r = (SearchLimit)(SwigcptrSearchLimit(C._wrap_ImprovementSearchLimit_MakeClone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrImprovementSearchLimit) CheckWithOffset(arg2 Absl_Duration) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_ImprovementSearchLimit_CheckWithOffset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrImprovementSearchLimit) AtSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ImprovementSearchLimit_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrImprovementSearchLimit) Init() {
	_swig_i_0 := arg1
	C._wrap_ImprovementSearchLimit_Init_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrImprovementSearchLimit) Install() {
	_swig_i_0 := arg1
	C._wrap_ImprovementSearchLimit_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrImprovementSearchLimit) IsCrossed() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ImprovementSearchLimit_IsCrossed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrImprovementSearchLimit) Check() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ImprovementSearchLimit_Check_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrImprovementSearchLimit) EnterSearch() {
	C._wrap_ImprovementSearchLimit_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) BeginNextDecision(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ImprovementSearchLimit_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrImprovementSearchLimit) PeriodicCheck() {
	C._wrap_ImprovementSearchLimit_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) RefuteDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ImprovementSearchLimit_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrImprovementSearchLimit) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ImprovementSearchLimit_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrImprovementSearchLimit) RestartSearch() {
	C._wrap_ImprovementSearchLimit_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) ExitSearch() {
	C._wrap_ImprovementSearchLimit_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ImprovementSearchLimit_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrImprovementSearchLimit) ApplyDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ImprovementSearchLimit_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrImprovementSearchLimit) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ImprovementSearchLimit_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrImprovementSearchLimit) BeginFail() {
	C._wrap_ImprovementSearchLimit_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) EndFail() {
	C._wrap_ImprovementSearchLimit_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) BeginInitialPropagation() {
	C._wrap_ImprovementSearchLimit_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) EndInitialPropagation() {
	C._wrap_ImprovementSearchLimit_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ImprovementSearchLimit_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrImprovementSearchLimit) NoMoreSolutions() {
	C._wrap_ImprovementSearchLimit_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ImprovementSearchLimit_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrImprovementSearchLimit) AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_ImprovementSearchLimit_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrImprovementSearchLimit) AcceptNeighbor() {
	C._wrap_ImprovementSearchLimit_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) AcceptUncheckedNeighbor() {
	C._wrap_ImprovementSearchLimit_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrImprovementSearchLimit) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ImprovementSearchLimit_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrImprovementSearchLimit) ProgressPercent() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ImprovementSearchLimit_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrImprovementSearchLimit) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ImprovementSearchLimit_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrImprovementSearchLimit) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_ImprovementSearchLimit_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrImprovementSearchLimit) SwigIsSearchLimit() {
}

func (p SwigcptrImprovementSearchLimit) SwigGetSearchLimit() SearchLimit {
	return SwigcptrSearchLimit(getSwigcptr(p))
}

func (p SwigcptrImprovementSearchLimit) SwigIsSearchMonitor() {
}

func (p SwigcptrImprovementSearchLimit) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrImprovementSearchLimit) SwigIsBaseObject() {
}

func (p SwigcptrImprovementSearchLimit) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type ImprovementSearchLimit interface {
	Swigcptr() uintptr
	SwigIsImprovementSearchLimit()
	Copy(arg2 SearchLimit)
	MakeClone() (_swig_ret SearchLimit)
	CheckWithOffset(arg2 Absl_Duration) (_swig_ret bool)
	AtSolution() (_swig_ret bool)
	Init()
	Install()
	IsCrossed() (_swig_ret bool)
	Check() (_swig_ret bool)
	EnterSearch()
	BeginNextDecision(arg1 DecisionBuilder)
	PeriodicCheck()
	RefuteDecision(arg1 Decision)
	ToString() (_swig_ret string)
	RestartSearch()
	ExitSearch()
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	ApplyDecision(arg1 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	AcceptSolution() (_swig_ret bool)
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	ProgressPercent() (_swig_ret int)
	Accept(arg1 ModelVisitor)
	Solver() (_swig_ret Solver)
	SwigIsSearchLimit()
	SwigGetSearchLimit() SearchLimit
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrIntervalVar uintptr

func (p SwigcptrIntervalVar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntervalVar) SwigIsIntervalVar() {
}

func GetIntervalVarKMinValidValue() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_IntervalVar_kMinValidValue_get_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

func GetIntervalVarKMaxValidValue() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_IntervalVar_kMaxValidValue_get_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

func DeleteIntervalVar(arg1 IntervalVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntervalVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntervalVar) StartMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_StartMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_StartMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) SetStartMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVar_SetStartMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_629(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) SetStartMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVar_SetStartMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_630(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) SetStartRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntervalVar_SetStartRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_631(_swig_i_1), C.swig_type_632(_swig_i_2))
}

func (arg1 SwigcptrIntervalVar) OldStartMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_OldStartMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) OldStartMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_OldStartMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) WhenStartRange__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenStartRange__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WhenStartRange__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenStartRange__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntervalVar) WhenStartRange(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenStartRange__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenStartRange__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVar) WhenStartBound__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenStartBound__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WhenStartBound__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenStartBound__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntervalVar) WhenStartBound(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenStartBound__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenStartBound__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVar) DurationMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_DurationMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) DurationMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_DurationMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) SetDurationMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVar_SetDurationMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_637(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) SetDurationMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVar_SetDurationMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_638(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) SetDurationRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntervalVar_SetDurationRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_639(_swig_i_1), C.swig_type_640(_swig_i_2))
}

func (arg1 SwigcptrIntervalVar) OldDurationMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_OldDurationMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) OldDurationMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_OldDurationMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) WhenDurationRange__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenDurationRange__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WhenDurationRange__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenDurationRange__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntervalVar) WhenDurationRange(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenDurationRange__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenDurationRange__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVar) WhenDurationBound__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenDurationBound__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WhenDurationBound__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenDurationBound__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntervalVar) WhenDurationBound(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenDurationBound__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenDurationBound__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVar) EndMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_EndMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_EndMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) SetEndMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVar_SetEndMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_645(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) SetEndMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVar_SetEndMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_646(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) SetEndRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntervalVar_SetEndRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_647(_swig_i_1), C.swig_type_648(_swig_i_2))
}

func (arg1 SwigcptrIntervalVar) OldEndMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_OldEndMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) OldEndMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVar_OldEndMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) WhenEndRange__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenEndRange__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WhenEndRange__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenEndRange__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntervalVar) WhenEndRange(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenEndRange__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenEndRange__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVar) WhenEndBound__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenEndBound__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WhenEndBound__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenEndBound__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntervalVar) WhenEndBound(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenEndBound__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenEndBound__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVar) MustBePerformed() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntervalVar_MustBePerformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) MayBePerformed() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntervalVar_MayBePerformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) CannotBePerformed() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntervalVar_CannotBePerformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) IsPerformedBound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntervalVar_IsPerformedBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) SetPerformed(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVar_SetPerformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WasPerformedBound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntervalVar_WasPerformedBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) WhenPerformedBound__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenPerformedBound__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WhenPerformedBound__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenPerformedBound__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntervalVar) WhenPerformedBound(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenPerformedBound__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenPerformedBound__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVar) WhenAnything__SWIG_0(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenAnything__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) WhenAnything__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_WhenAnything__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrIntervalVar) WhenAnything(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenAnything__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenAnything__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVar) StartExpr() (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_IntervalVar_StartExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) DurationExpr() (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_IntervalVar_DurationExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndExpr() (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_IntervalVar_EndExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) PerformedExpr() (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_IntervalVar_PerformedExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) SafeStartExpr(arg2 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_IntervalVar_SafeStartExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_651(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) SafeDurationExpr(arg2 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_IntervalVar_SafeDurationExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_652(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) SafeEndExpr(arg2 int64) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_IntervalVar_SafeEndExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_653(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVar_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVar) EndsAfterEnd(arg2 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAfterEnd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAfterStart(arg2 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAfterStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAtEnd(arg2 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAtEnd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAtStart(arg2 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAtStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAfterEnd(arg2 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAfterEnd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAfterStart(arg2 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAfterStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAtEnd(arg2 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAtEnd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAtStart(arg2 IntervalVar) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAtStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAfterEndWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAfterEndWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_654(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAfterStartWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAfterStartWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_655(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAtEndWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAtEndWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_656(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAtStartWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAtStartWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_657(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAfterEndWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAfterEndWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_658(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAfterStartWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAfterStartWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_659(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAtEndWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAtEndWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_660(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAtStartWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAtStartWithDelay_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_661(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAfter(arg2 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAfter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_662(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsAt(arg2 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsAt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_663(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) EndsBefore(arg2 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_EndsBefore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_664(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAfter(arg2 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAfter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_665(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsAt(arg2 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsAt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_666(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) StartsBefore(arg2 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_StartsBefore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_667(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) CrossesDate(arg2 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_CrossesDate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_668(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) AvoidsDate(arg2 int64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_IntervalVar_AvoidsDate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_669(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) RelaxedMax() (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_IntervalVar_RelaxedMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntervalVar) RelaxedMin() (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_IntervalVar_RelaxedMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrIntervalVar) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntervalVar_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrIntervalVar) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_IntervalVar_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrIntervalVar) FreezeQueue() {
	C._wrap_IntervalVar_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntervalVar) UnfreezeQueue() {
	C._wrap_IntervalVar_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntervalVar) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntervalVar_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntervalVar) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntervalVar_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntervalVar) ResetActionOnFail() {
	C._wrap_IntervalVar_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntervalVar) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntervalVar_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntervalVar) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntervalVar_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrIntervalVar) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_IntervalVar_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntervalVar) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IntervalVar_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntervalVar) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntervalVar_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrIntervalVar) SwigIsPropagationBaseObject() {
}

func (p SwigcptrIntervalVar) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrIntervalVar) SwigIsBaseObject() {
}

func (p SwigcptrIntervalVar) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type IntervalVar interface {
	Swigcptr() uintptr
	SwigIsIntervalVar()
	StartMin() (_swig_ret int64)
	StartMax() (_swig_ret int64)
	SetStartMin(arg2 int64)
	SetStartMax(arg2 int64)
	SetStartRange(arg2 int64, arg3 int64)
	OldStartMin() (_swig_ret int64)
	OldStartMax() (_swig_ret int64)
	WhenStartRange(a ...interface{})
	WhenStartBound(a ...interface{})
	DurationMin() (_swig_ret int64)
	DurationMax() (_swig_ret int64)
	SetDurationMin(arg2 int64)
	SetDurationMax(arg2 int64)
	SetDurationRange(arg2 int64, arg3 int64)
	OldDurationMin() (_swig_ret int64)
	OldDurationMax() (_swig_ret int64)
	WhenDurationRange(a ...interface{})
	WhenDurationBound(a ...interface{})
	EndMin() (_swig_ret int64)
	EndMax() (_swig_ret int64)
	SetEndMin(arg2 int64)
	SetEndMax(arg2 int64)
	SetEndRange(arg2 int64, arg3 int64)
	OldEndMin() (_swig_ret int64)
	OldEndMax() (_swig_ret int64)
	WhenEndRange(a ...interface{})
	WhenEndBound(a ...interface{})
	MustBePerformed() (_swig_ret bool)
	MayBePerformed() (_swig_ret bool)
	CannotBePerformed() (_swig_ret bool)
	IsPerformedBound() (_swig_ret bool)
	SetPerformed(arg2 bool)
	WasPerformedBound() (_swig_ret bool)
	WhenPerformedBound(a ...interface{})
	WhenAnything(a ...interface{})
	StartExpr() (_swig_ret IntExpr)
	DurationExpr() (_swig_ret IntExpr)
	EndExpr() (_swig_ret IntExpr)
	PerformedExpr() (_swig_ret IntExpr)
	SafeStartExpr(arg2 int64) (_swig_ret IntExpr)
	SafeDurationExpr(arg2 int64) (_swig_ret IntExpr)
	SafeEndExpr(arg2 int64) (_swig_ret IntExpr)
	Accept(arg2 ModelVisitor)
	EndsAfterEnd(arg2 IntervalVar) (_swig_ret Constraint)
	EndsAfterStart(arg2 IntervalVar) (_swig_ret Constraint)
	EndsAtEnd(arg2 IntervalVar) (_swig_ret Constraint)
	EndsAtStart(arg2 IntervalVar) (_swig_ret Constraint)
	StartsAfterEnd(arg2 IntervalVar) (_swig_ret Constraint)
	StartsAfterStart(arg2 IntervalVar) (_swig_ret Constraint)
	StartsAtEnd(arg2 IntervalVar) (_swig_ret Constraint)
	StartsAtStart(arg2 IntervalVar) (_swig_ret Constraint)
	EndsAfterEndWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint)
	EndsAfterStartWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint)
	EndsAtEndWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint)
	EndsAtStartWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint)
	StartsAfterEndWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint)
	StartsAfterStartWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint)
	StartsAtEndWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint)
	StartsAtStartWithDelay(arg2 IntervalVar, arg3 int64) (_swig_ret Constraint)
	EndsAfter(arg2 int64) (_swig_ret Constraint)
	EndsAt(arg2 int64) (_swig_ret Constraint)
	EndsBefore(arg2 int64) (_swig_ret Constraint)
	StartsAfter(arg2 int64) (_swig_ret Constraint)
	StartsAt(arg2 int64) (_swig_ret Constraint)
	StartsBefore(arg2 int64) (_swig_ret Constraint)
	CrossesDate(arg2 int64) (_swig_ret Constraint)
	AvoidsDate(arg2 int64) (_swig_ret Constraint)
	RelaxedMax() (_swig_ret IntervalVar)
	RelaxedMin() (_swig_ret IntervalVar)
	ToString() (_swig_ret string)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrSequenceVar uintptr

func (p SwigcptrSequenceVar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSequenceVar) SwigIsSequenceVar() {
}

func NewSequenceVar(arg1 Solver, arg2 IntervalVarVector, arg3 IntVarVector, arg4 string) (_swig_ret SequenceVar) {
	var swig_r SequenceVar
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (SequenceVar)(SwigcptrSequenceVar(C._wrap_new_SequenceVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_673)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func DeleteSequenceVar(arg1 SequenceVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SequenceVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSequenceVar) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SequenceVar_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSequenceVar) RankFirst(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SequenceVar_RankFirst_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSequenceVar) RankNotFirst(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SequenceVar_RankNotFirst_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSequenceVar) RankLast(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SequenceVar_RankLast_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSequenceVar) RankNotLast(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SequenceVar_RankNotLast_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSequenceVar) RankSequence(arg2 []int, arg3 []int, arg4 []int) {
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyintSliceIn(arg4)

	C._wrap_SequenceVar_RankSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_675)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_676)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_677)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
}

func (arg1 SwigcptrSequenceVar) Interval(arg2 int) (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_SequenceVar_Interval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSequenceVar) Next(arg2 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_SequenceVar_Next_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSequenceVar) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SequenceVar_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequenceVar) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SequenceVar_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrSequenceVar) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_SequenceVar_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrSequenceVar) FreezeQueue() {
	C._wrap_SequenceVar_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSequenceVar) UnfreezeQueue() {
	C._wrap_SequenceVar_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSequenceVar) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SequenceVar_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSequenceVar) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SequenceVar_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSequenceVar) ResetActionOnFail() {
	C._wrap_SequenceVar_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSequenceVar) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SequenceVar_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSequenceVar) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SequenceVar_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrSequenceVar) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SequenceVar_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSequenceVar) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SequenceVar_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSequenceVar) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SequenceVar_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrSequenceVar) SwigIsPropagationBaseObject() {
}

func (p SwigcptrSequenceVar) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrSequenceVar) SwigIsBaseObject() {
}

func (p SwigcptrSequenceVar) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type SequenceVar interface {
	Swigcptr() uintptr
	SwigIsSequenceVar()
	ToString() (_swig_ret string)
	RankFirst(arg2 int)
	RankNotFirst(arg2 int)
	RankLast(arg2 int)
	RankNotLast(arg2 int)
	RankSequence(arg2 []int, arg3 []int, arg4 []int)
	Interval(arg2 int) (_swig_ret IntervalVar)
	Next(arg2 int) (_swig_ret IntVar)
	Size() (_swig_ret int64)
	Accept(arg2 ModelVisitor)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrAssignmentElement uintptr

func (p SwigcptrAssignmentElement) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAssignmentElement) SwigIsAssignmentElement() {
}

func NewAssignmentElement() (_swig_ret AssignmentElement) {
	var swig_r AssignmentElement
	swig_r = (AssignmentElement)(SwigcptrAssignmentElement(C._wrap_new_AssignmentElement_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func (arg1 SwigcptrAssignmentElement) Activate() {
	_swig_i_0 := arg1
	C._wrap_AssignmentElement_Activate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentElement) Deactivate() {
	_swig_i_0 := arg1
	C._wrap_AssignmentElement_Deactivate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentElement) Activated() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AssignmentElement_Activated_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteAssignmentElement(arg1 AssignmentElement) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_AssignmentElement_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type AssignmentElement interface {
	Swigcptr() uintptr
	SwigIsAssignmentElement()
	Activate()
	Deactivate()
	Activated() (_swig_ret bool)
}

type SwigcptrIntVarElement uintptr

func (p SwigcptrIntVarElement) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntVarElement) SwigIsIntVarElement() {
}

func NewIntVarElement__SWIG_0() (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_new_IntVarElement__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewIntVarElement__SWIG_1(arg1 IntVar) (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_new_IntVarElement__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewIntVarElement(a ...interface{}) IntVarElement {
	argc := len(a)
	if argc == 0 {
		return NewIntVarElement__SWIG_0()
	}
	if argc == 1 {
		return NewIntVarElement__SWIG_1(a[0].(IntVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntVarElement) Reset(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVarElement_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVarElement) Clone() (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := arg1
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_IntVarElement_Clone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntVarElement) Copy(arg2 IntVarElement) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVarElement_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVarElement) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVarElement_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntVarElement) Store() {
	_swig_i_0 := arg1
	C._wrap_IntVarElement_Store_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVarElement) Restore() {
	_swig_i_0 := arg1
	C._wrap_IntVarElement_Restore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVarElement) Min() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVarElement_Min_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarElement) SetMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVarElement_SetMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_682(_swig_i_1))
}

func (arg1 SwigcptrIntVarElement) Max() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVarElement_Max_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarElement) SetMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVarElement_SetMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_684(_swig_i_1))
}

func (arg1 SwigcptrIntVarElement) Value() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntVarElement_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarElement) Bound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntVarElement_Bound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarElement) SetRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntVarElement_SetRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_686(_swig_i_1), C.swig_type_687(_swig_i_2))
}

func (arg1 SwigcptrIntVarElement) SetValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVarElement_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_688(_swig_i_1))
}

func (arg1 SwigcptrIntVarElement) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_IntVarElement_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeleteIntVarElement(arg1 IntVarElement) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntVarElement_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntVarElement) Activate() {
	C._wrap_IntVarElement_Activate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntVarElement) Deactivate() {
	C._wrap_IntVarElement_Deactivate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntVarElement) Activated() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IntVarElement_Activated_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrIntVarElement) SwigIsAssignmentElement() {
}

func (p SwigcptrIntVarElement) SwigGetAssignmentElement() AssignmentElement {
	return SwigcptrAssignmentElement(getSwigcptr(p))
}

type IntVarElement interface {
	Swigcptr() uintptr
	SwigIsIntVarElement()
	Reset(arg2 IntVar)
	Clone() (_swig_ret IntVarElement)
	Copy(arg2 IntVarElement)
	Var() (_swig_ret IntVar)
	Store()
	Restore()
	Min() (_swig_ret int64)
	SetMin(arg2 int64)
	Max() (_swig_ret int64)
	SetMax(arg2 int64)
	Value() (_swig_ret int64)
	Bound() (_swig_ret bool)
	SetRange(arg2 int64, arg3 int64)
	SetValue(arg2 int64)
	ToString() (_swig_ret string)
	Activate()
	Deactivate()
	Activated() (_swig_ret bool)
	SwigIsAssignmentElement()
	SwigGetAssignmentElement() AssignmentElement
}

type SwigcptrIntervalVarElement uintptr

func (p SwigcptrIntervalVarElement) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntervalVarElement) SwigIsIntervalVarElement() {
}

func NewIntervalVarElement__SWIG_0() (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_new_IntervalVarElement__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewIntervalVarElement__SWIG_1(arg1 IntervalVar) (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_new_IntervalVarElement__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewIntervalVarElement(a ...interface{}) IntervalVarElement {
	argc := len(a)
	if argc == 0 {
		return NewIntervalVarElement__SWIG_0()
	}
	if argc == 1 {
		return NewIntervalVarElement__SWIG_1(a[0].(IntervalVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIntervalVarElement) Reset(arg2 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVarElement_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) Clone() (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := arg1
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_IntervalVarElement_Clone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) Copy(arg2 IntervalVarElement) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntervalVarElement_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) Var() (_swig_ret IntervalVar) {
	var swig_r IntervalVar
	_swig_i_0 := arg1
	swig_r = (IntervalVar)(SwigcptrIntervalVar(C._wrap_IntervalVarElement_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) Store() {
	_swig_i_0 := arg1
	C._wrap_IntervalVarElement_Store_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntervalVarElement) Restore() {
	_swig_i_0 := arg1
	C._wrap_IntervalVarElement_Restore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntervalVarElement) StartMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_StartMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) StartMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_StartMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) StartValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_StartValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) DurationMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_DurationMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) DurationMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_DurationMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) DurationValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_DurationValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) EndMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_EndMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) EndMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_EndMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) EndValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_EndValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) PerformedMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_PerformedMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) PerformedMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_PerformedMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) PerformedValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_IntervalVarElement_PerformedValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) SetStartMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetStartMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_702(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetStartMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetStartMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_703(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetStartRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntervalVarElement_SetStartRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_704(_swig_i_1), C.swig_type_705(_swig_i_2))
}

func (arg1 SwigcptrIntervalVarElement) SetStartValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetStartValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_706(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetDurationMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetDurationMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_707(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetDurationMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetDurationMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_708(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetDurationRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntervalVarElement_SetDurationRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_709(_swig_i_1), C.swig_type_710(_swig_i_2))
}

func (arg1 SwigcptrIntervalVarElement) SetDurationValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetDurationValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_711(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetEndMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetEndMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_712(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetEndMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetEndMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_713(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetEndRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntervalVarElement_SetEndRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_714(_swig_i_1), C.swig_type_715(_swig_i_2))
}

func (arg1 SwigcptrIntervalVarElement) SetEndValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetEndValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_716(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetPerformedMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetPerformedMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_717(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetPerformedMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetPerformedMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_718(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) SetPerformedRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntervalVarElement_SetPerformedRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_719(_swig_i_1), C.swig_type_720(_swig_i_2))
}

func (arg1 SwigcptrIntervalVarElement) SetPerformedValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntervalVarElement_SetPerformedValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_721(_swig_i_1))
}

func (arg1 SwigcptrIntervalVarElement) Bound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntervalVarElement_Bound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntervalVarElement) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_IntervalVarElement_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeleteIntervalVarElement(arg1 IntervalVarElement) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntervalVarElement_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntervalVarElement) Activate() {
	C._wrap_IntervalVarElement_Activate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntervalVarElement) Deactivate() {
	C._wrap_IntervalVarElement_Deactivate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntervalVarElement) Activated() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IntervalVarElement_Activated_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrIntervalVarElement) SwigIsAssignmentElement() {
}

func (p SwigcptrIntervalVarElement) SwigGetAssignmentElement() AssignmentElement {
	return SwigcptrAssignmentElement(getSwigcptr(p))
}

type IntervalVarElement interface {
	Swigcptr() uintptr
	SwigIsIntervalVarElement()
	Reset(arg2 IntervalVar)
	Clone() (_swig_ret IntervalVarElement)
	Copy(arg2 IntervalVarElement)
	Var() (_swig_ret IntervalVar)
	Store()
	Restore()
	StartMin() (_swig_ret int64)
	StartMax() (_swig_ret int64)
	StartValue() (_swig_ret int64)
	DurationMin() (_swig_ret int64)
	DurationMax() (_swig_ret int64)
	DurationValue() (_swig_ret int64)
	EndMin() (_swig_ret int64)
	EndMax() (_swig_ret int64)
	EndValue() (_swig_ret int64)
	PerformedMin() (_swig_ret int64)
	PerformedMax() (_swig_ret int64)
	PerformedValue() (_swig_ret int64)
	SetStartMin(arg2 int64)
	SetStartMax(arg2 int64)
	SetStartRange(arg2 int64, arg3 int64)
	SetStartValue(arg2 int64)
	SetDurationMin(arg2 int64)
	SetDurationMax(arg2 int64)
	SetDurationRange(arg2 int64, arg3 int64)
	SetDurationValue(arg2 int64)
	SetEndMin(arg2 int64)
	SetEndMax(arg2 int64)
	SetEndRange(arg2 int64, arg3 int64)
	SetEndValue(arg2 int64)
	SetPerformedMin(arg2 int64)
	SetPerformedMax(arg2 int64)
	SetPerformedRange(arg2 int64, arg3 int64)
	SetPerformedValue(arg2 int64)
	Bound() (_swig_ret bool)
	ToString() (_swig_ret string)
	Activate()
	Deactivate()
	Activated() (_swig_ret bool)
	SwigIsAssignmentElement()
	SwigGetAssignmentElement() AssignmentElement
}

type SwigcptrSequenceVarElement uintptr

func (p SwigcptrSequenceVarElement) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSequenceVarElement) SwigIsSequenceVarElement() {
}

func NewSequenceVarElement__SWIG_0() (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_new_SequenceVarElement__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewSequenceVarElement__SWIG_1(arg1 SequenceVar) (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_new_SequenceVarElement__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSequenceVarElement(a ...interface{}) SequenceVarElement {
	argc := len(a)
	if argc == 0 {
		return NewSequenceVarElement__SWIG_0()
	}
	if argc == 1 {
		return NewSequenceVarElement__SWIG_1(a[0].(SequenceVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSequenceVarElement) Reset(arg2 SequenceVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SequenceVarElement_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSequenceVarElement) Clone() (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := arg1
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_SequenceVarElement_Clone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSequenceVarElement) Copy(arg2 SequenceVarElement) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SequenceVarElement_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSequenceVarElement) Var() (_swig_ret SequenceVar) {
	var swig_r SequenceVar
	_swig_i_0 := arg1
	swig_r = (SequenceVar)(SwigcptrSequenceVar(C._wrap_SequenceVarElement_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSequenceVarElement) Store() {
	_swig_i_0 := arg1
	C._wrap_SequenceVarElement_Store_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSequenceVarElement) Restore() {
	_swig_i_0 := arg1
	C._wrap_SequenceVarElement_Restore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSequenceVarElement) ForwardSequence() (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SequenceVarElement_ForwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrSequenceVarElement) BackwardSequence() (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SequenceVarElement_BackwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrSequenceVarElement) Unperformed() (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SequenceVarElement_Unperformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrSequenceVarElement) SetSequence(arg2 []int, arg3 []int, arg4 []int) {
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyintSliceIn(arg4)

	C._wrap_SequenceVarElement_SetSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_726)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_727)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_728)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
}

func (arg1 SwigcptrSequenceVarElement) SetForwardSequence(arg2 []int) {
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	C._wrap_SequenceVarElement_SetForwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_729)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func (arg1 SwigcptrSequenceVarElement) SetBackwardSequence(arg2 []int) {
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	C._wrap_SequenceVarElement_SetBackwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_730)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func (arg1 SwigcptrSequenceVarElement) SetUnperformed(arg2 []int) {
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	C._wrap_SequenceVarElement_SetUnperformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_731)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func (arg1 SwigcptrSequenceVarElement) Bound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SequenceVarElement_Bound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequenceVarElement) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SequenceVarElement_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeleteSequenceVarElement(arg1 SequenceVarElement) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SequenceVarElement_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSequenceVarElement) Activate() {
	C._wrap_SequenceVarElement_Activate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSequenceVarElement) Deactivate() {
	C._wrap_SequenceVarElement_Deactivate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSequenceVarElement) Activated() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SequenceVarElement_Activated_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrSequenceVarElement) SwigIsAssignmentElement() {
}

func (p SwigcptrSequenceVarElement) SwigGetAssignmentElement() AssignmentElement {
	return SwigcptrAssignmentElement(getSwigcptr(p))
}

type SequenceVarElement interface {
	Swigcptr() uintptr
	SwigIsSequenceVarElement()
	Reset(arg2 SequenceVar)
	Clone() (_swig_ret SequenceVarElement)
	Copy(arg2 SequenceVarElement)
	Var() (_swig_ret SequenceVar)
	Store()
	Restore()
	ForwardSequence() (_swig_ret []int)
	BackwardSequence() (_swig_ret []int)
	Unperformed() (_swig_ret []int)
	SetSequence(arg2 []int, arg3 []int, arg4 []int)
	SetForwardSequence(arg2 []int)
	SetBackwardSequence(arg2 []int)
	SetUnperformed(arg2 []int)
	Bound() (_swig_ret bool)
	ToString() (_swig_ret string)
	Activate()
	Deactivate()
	Activated() (_swig_ret bool)
	SwigIsAssignmentElement()
	SwigGetAssignmentElement() AssignmentElement
}

type SwigcptrAssignment uintptr

func (p SwigcptrAssignment) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAssignment) SwigIsAssignment() {
}

func NewAssignment__SWIG_0(arg1 Solver) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_new_Assignment__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewAssignment__SWIG_1(arg1 Assignment) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_new_Assignment__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewAssignment(a ...interface{}) Assignment {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Solver); !ok {
			goto check_1
		}
		return NewAssignment__SWIG_0(a[0].(Solver))
	}
check_1:
	if argc == 1 {
		return NewAssignment__SWIG_1(a[0].(Assignment))
	}
	panic("No match for overloaded function call")
}

func DeleteAssignment(arg1 Assignment) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Assignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignment) Clear() {
	_swig_i_0 := arg1
	C._wrap_Assignment_Clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignment) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Assignment_Empty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Assignment_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) NumIntVars() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Assignment_NumIntVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) NumIntervalVars() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Assignment_NumIntervalVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) NumSequenceVars() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Assignment_NumSequenceVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Store() {
	_swig_i_0 := arg1
	C._wrap_Assignment_Store_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignment) Restore() {
	_swig_i_0 := arg1
	C._wrap_Assignment_Restore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignment) AddObjective(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_AddObjective_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) AddObjectives(arg2 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_AddObjectives_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) ClearObjective() {
	_swig_i_0 := arg1
	C._wrap_Assignment_ClearObjective_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignment) NumObjectives() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Assignment_NumObjectives_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Objective() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Assignment_Objective_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAssignment) ObjectiveFromIndex(arg2 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Assignment_ObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignment) HasObjective() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Assignment_HasObjective_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) HasObjectiveFromIndex(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Assignment_HasObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ObjectiveMin() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Assignment_ObjectiveMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ObjectiveMax() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Assignment_ObjectiveMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ObjectiveValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Assignment_ObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ObjectiveBound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Assignment_ObjectiveBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) SetObjectiveMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Assignment_SetObjectiveMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_736(_swig_i_1))
}

func (arg1 SwigcptrAssignment) SetObjectiveMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Assignment_SetObjectiveMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_737(_swig_i_1))
}

func (arg1 SwigcptrAssignment) SetObjectiveValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Assignment_SetObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_738(_swig_i_1))
}

func (arg1 SwigcptrAssignment) SetObjectiveRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Assignment_SetObjectiveRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_739(_swig_i_1), C.swig_type_740(_swig_i_2))
}

func (arg1 SwigcptrAssignment) ObjectiveMinFromIndex(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_Assignment_ObjectiveMinFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ObjectiveMaxFromIndex(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_Assignment_ObjectiveMaxFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ObjectiveValueFromIndex(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_Assignment_ObjectiveValueFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ObjectiveBoundFromIndex(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Assignment_ObjectiveBoundFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) SetObjectiveMinFromIndex(arg2 int, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Assignment_SetObjectiveMinFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_744(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetObjectiveMaxFromIndex(arg2 int, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Assignment_SetObjectiveMaxFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_745(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetObjectiveValueFromIndex(arg2 int, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Assignment_SetObjectiveValueFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_746(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetObjectiveRangeFromIndex(arg2 int, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Assignment_SetObjectiveRangeFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_747(_swig_i_2), C.swig_type_748(_swig_i_3))
}

func (arg1 SwigcptrAssignment) Add__SWIG_0(arg2 IntVar) (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_Assignment_Add__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignment) Add__SWIG_1(arg2 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Add__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) FastAdd__SWIG_0(arg2 IntVar) (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_Assignment_FastAdd__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignment) Min(arg2 IntVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_Min_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Max(arg2 IntVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_Max_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Value(arg2 IntVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Bound(arg2 IntVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Assignment_Bound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) SetMin(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_752(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetMax(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_753(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetRange(arg2 IntVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Assignment_SetRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_754(_swig_i_2), C.swig_type_755(_swig_i_3))
}

func (arg1 SwigcptrAssignment) SetValue(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_756(_swig_i_2))
}

func (arg1 SwigcptrAssignment) Add__SWIG_2(arg2 IntervalVar) (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_Assignment_Add__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignment) Add__SWIG_3(arg2 IntervalVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Add__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) FastAdd__SWIG_1(arg2 IntervalVar) (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_Assignment_FastAdd__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignment) StartMin(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_StartMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) StartMax(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_StartMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) StartValue(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_StartValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) DurationMin(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_DurationMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) DurationMax(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_DurationMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) DurationValue(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_DurationValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) EndMin(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_EndMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) EndMax(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_EndMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) EndValue(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_EndValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) PerformedMin(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_PerformedMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) PerformedMax(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_PerformedMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) PerformedValue(arg2 IntervalVar) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int64)(C._wrap_Assignment_PerformedValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) SetStartMin(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetStartMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_769(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetStartMax(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetStartMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_770(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetStartRange(arg2 IntervalVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Assignment_SetStartRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_771(_swig_i_2), C.swig_type_772(_swig_i_3))
}

func (arg1 SwigcptrAssignment) SetStartValue(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetStartValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_773(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetDurationMin(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetDurationMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_774(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetDurationMax(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetDurationMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_775(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetDurationRange(arg2 IntervalVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Assignment_SetDurationRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_776(_swig_i_2), C.swig_type_777(_swig_i_3))
}

func (arg1 SwigcptrAssignment) SetDurationValue(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetDurationValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_778(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetEndMin(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetEndMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_779(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetEndMax(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetEndMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_780(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetEndRange(arg2 IntervalVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Assignment_SetEndRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_781(_swig_i_2), C.swig_type_782(_swig_i_3))
}

func (arg1 SwigcptrAssignment) SetEndValue(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetEndValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_783(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetPerformedMin(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetPerformedMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_784(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetPerformedMax(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetPerformedMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_785(_swig_i_2))
}

func (arg1 SwigcptrAssignment) SetPerformedRange(arg2 IntervalVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Assignment_SetPerformedRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_786(_swig_i_2), C.swig_type_787(_swig_i_3))
}

func (arg1 SwigcptrAssignment) SetPerformedValue(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Assignment_SetPerformedValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_788(_swig_i_2))
}

func (arg1 SwigcptrAssignment) Add__SWIG_4(arg2 SequenceVar) (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_Assignment_Add__SWIG_4_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignment) Add__SWIG_5(arg2 SequenceVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Add__SWIG_5_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrAssignment) Add(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		return p.Add__SWIG_0(a[0].(IntVar))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(IntVarVector); !ok {
			goto check_2
		}
		p.Add__SWIG_1(a[0].(IntVarVector))
		return 0
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(IntervalVar); !ok {
			goto check_3
		}
		return p.Add__SWIG_2(a[0].(IntervalVar))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(IntervalVarVector); !ok {
			goto check_4
		}
		p.Add__SWIG_3(a[0].(IntervalVarVector))
		return 0
	}
check_4:
	if argc == 1 {
		if _, ok := a[0].(SequenceVar); !ok {
			goto check_5
		}
		return p.Add__SWIG_4(a[0].(SequenceVar))
	}
check_5:
	if argc == 1 {
		p.Add__SWIG_5(a[0].(SequenceVarVector))
		return 0
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignment) FastAdd__SWIG_2(arg2 SequenceVar) (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_Assignment_FastAdd__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrAssignment) FastAdd(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		return p.FastAdd__SWIG_0(a[0].(IntVar))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(IntervalVar); !ok {
			goto check_2
		}
		return p.FastAdd__SWIG_1(a[0].(IntervalVar))
	}
check_2:
	if argc == 1 {
		return p.FastAdd__SWIG_2(a[0].(SequenceVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignment) ForwardSequence(arg2 SequenceVar) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_Assignment_ForwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrAssignment) BackwardSequence(arg2 SequenceVar) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_Assignment_BackwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrAssignment) Unperformed(arg2 SequenceVar) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_Assignment_Unperformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrAssignment) SetSequence(arg2 SequenceVar, arg3 []int, arg4 []int, arg5 []int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyintSliceIn(arg4)

	var _swig_i_4 []C.int

    _swig_i_4 = swigCopyintSliceIn(arg5)

	C._wrap_Assignment_SetSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_792)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_793)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_794)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_4
	}
}

func (arg1 SwigcptrAssignment) SetForwardSequence(arg2 SequenceVar, arg3 []int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	C._wrap_Assignment_SetForwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_795)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

func (arg1 SwigcptrAssignment) SetBackwardSequence(arg2 SequenceVar, arg3 []int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	C._wrap_Assignment_SetBackwardSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_796)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

func (arg1 SwigcptrAssignment) SetUnperformed(arg2 SequenceVar, arg3 []int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	C._wrap_Assignment_SetUnperformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_797)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

func (arg1 SwigcptrAssignment) Activate__SWIG_0(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Activate__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) Deactivate__SWIG_0(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Deactivate__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) Activated__SWIG_0(arg2 IntVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Assignment_Activated__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Activate__SWIG_1(arg2 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Activate__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) Deactivate__SWIG_1(arg2 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Deactivate__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) Activated__SWIG_1(arg2 IntervalVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Assignment_Activated__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Activate__SWIG_2(arg2 SequenceVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Activate__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrAssignment) Activate(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		p.Activate__SWIG_0(a[0].(IntVar))
		return
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(IntervalVar); !ok {
			goto check_2
		}
		p.Activate__SWIG_1(a[0].(IntervalVar))
		return
	}
check_2:
	if argc == 1 {
		p.Activate__SWIG_2(a[0].(SequenceVar))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignment) Deactivate__SWIG_2(arg2 SequenceVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Deactivate__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrAssignment) Deactivate(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		p.Deactivate__SWIG_0(a[0].(IntVar))
		return
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(IntervalVar); !ok {
			goto check_2
		}
		p.Deactivate__SWIG_1(a[0].(IntervalVar))
		return
	}
check_2:
	if argc == 1 {
		p.Deactivate__SWIG_2(a[0].(SequenceVar))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignment) Activated__SWIG_2(arg2 SequenceVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Assignment_Activated__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrAssignment) Activated(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		return p.Activated__SWIG_0(a[0].(IntVar))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(IntervalVar); !ok {
			goto check_2
		}
		return p.Activated__SWIG_1(a[0].(IntervalVar))
	}
check_2:
	if argc == 1 {
		return p.Activated__SWIG_2(a[0].(SequenceVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignment) ActivateObjective() {
	_swig_i_0 := arg1
	C._wrap_Assignment_ActivateObjective_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignment) DeactivateObjective() {
	_swig_i_0 := arg1
	C._wrap_Assignment_DeactivateObjective_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignment) ActivatedObjective() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Assignment_ActivatedObjective_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ActivateObjectiveFromIndex(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Assignment_ActivateObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrAssignment) DeactivateObjectiveFromIndex(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Assignment_DeactivateObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrAssignment) ActivatedObjectiveFromIndex(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Assignment_ActivatedObjectiveFromIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Assignment_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrAssignment) AreAllElementsBound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Assignment_AreAllElementsBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Contains__SWIG_0(arg2 IntVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Assignment_Contains__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Contains__SWIG_1(arg2 IntervalVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Assignment_Contains__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignment) Contains__SWIG_2(arg2 SequenceVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_Assignment_Contains__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrAssignment) Contains(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		return p.Contains__SWIG_0(a[0].(IntVar))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(IntervalVar); !ok {
			goto check_2
		}
		return p.Contains__SWIG_1(a[0].(IntervalVar))
	}
check_2:
	if argc == 1 {
		return p.Contains__SWIG_2(a[0].(SequenceVar))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignment) CopyIntersection(arg2 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_CopyIntersection_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) Copy(arg2 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Assignment_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignment) IntVarContainer() (_swig_ret AssignmentIntContainer) {
	var swig_r AssignmentIntContainer
	_swig_i_0 := arg1
	swig_r = (AssignmentIntContainer)(SwigcptrAssignmentIntContainer(C._wrap_Assignment_IntVarContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAssignment) MutableIntVarContainer() (_swig_ret AssignmentIntContainer) {
	var swig_r AssignmentIntContainer
	_swig_i_0 := arg1
	swig_r = (AssignmentIntContainer)(SwigcptrAssignmentIntContainer(C._wrap_Assignment_MutableIntVarContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAssignment) IntervalVarContainer() (_swig_ret AssignmentIntervalContainer) {
	var swig_r AssignmentIntervalContainer
	_swig_i_0 := arg1
	swig_r = (AssignmentIntervalContainer)(SwigcptrAssignmentIntervalContainer(C._wrap_Assignment_IntervalVarContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAssignment) MutableIntervalVarContainer() (_swig_ret AssignmentIntervalContainer) {
	var swig_r AssignmentIntervalContainer
	_swig_i_0 := arg1
	swig_r = (AssignmentIntervalContainer)(SwigcptrAssignmentIntervalContainer(C._wrap_Assignment_MutableIntervalVarContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAssignment) SequenceVarContainer() (_swig_ret AssignmentSequenceContainer) {
	var swig_r AssignmentSequenceContainer
	_swig_i_0 := arg1
	swig_r = (AssignmentSequenceContainer)(SwigcptrAssignmentSequenceContainer(C._wrap_Assignment_SequenceVarContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAssignment) MutableSequenceVarContainer() (_swig_ret AssignmentSequenceContainer) {
	var swig_r AssignmentSequenceContainer
	_swig_i_0 := arg1
	swig_r = (AssignmentSequenceContainer)(SwigcptrAssignmentSequenceContainer(C._wrap_Assignment_MutableSequenceVarContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrAssignment) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_Assignment_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrAssignment) FreezeQueue() {
	C._wrap_Assignment_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrAssignment) UnfreezeQueue() {
	C._wrap_Assignment_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrAssignment) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Assignment_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrAssignment) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Assignment_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrAssignment) ResetActionOnFail() {
	C._wrap_Assignment_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrAssignment) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Assignment_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrAssignment) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Assignment_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrAssignment) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Assignment_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrAssignment) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_Assignment_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrAssignment) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Assignment_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrAssignment) SwigIsPropagationBaseObject() {
}

func (p SwigcptrAssignment) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrAssignment) SwigIsBaseObject() {
}

func (p SwigcptrAssignment) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type Assignment interface {
	Swigcptr() uintptr
	SwigIsAssignment()
	Clear()
	Empty() (_swig_ret bool)
	Size() (_swig_ret int)
	NumIntVars() (_swig_ret int)
	NumIntervalVars() (_swig_ret int)
	NumSequenceVars() (_swig_ret int)
	Store()
	Restore()
	AddObjective(arg2 IntVar)
	AddObjectives(arg2 IntVarVector)
	ClearObjective()
	NumObjectives() (_swig_ret int)
	Objective() (_swig_ret IntVar)
	ObjectiveFromIndex(arg2 int) (_swig_ret IntVar)
	HasObjective() (_swig_ret bool)
	HasObjectiveFromIndex(arg2 int) (_swig_ret bool)
	ObjectiveMin() (_swig_ret int64)
	ObjectiveMax() (_swig_ret int64)
	ObjectiveValue() (_swig_ret int64)
	ObjectiveBound() (_swig_ret bool)
	SetObjectiveMin(arg2 int64)
	SetObjectiveMax(arg2 int64)
	SetObjectiveValue(arg2 int64)
	SetObjectiveRange(arg2 int64, arg3 int64)
	ObjectiveMinFromIndex(arg2 int) (_swig_ret int64)
	ObjectiveMaxFromIndex(arg2 int) (_swig_ret int64)
	ObjectiveValueFromIndex(arg2 int) (_swig_ret int64)
	ObjectiveBoundFromIndex(arg2 int) (_swig_ret bool)
	SetObjectiveMinFromIndex(arg2 int, arg3 int64)
	SetObjectiveMaxFromIndex(arg2 int, arg3 int64)
	SetObjectiveValueFromIndex(arg2 int, arg3 int64)
	SetObjectiveRangeFromIndex(arg2 int, arg3 int64, arg4 int64)
	Min(arg2 IntVar) (_swig_ret int64)
	Max(arg2 IntVar) (_swig_ret int64)
	Value(arg2 IntVar) (_swig_ret int64)
	Bound(arg2 IntVar) (_swig_ret bool)
	SetMin(arg2 IntVar, arg3 int64)
	SetMax(arg2 IntVar, arg3 int64)
	SetRange(arg2 IntVar, arg3 int64, arg4 int64)
	SetValue(arg2 IntVar, arg3 int64)
	StartMin(arg2 IntervalVar) (_swig_ret int64)
	StartMax(arg2 IntervalVar) (_swig_ret int64)
	StartValue(arg2 IntervalVar) (_swig_ret int64)
	DurationMin(arg2 IntervalVar) (_swig_ret int64)
	DurationMax(arg2 IntervalVar) (_swig_ret int64)
	DurationValue(arg2 IntervalVar) (_swig_ret int64)
	EndMin(arg2 IntervalVar) (_swig_ret int64)
	EndMax(arg2 IntervalVar) (_swig_ret int64)
	EndValue(arg2 IntervalVar) (_swig_ret int64)
	PerformedMin(arg2 IntervalVar) (_swig_ret int64)
	PerformedMax(arg2 IntervalVar) (_swig_ret int64)
	PerformedValue(arg2 IntervalVar) (_swig_ret int64)
	SetStartMin(arg2 IntervalVar, arg3 int64)
	SetStartMax(arg2 IntervalVar, arg3 int64)
	SetStartRange(arg2 IntervalVar, arg3 int64, arg4 int64)
	SetStartValue(arg2 IntervalVar, arg3 int64)
	SetDurationMin(arg2 IntervalVar, arg3 int64)
	SetDurationMax(arg2 IntervalVar, arg3 int64)
	SetDurationRange(arg2 IntervalVar, arg3 int64, arg4 int64)
	SetDurationValue(arg2 IntervalVar, arg3 int64)
	SetEndMin(arg2 IntervalVar, arg3 int64)
	SetEndMax(arg2 IntervalVar, arg3 int64)
	SetEndRange(arg2 IntervalVar, arg3 int64, arg4 int64)
	SetEndValue(arg2 IntervalVar, arg3 int64)
	SetPerformedMin(arg2 IntervalVar, arg3 int64)
	SetPerformedMax(arg2 IntervalVar, arg3 int64)
	SetPerformedRange(arg2 IntervalVar, arg3 int64, arg4 int64)
	SetPerformedValue(arg2 IntervalVar, arg3 int64)
	Add(a ...interface{}) interface{}
	FastAdd(a ...interface{}) interface{}
	ForwardSequence(arg2 SequenceVar) (_swig_ret []int)
	BackwardSequence(arg2 SequenceVar) (_swig_ret []int)
	Unperformed(arg2 SequenceVar) (_swig_ret []int)
	SetSequence(arg2 SequenceVar, arg3 []int, arg4 []int, arg5 []int)
	SetForwardSequence(arg2 SequenceVar, arg3 []int)
	SetBackwardSequence(arg2 SequenceVar, arg3 []int)
	SetUnperformed(arg2 SequenceVar, arg3 []int)
	Activate(a ...interface{})
	Deactivate(a ...interface{})
	Activated(a ...interface{}) bool
	ActivateObjective()
	DeactivateObjective()
	ActivatedObjective() (_swig_ret bool)
	ActivateObjectiveFromIndex(arg2 int)
	DeactivateObjectiveFromIndex(arg2 int)
	ActivatedObjectiveFromIndex(arg2 int) (_swig_ret bool)
	ToString() (_swig_ret string)
	AreAllElementsBound() (_swig_ret bool)
	Contains(a ...interface{}) bool
	CopyIntersection(arg2 Assignment)
	Copy(arg2 Assignment)
	IntVarContainer() (_swig_ret AssignmentIntContainer)
	MutableIntVarContainer() (_swig_ret AssignmentIntContainer)
	IntervalVarContainer() (_swig_ret AssignmentIntervalContainer)
	MutableIntervalVarContainer() (_swig_ret AssignmentIntervalContainer)
	SequenceVarContainer() (_swig_ret AssignmentSequenceContainer)
	MutableSequenceVarContainer() (_swig_ret AssignmentSequenceContainer)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

func SetAssignmentFromAssignment(arg1 Assignment, arg2 IntVarVector, arg3 Assignment, arg4 IntVarVector) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_SetAssignmentFromAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

type SwigcptrPack uintptr

func (p SwigcptrPack) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPack) SwigIsPack() {
}

func NewPack(arg1 Solver, arg2 IntVarVector, arg3 int) (_swig_ret Pack) {
	var swig_r Pack
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Pack)(SwigcptrPack(C._wrap_new_Pack_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func DeletePack(arg1 Pack) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Pack_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPack) AddWeightedSumLessOrEqualConstantDimension__SWIG_0(arg2 []int64, arg3 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Pack_AddWeightedSumLessOrEqualConstantDimension__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_801)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_802)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrPack) AddWeightedSumLessOrEqualConstantDimension__SWIG_1(arg2 RoutingTransitCallback1, arg3 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Pack_AddWeightedSumLessOrEqualConstantDimension__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_803)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrPack) AddWeightedSumLessOrEqualConstantDimension__SWIG_2(arg2 RoutingTransitCallback2, arg3 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Pack_AddWeightedSumLessOrEqualConstantDimension__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_804)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (p SwigcptrPack) AddWeightedSumLessOrEqualConstantDimension(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].([]int64); !ok {
			goto check_1
		}
		p.AddWeightedSumLessOrEqualConstantDimension__SWIG_0(a[0].([]int64), a[1].([]int64))
		return
	}
check_1:
	if argc == 2 {
		if _, ok := a[0].(SwigcptrRoutingTransitCallback1); !ok {
			goto check_2
		}
		p.AddWeightedSumLessOrEqualConstantDimension__SWIG_1(a[0].(RoutingTransitCallback1), a[1].([]int64))
		return
	}
check_2:
	if argc == 2 {
		p.AddWeightedSumLessOrEqualConstantDimension__SWIG_2(a[0].(RoutingTransitCallback2), a[1].([]int64))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPack) AddWeightedSumEqualVarDimension__SWIG_0(arg2 []int64, arg3 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Pack_AddWeightedSumEqualVarDimension__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_805)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPack) AddWeightedSumEqualVarDimension__SWIG_1(arg2 RoutingTransitCallback2, arg3 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Pack_AddWeightedSumEqualVarDimension__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrPack) AddWeightedSumEqualVarDimension(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].([]int64); !ok {
			goto check_1
		}
		p.AddWeightedSumEqualVarDimension__SWIG_0(a[0].([]int64), a[1].(IntVarVector))
		return
	}
check_1:
	if argc == 2 {
		p.AddWeightedSumEqualVarDimension__SWIG_1(a[0].(RoutingTransitCallback2), a[1].(IntVarVector))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPack) AddSumVariableWeightsLessOrEqualConstantDimension(arg2 IntVarVector, arg3 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Pack_AddSumVariableWeightsLessOrEqualConstantDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_806)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrPack) AddWeightedSumOfAssignedDimension(arg2 []int64, arg3 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Pack_AddWeightedSumOfAssignedDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_807)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPack) AddCountUsedBinDimension(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Pack_AddCountUsedBinDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPack) AddCountAssignedItemsDimension(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Pack_AddCountAssignedItemsDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPack) Post() {
	_swig_i_0 := arg1
	C._wrap_Pack_Post_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPack) ClearAll() {
	_swig_i_0 := arg1
	C._wrap_Pack_ClearAll_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPack) PropagateDelayed() {
	_swig_i_0 := arg1
	C._wrap_Pack_PropagateDelayed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPack) InitialPropagateWrapper() {
	_swig_i_0 := arg1
	C._wrap_Pack_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPack) Propagate() {
	_swig_i_0 := arg1
	C._wrap_Pack_Propagate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPack) OneDomain(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Pack_OneDomain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPack) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Pack_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPack) IsUndecided(arg2 int, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Pack_IsUndecided_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPack) SetImpossible(arg2 int, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Pack_SetImpossible_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrPack) Assign(arg2 int, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Pack_Assign_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrPack) IsAssignedStatusKnown(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Pack_IsAssignedStatusKnown_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPack) IsPossible(arg2 int, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Pack_IsPossible_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPack) AssignVar(arg2 int, arg3 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Pack_AssignVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrPack) SetAssigned(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Pack_SetAssigned_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPack) SetUnassigned(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Pack_SetUnassigned_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPack) RemoveAllPossibleFromBin(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Pack_RemoveAllPossibleFromBin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPack) AssignAllPossibleToBin(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Pack_AssignAllPossibleToBin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPack) AssignFirstPossibleToBin(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Pack_AssignFirstPossibleToBin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPack) AssignAllRemainingItems() {
	_swig_i_0 := arg1
	C._wrap_Pack_AssignAllRemainingItems_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPack) UnassignAllRemainingItems() {
	_swig_i_0 := arg1
	C._wrap_Pack_UnassignAllRemainingItems_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPack) Accept(arg2 ModelVisitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Pack_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrPack) IsCastConstraint() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_Pack_IsCastConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPack) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_Pack_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrPack) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_Pack_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrPack) FreezeQueue() {
	C._wrap_Pack_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPack) UnfreezeQueue() {
	C._wrap_Pack_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPack) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Pack_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPack) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Pack_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPack) ResetActionOnFail() {
	C._wrap_Pack_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPack) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Pack_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPack) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Pack_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrPack) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Pack_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPack) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_Pack_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPack) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Pack_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrPack) SwigIsConstraint() {
}

func (p SwigcptrPack) SwigGetConstraint() Constraint {
	return SwigcptrConstraint(getSwigcptr(p))
}

func (p SwigcptrPack) SwigIsPropagationBaseObject() {
}

func (p SwigcptrPack) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrPack) SwigIsBaseObject() {
}

func (p SwigcptrPack) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type Pack interface {
	Swigcptr() uintptr
	SwigIsPack()
	AddWeightedSumLessOrEqualConstantDimension(a ...interface{})
	AddWeightedSumEqualVarDimension(a ...interface{})
	AddSumVariableWeightsLessOrEqualConstantDimension(arg2 IntVarVector, arg3 []int64)
	AddWeightedSumOfAssignedDimension(arg2 []int64, arg3 IntVar)
	AddCountUsedBinDimension(arg2 IntVar)
	AddCountAssignedItemsDimension(arg2 IntVar)
	Post()
	ClearAll()
	PropagateDelayed()
	InitialPropagateWrapper()
	Propagate()
	OneDomain(arg2 int)
	ToString() (_swig_ret string)
	IsUndecided(arg2 int, arg3 int) (_swig_ret bool)
	SetImpossible(arg2 int, arg3 int)
	Assign(arg2 int, arg3 int)
	IsAssignedStatusKnown(arg2 int) (_swig_ret bool)
	IsPossible(arg2 int, arg3 int) (_swig_ret bool)
	AssignVar(arg2 int, arg3 int) (_swig_ret IntVar)
	SetAssigned(arg2 int)
	SetUnassigned(arg2 int)
	RemoveAllPossibleFromBin(arg2 int)
	AssignAllPossibleToBin(arg2 int)
	AssignFirstPossibleToBin(arg2 int)
	AssignAllRemainingItems()
	UnassignAllRemainingItems()
	Accept(arg2 ModelVisitor)
	IsCastConstraint() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsConstraint()
	SwigGetConstraint() Constraint
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrDisjunctiveConstraint uintptr

func (p SwigcptrDisjunctiveConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDisjunctiveConstraint) SwigIsDisjunctiveConstraint() {
}

func DeleteDisjunctiveConstraint(arg1 DisjunctiveConstraint) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_DisjunctiveConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDisjunctiveConstraint) SequenceVar() (_swig_ret SequenceVar) {
	var swig_r SequenceVar
	_swig_i_0 := arg1
	swig_r = (SequenceVar)(SwigcptrSequenceVar(C._wrap_DisjunctiveConstraint_SequenceVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDisjunctiveConstraint) SetTransitionTime(arg2 RoutingTransitCallback2) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_DisjunctiveConstraint_SetTransitionTime_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDisjunctiveConstraint) TransitionTime(arg2 int, arg3 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_DisjunctiveConstraint_TransitionTime_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (_swig_base SwigcptrDisjunctiveConstraint) Post() {
	C._wrap_DisjunctiveConstraint_Post_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrDisjunctiveConstraint) InitialPropagateWrapper() {
	C._wrap_DisjunctiveConstraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrDisjunctiveConstraint) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DisjunctiveConstraint_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrDisjunctiveConstraint) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DisjunctiveConstraint_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrDisjunctiveConstraint) IsCastConstraint() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_DisjunctiveConstraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrDisjunctiveConstraint) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_DisjunctiveConstraint_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrDisjunctiveConstraint) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_DisjunctiveConstraint_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrDisjunctiveConstraint) FreezeQueue() {
	C._wrap_DisjunctiveConstraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrDisjunctiveConstraint) UnfreezeQueue() {
	C._wrap_DisjunctiveConstraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrDisjunctiveConstraint) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DisjunctiveConstraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrDisjunctiveConstraint) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DisjunctiveConstraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrDisjunctiveConstraint) ResetActionOnFail() {
	C._wrap_DisjunctiveConstraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrDisjunctiveConstraint) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DisjunctiveConstraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrDisjunctiveConstraint) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DisjunctiveConstraint_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrDisjunctiveConstraint) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DisjunctiveConstraint_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrDisjunctiveConstraint) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_DisjunctiveConstraint_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrDisjunctiveConstraint) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DisjunctiveConstraint_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrDisjunctiveConstraint) SwigIsConstraint() {
}

func (p SwigcptrDisjunctiveConstraint) SwigGetConstraint() Constraint {
	return SwigcptrConstraint(getSwigcptr(p))
}

func (p SwigcptrDisjunctiveConstraint) SwigIsPropagationBaseObject() {
}

func (p SwigcptrDisjunctiveConstraint) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrDisjunctiveConstraint) SwigIsBaseObject() {
}

func (p SwigcptrDisjunctiveConstraint) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type DisjunctiveConstraint interface {
	Swigcptr() uintptr
	SwigIsDisjunctiveConstraint()
	SequenceVar() (_swig_ret SequenceVar)
	SetTransitionTime(arg2 RoutingTransitCallback2)
	TransitionTime(arg2 int, arg3 int) (_swig_ret int64)
	Post()
	InitialPropagateWrapper()
	ToString() (_swig_ret string)
	Accept(arg1 ModelVisitor)
	IsCastConstraint() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsConstraint()
	SwigGetConstraint() Constraint
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrSolutionPool uintptr

func (p SwigcptrSolutionPool) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSolutionPool) SwigIsSolutionPool() {
}

func DeleteSolutionPool(arg1 SolutionPool) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SolutionPool_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolutionPool) Initialize(arg2 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionPool_Initialize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionPool) RegisterNewSolution(arg2 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionPool_RegisterNewSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionPool) GetNextSolution(arg2 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SolutionPool_GetNextSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolutionPool) SyncNeeded(arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_SolutionPool_SyncNeeded_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrSolutionPool) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SolutionPool_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrSolutionPool) SwigIsBaseObject() {
}

func (p SwigcptrSolutionPool) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type SolutionPool interface {
	Swigcptr() uintptr
	SwigIsSolutionPool()
	Initialize(arg2 Assignment)
	RegisterNewSolution(arg2 Assignment)
	GetNextSolution(arg2 Assignment)
	SyncNeeded(arg2 Assignment) (_swig_ret bool)
	ToString() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrBaseIntExpr uintptr

func (p SwigcptrBaseIntExpr) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBaseIntExpr) SwigIsBaseIntExpr() {
}

func DeleteBaseIntExpr(arg1 BaseIntExpr) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_BaseIntExpr_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBaseIntExpr) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BaseIntExpr_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBaseIntExpr) CastToVar() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BaseIntExpr_CastToVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrBaseIntExpr) Min() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_BaseIntExpr_Min_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBaseIntExpr) SetMin(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_BaseIntExpr_SetMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_570(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) Max() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_BaseIntExpr_Max_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBaseIntExpr) SetMax(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_BaseIntExpr_SetMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_572(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) Range(arg1 []int64, arg2 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BaseIntExpr_Range_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), *(*C.swig_type_573)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_574)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrBaseIntExpr) SetRange(arg1 int64, arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BaseIntExpr_SetRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_575(_swig_i_0), C.swig_type_576(_swig_i_1))
}

func (_swig_base SwigcptrBaseIntExpr) SetValue(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_BaseIntExpr_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_577(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) Bound() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BaseIntExpr_Bound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBaseIntExpr) IsVar() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BaseIntExpr_IsVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBaseIntExpr) VarWithName(arg1 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BaseIntExpr_VarWithName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), *(*C.swig_type_578)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrBaseIntExpr) WhenRange__SWIG_0(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseIntExpr_WhenRange__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) WhenRange__SWIG_1(arg1 AtSolutionCallback) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseIntExpr_WhenRange__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrBaseIntExpr) WhenRange(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Demon); !ok {
			goto check_1
		}
		p.WhenRange__SWIG_0(a[0].(Demon))
		return
	}
check_1:
	if argc == 1 {
		p.WhenRange__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrBaseIntExpr) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseIntExpr_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_BaseIntExpr_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrBaseIntExpr) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_BaseIntExpr_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrBaseIntExpr) FreezeQueue() {
	C._wrap_BaseIntExpr_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrBaseIntExpr) UnfreezeQueue() {
	C._wrap_BaseIntExpr_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrBaseIntExpr) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseIntExpr_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseIntExpr_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) ResetActionOnFail() {
	C._wrap_BaseIntExpr_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrBaseIntExpr) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseIntExpr_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_BaseIntExpr_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrBaseIntExpr) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseIntExpr_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBaseIntExpr) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BaseIntExpr_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBaseIntExpr) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_BaseIntExpr_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrBaseIntExpr) SwigIsIntExpr() {
}

func (p SwigcptrBaseIntExpr) SwigGetIntExpr() IntExpr {
	return SwigcptrIntExpr(getSwigcptr(p))
}

func (p SwigcptrBaseIntExpr) SwigIsPropagationBaseObject() {
}

func (p SwigcptrBaseIntExpr) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrBaseIntExpr) SwigIsBaseObject() {
}

func (p SwigcptrBaseIntExpr) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type BaseIntExpr interface {
	Swigcptr() uintptr
	SwigIsBaseIntExpr()
	Var() (_swig_ret IntVar)
	CastToVar() (_swig_ret IntVar)
	Min() (_swig_ret int64)
	SetMin(arg1 int64)
	Max() (_swig_ret int64)
	SetMax(arg1 int64)
	Range(arg1 []int64, arg2 []int64)
	SetRange(arg1 int64, arg2 int64)
	SetValue(arg1 int64)
	Bound() (_swig_ret bool)
	IsVar() (_swig_ret bool)
	VarWithName(arg1 string) (_swig_ret IntVar)
	WhenRange(a ...interface{})
	Accept(arg1 ModelVisitor)
	ToString() (_swig_ret string)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsIntExpr()
	SwigGetIntExpr() IntExpr
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type Operations_researchVarTypes int
func _swig_getUNSPECIFIED() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_UNSPECIFIED_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var UNSPECIFIED Operations_researchVarTypes = _swig_getUNSPECIFIED()
func _swig_getDOMAIN_INT_VAR() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_DOMAIN_INT_VAR_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var DOMAIN_INT_VAR Operations_researchVarTypes = _swig_getDOMAIN_INT_VAR()
func _swig_getBOOLEAN_VAR() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_BOOLEAN_VAR_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var BOOLEAN_VAR Operations_researchVarTypes = _swig_getBOOLEAN_VAR()
func _swig_getCONST_VAR() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_CONST_VAR_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var CONST_VAR Operations_researchVarTypes = _swig_getCONST_VAR()
func _swig_getVAR_ADD_CST() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_VAR_ADD_CST_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var VAR_ADD_CST Operations_researchVarTypes = _swig_getVAR_ADD_CST()
func _swig_getVAR_TIMES_CST() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_VAR_TIMES_CST_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var VAR_TIMES_CST Operations_researchVarTypes = _swig_getVAR_TIMES_CST()
func _swig_getCST_SUB_VAR() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_CST_SUB_VAR_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var CST_SUB_VAR Operations_researchVarTypes = _swig_getCST_SUB_VAR()
func _swig_getOPP_VAR() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_OPP_VAR_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var OPP_VAR Operations_researchVarTypes = _swig_getOPP_VAR()
func _swig_getTRACE_VAR() (_swig_ret Operations_researchVarTypes) {
	var swig_r Operations_researchVarTypes
	swig_r = (Operations_researchVarTypes)(C._wrap_TRACE_VAR_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var TRACE_VAR Operations_researchVarTypes = _swig_getTRACE_VAR()
type _swig_DirectorLocalSearchOperator struct {
	SwigcptrLocalSearchOperator
	v interface{}
}

func (p *_swig_DirectorLocalSearchOperator) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrLocalSearchOperator)
}

func (p *_swig_DirectorLocalSearchOperator) SwigIsLocalSearchOperator() {
}

func (p *_swig_DirectorLocalSearchOperator) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorLocalSearchOperator(v interface{}) LocalSearchOperator {
	p := &_swig_DirectorLocalSearchOperator{0, v}
	p.SwigcptrLocalSearchOperator = SwigcptrLocalSearchOperator(C._wrap__swig_NewDirectorLocalSearchOperatorLocalSearchOperator_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorLocalSearchOperator(arg1 LocalSearchOperator) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorLocalSearchOperator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_LocalSearchOperator_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_LocalSearchOperator_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorLocalSearchOperator).SwigcptrLocalSearchOperator = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceLocalSearchOperatorToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorLocalSearchOperator) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchOperatorToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorLocalSearchOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchOperator))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorLocalSearchOperatorToString(swig_p LocalSearchOperator) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorLocalSearchOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchOperator).SwigcptrLocalSearchOperator))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorLocalSearchOperator_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchOperator_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchOperator)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceLocalSearchOperatorMakeNextNeighbor interface {
	MakeNextNeighbor(Assignment, Assignment) bool
}

func (swig_p *_swig_DirectorLocalSearchOperator) MakeNextNeighbor(delta Assignment, deltadelta Assignment) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchOperatorMakeNextNeighbor); swig_ok {
		return swig_g.MakeNextNeighbor(delta, deltadelta)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorLocalSearchOperator_callback_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchOperator_callback_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int, delta uintptr, deltadelta uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchOperator)
	swig_r = swig_p.MakeNextNeighbor(SwigcptrAssignment(delta), SwigcptrAssignment(deltadelta))
	return swig_r
}

type _swig_DirectorInterfaceLocalSearchOperatorStart interface {
	Start(Assignment)
}

func (swig_p *_swig_DirectorLocalSearchOperator) Start(assignment Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchOperatorStart); swig_ok {
		swig_g.Start(assignment)
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorLocalSearchOperator_callback_Start_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchOperator_callback_Start_constraintsolver_e5a2167dd134d32d(swig_c int, assignment uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchOperator)
	swig_p.Start(SwigcptrAssignment(assignment))
}

type _swig_DirectorInterfaceLocalSearchOperatorReset interface {
	Reset()
}

func (swig_p *_swig_DirectorLocalSearchOperator) Reset() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchOperatorReset); swig_ok {
		swig_g.Reset()
		return
	}
	C._wrap__swig_DirectorLocalSearchOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchOperator))
}

func DirectorLocalSearchOperatorReset(swig_p LocalSearchOperator) {
	C._wrap__swig_DirectorLocalSearchOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchOperator).SwigcptrLocalSearchOperator))
}

//export Swig_DirectorLocalSearchOperator_callback_Reset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchOperator_callback_Reset_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchOperator)
	swig_p.Reset()
}

type _swig_DirectorInterfaceLocalSearchOperatorHasFragments interface {
	HasFragments() bool
}

func (swig_p *_swig_DirectorLocalSearchOperator) HasFragments() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchOperatorHasFragments); swig_ok {
		return swig_g.HasFragments()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorLocalSearchOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchOperator)))
	return swig_r
}

func DirectorLocalSearchOperatorHasFragments(swig_p LocalSearchOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorLocalSearchOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchOperator).SwigcptrLocalSearchOperator)))
	return swig_r
}

//export Swig_DirectorLocalSearchOperator_callback_HasFragments_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchOperator_callback_HasFragments_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchOperator)
	swig_r = swig_p.HasFragments()
	return swig_r
}

type _swig_DirectorInterfaceLocalSearchOperatorHoldsDelta interface {
	HoldsDelta() bool
}

func (swig_p *_swig_DirectorLocalSearchOperator) HoldsDelta() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchOperatorHoldsDelta); swig_ok {
		return swig_g.HoldsDelta()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorLocalSearchOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchOperator)))
	return swig_r
}

func DirectorLocalSearchOperatorHoldsDelta(swig_p LocalSearchOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorLocalSearchOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchOperator).SwigcptrLocalSearchOperator)))
	return swig_r
}

//export Swig_DirectorLocalSearchOperator_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchOperator_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchOperator)
	swig_r = swig_p.HoldsDelta()
	return swig_r
}

type SwigcptrLocalSearchOperator uintptr

func (p SwigcptrLocalSearchOperator) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLocalSearchOperator) SwigIsLocalSearchOperator() {
}

func (p SwigcptrLocalSearchOperator) DirectorInterface() interface{} {
	return nil
}

func DeleteLocalSearchOperator(arg1 LocalSearchOperator) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LocalSearchOperator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchOperator) MakeNextNeighbor(arg2 Assignment, arg3 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_LocalSearchOperator_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperator) Start(arg2 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_LocalSearchOperator_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchOperator) Reset() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchOperator_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchOperator) HasFragments() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_LocalSearchOperator_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperator) HoldsDelta() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_LocalSearchOperator_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrLocalSearchOperator) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_LocalSearchOperator_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrLocalSearchOperator) SwigIsBaseObject() {
}

func (p SwigcptrLocalSearchOperator) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type LocalSearchOperator interface {
	Swigcptr() uintptr
	SwigIsLocalSearchOperator()
	DirectorInterface() interface{}
	MakeNextNeighbor(arg2 Assignment, arg3 Assignment) (_swig_ret bool)
	Start(arg2 Assignment)
	Reset()
	HasFragments() (_swig_ret bool)
	HoldsDelta() (_swig_ret bool)
	ToString() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrLocalSearchOperatorState uintptr

func (p SwigcptrLocalSearchOperatorState) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLocalSearchOperatorState) SwigIsLocalSearchOperatorState() {
}

func NewLocalSearchOperatorState() (_swig_ret LocalSearchOperatorState) {
	var swig_r LocalSearchOperatorState
	swig_r = (LocalSearchOperatorState)(SwigcptrLocalSearchOperatorState(C._wrap_new_LocalSearchOperatorState_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorState) SetCurrentDomainInjectiveAndKeepInverseValues(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LocalSearchOperatorState_SetCurrentDomainInjectiveAndKeepInverseValues_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchOperatorState) CandidateValue(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_LocalSearchOperatorState_CandidateValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_824(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorState) CommittedValue(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_LocalSearchOperatorState_CommittedValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_826(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorState) CheckPointValue(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_LocalSearchOperatorState_CheckPointValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_828(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorState) SetCandidateValue(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_LocalSearchOperatorState_SetCandidateValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_829(_swig_i_1), C.swig_type_830(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchOperatorState) CandidateIsActive(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_LocalSearchOperatorState_CandidateIsActive_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_831(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorState) SetCandidateActive(arg2 int64, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_LocalSearchOperatorState_SetCandidateActive_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_832(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchOperatorState) Commit() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchOperatorState_Commit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchOperatorState) CheckPoint() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchOperatorState_CheckPoint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchOperatorState) Revert(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LocalSearchOperatorState_Revert_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchOperatorState) CandidateIndicesChanged() (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_LocalSearchOperatorState_CandidateIndicesChanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorState) IncrementalIndicesChanged() (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_LocalSearchOperatorState_IncrementalIndicesChanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorState) Resize(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LocalSearchOperatorState_Resize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchOperatorState) CandidateInverseValue(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_LocalSearchOperatorState_CandidateInverseValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_836(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchOperatorState) CommittedInverseValue(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_LocalSearchOperatorState_CommittedInverseValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_838(_swig_i_1)))
	return swig_r
}

func DeleteLocalSearchOperatorState(arg1 LocalSearchOperatorState) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LocalSearchOperatorState_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type LocalSearchOperatorState interface {
	Swigcptr() uintptr
	SwigIsLocalSearchOperatorState()
	SetCurrentDomainInjectiveAndKeepInverseValues(arg2 int)
	CandidateValue(arg2 int64) (_swig_ret int64)
	CommittedValue(arg2 int64) (_swig_ret int64)
	CheckPointValue(arg2 int64) (_swig_ret int64)
	SetCandidateValue(arg2 int64, arg3 int64)
	CandidateIsActive(arg2 int64) (_swig_ret bool)
	SetCandidateActive(arg2 int64, arg3 bool)
	Commit()
	CheckPoint()
	Revert(arg2 bool)
	CandidateIndicesChanged() (_swig_ret []int64)
	IncrementalIndicesChanged() (_swig_ret []int64)
	Resize(arg2 int)
	CandidateInverseValue(arg2 int64) (_swig_ret int64)
	CommittedInverseValue(arg2 int64) (_swig_ret int64)
}

type _swig_DirectorIntVarLocalSearchOperator struct {
	SwigcptrIntVarLocalSearchOperator
	v interface{}
}

func (p *_swig_DirectorIntVarLocalSearchOperator) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrIntVarLocalSearchOperator)
}

func (p *_swig_DirectorIntVarLocalSearchOperator) SwigIsIntVarLocalSearchOperator() {
}

func (p *_swig_DirectorIntVarLocalSearchOperator) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorIntVarLocalSearchOperator__SWIG_0(v interface{}, arg1 IntVarVector, arg2 bool) IntVarLocalSearchOperator {
	p := &_swig_DirectorIntVarLocalSearchOperator{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	p.SwigcptrIntVarLocalSearchOperator = SwigcptrIntVarLocalSearchOperator(C._wrap__swig_NewDirectorIntVarLocalSearchOperatorIntVarLocalSearchOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1)))
	return p
}

func NewDirectorIntVarLocalSearchOperator__SWIG_1(v interface{}, arg1 IntVarVector) IntVarLocalSearchOperator {
	p := &_swig_DirectorIntVarLocalSearchOperator{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	p.SwigcptrIntVarLocalSearchOperator = SwigcptrIntVarLocalSearchOperator(C._wrap__swig_NewDirectorIntVarLocalSearchOperatorIntVarLocalSearchOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0)))
	return p
}

func NewDirectorIntVarLocalSearchOperator(abi interface{}, a ...interface{}) IntVarLocalSearchOperator {
	argc := len(a)
	if argc == 1 {
		return NewDirectorIntVarLocalSearchOperator__SWIG_1(abi, a[0].(IntVarVector))
	}
	if argc == 2 {
		return NewDirectorIntVarLocalSearchOperator__SWIG_0(abi, a[0].(IntVarVector), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func DeleteDirectorIntVarLocalSearchOperator(arg1 IntVarLocalSearchOperator) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorIntVarLocalSearchOperator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_IntVarLocalSearchOperator_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_IntVarLocalSearchOperator_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorIntVarLocalSearchOperatorToString(swig_p IntVarLocalSearchOperator) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorStart interface {
	Start(Assignment)
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) Start(assignment Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorStart); swig_ok {
		swig_g.Start(assignment)
		return
	}
	_swig_i_0 := getSwigcptr(assignment)
	C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator), C.uintptr_t(_swig_i_0))
}

func DirectorIntVarLocalSearchOperatorStart(swig_p IntVarLocalSearchOperator, assignment Assignment) {
	_swig_i_0 := getSwigcptr(assignment)
	C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_Start_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_Start_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_p.Start(SwigcptrAssignment(arg2))
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorReset interface {
	Reset()
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) Reset() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorReset); swig_ok {
		swig_g.Reset()
		return
	}
	C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator))
}

func DirectorIntVarLocalSearchOperatorReset(swig_p IntVarLocalSearchOperator) {
	C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator))
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_Reset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_Reset_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_p.Reset()
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorHasFragments interface {
	HasFragments() bool
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) HasFragments() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorHasFragments); swig_ok {
		return swig_g.HasFragments()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator)))
	return swig_r
}

func DirectorIntVarLocalSearchOperatorHasFragments(swig_p IntVarLocalSearchOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator)))
	return swig_r
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_HasFragments_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_HasFragments_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_r = swig_p.HasFragments()
	return swig_r
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorHoldsDelta interface {
	HoldsDelta() bool
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) HoldsDelta() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorHoldsDelta); swig_ok {
		return swig_g.HoldsDelta()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator)))
	return swig_r
}

func DirectorIntVarLocalSearchOperatorHoldsDelta(swig_p IntVarLocalSearchOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator)))
	return swig_r
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_r = swig_p.HoldsDelta()
	return swig_r
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorIsIncremental interface {
	IsIncremental() bool
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) IsIncremental() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorIsIncremental); swig_ok {
		return swig_g.IsIncremental()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator)))
	return swig_r
}

func DirectorIntVarLocalSearchOperatorIsIncremental(swig_p IntVarLocalSearchOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator)))
	return swig_r
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_IsIncremental_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_IsIncremental_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_r = swig_p.IsIncremental()
	return swig_r
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorSkipUnchanged interface {
	SkipUnchanged(int) bool
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) SkipUnchanged(index int) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorSkipUnchanged); swig_ok {
		return swig_g.SkipUnchanged(index)
	}
	var swig_r bool
	_swig_i_0 := index
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_SkipUnchanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator), C.swig_intgo(_swig_i_0)))
	return swig_r
}

func DirectorIntVarLocalSearchOperatorSkipUnchanged(swig_p IntVarLocalSearchOperator, index int) bool {
	var swig_r bool
	_swig_i_0 := index
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_SkipUnchanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator), C.swig_intgo(_swig_i_0)))
	return swig_r
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_SkipUnchanged_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_SkipUnchanged_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_r = swig_p.SkipUnchanged(arg2)
	return swig_r
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorOnStart interface {
	OnStart()
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) OnStart() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorOnStart); swig_ok {
		swig_g.OnStart()
		return
	}
	C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator))
}

func DirectorIntVarLocalSearchOperatorOnStart(swig_p IntVarLocalSearchOperator) {
	C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator))
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_OnStart_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_OnStart_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_p.OnStart()
}

type _swig_DirectorInterfaceIntVarLocalSearchOperatorMakeOneNeighbor interface {
	MakeOneNeighbor() bool
}

func (swig_p *_swig_DirectorIntVarLocalSearchOperator) MakeOneNeighbor() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchOperatorMakeOneNeighbor); swig_ok {
		return swig_g.MakeOneNeighbor()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchOperator)))
	return swig_r
}

func DirectorIntVarLocalSearchOperatorMakeOneNeighbor(swig_p IntVarLocalSearchOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchOperator_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchOperator).SwigcptrIntVarLocalSearchOperator)))
	return swig_r
}

//export Swig_DirectorIntVarLocalSearchOperator_callback_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchOperator_callback_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchOperator)
	swig_r = swig_p.MakeOneNeighbor()
	return swig_r
}

type SwigcptrIntVarLocalSearchOperator uintptr

func (p SwigcptrIntVarLocalSearchOperator) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntVarLocalSearchOperator) SwigIsIntVarLocalSearchOperator() {
}

func (p SwigcptrIntVarLocalSearchOperator) DirectorInterface() interface{} {
	return nil
}

func NewIntVarLocalSearchOperator__SWIG_0(arg1 IntVarVector, arg2 bool) (_swig_ret IntVarLocalSearchOperator) {
	var swig_r IntVarLocalSearchOperator
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (IntVarLocalSearchOperator)(SwigcptrIntVarLocalSearchOperator(C._wrap_new_IntVarLocalSearchOperator__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func NewIntVarLocalSearchOperator__SWIG_1(arg1 IntVarVector) (_swig_ret IntVarLocalSearchOperator) {
	var swig_r IntVarLocalSearchOperator
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (IntVarLocalSearchOperator)(SwigcptrIntVarLocalSearchOperator(C._wrap_new_IntVarLocalSearchOperator__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewIntVarLocalSearchOperator(a ...interface{}) IntVarLocalSearchOperator {
	argc := len(a)
	if argc == 1 {
		return NewIntVarLocalSearchOperator__SWIG_1(a[0].(IntVarVector))
	}
	if argc == 2 {
		return NewIntVarLocalSearchOperator__SWIG_0(a[0].(IntVarVector), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func DeleteIntVarLocalSearchOperator(arg1 IntVarLocalSearchOperator) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntVarLocalSearchOperator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVarLocalSearchOperator) HoldsDelta() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntVarLocalSearchOperator_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) Start(arg2 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVarLocalSearchOperator_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVarLocalSearchOperator) IsIncremental() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IntVarLocalSearchOperator_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IntVarLocalSearchOperator_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) Value(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_IntVarLocalSearchOperator_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_841(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) Var(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVarLocalSearchOperator_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_842(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) SkipUnchanged(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_IntVarLocalSearchOperator_SkipUnchanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) OldValue(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_IntVarLocalSearchOperator_OldValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_844(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) PrevValue(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_IntVarLocalSearchOperator_PrevValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_846(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) SetValue(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_IntVarLocalSearchOperator_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_847(_swig_i_1), C.swig_type_848(_swig_i_2))
}

func (arg1 SwigcptrIntVarLocalSearchOperator) Activated(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_IntVarLocalSearchOperator_Activated_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_849(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) Activate(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVarLocalSearchOperator_Activate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_850(_swig_i_1))
}

func (arg1 SwigcptrIntVarLocalSearchOperator) Deactivate(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVarLocalSearchOperator_Deactivate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_851(_swig_i_1))
}

func (arg1 SwigcptrIntVarLocalSearchOperator) ApplyChanges(arg2 Assignment, arg3 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_IntVarLocalSearchOperator_ApplyChanges_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchOperator) RevertChanges(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IntVarLocalSearchOperator_RevertChanges_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIntVarLocalSearchOperator) AddVars(arg2 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVarLocalSearchOperator_AddVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVarLocalSearchOperator) OnStart() {
	_swig_i_0 := arg1
	C._wrap_IntVarLocalSearchOperator_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrIntVarLocalSearchOperator) Reset() {
	C._wrap_IntVarLocalSearchOperator_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntVarLocalSearchOperator) HasFragments() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IntVarLocalSearchOperator_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntVarLocalSearchOperator) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntVarLocalSearchOperator_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrIntVarLocalSearchOperator) SwigIsLocalSearchOperator() {
}

func (p SwigcptrIntVarLocalSearchOperator) SwigGetLocalSearchOperator() LocalSearchOperator {
	return SwigcptrLocalSearchOperator(getSwigcptr(p))
}

func (p SwigcptrIntVarLocalSearchOperator) SwigIsBaseObject() {
}

func (p SwigcptrIntVarLocalSearchOperator) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type IntVarLocalSearchOperator interface {
	Swigcptr() uintptr
	SwigIsIntVarLocalSearchOperator()
	DirectorInterface() interface{}
	HoldsDelta() (_swig_ret bool)
	Start(arg2 Assignment)
	IsIncremental() (_swig_ret bool)
	Size() (_swig_ret int)
	Value(arg2 int64) (_swig_ret int64)
	Var(arg2 int64) (_swig_ret IntVar)
	SkipUnchanged(arg2 int) (_swig_ret bool)
	OldValue(arg2 int64) (_swig_ret int64)
	PrevValue(arg2 int64) (_swig_ret int64)
	SetValue(arg2 int64, arg3 int64)
	Activated(arg2 int64) (_swig_ret bool)
	Activate(arg2 int64)
	Deactivate(arg2 int64)
	ApplyChanges(arg2 Assignment, arg3 Assignment) (_swig_ret bool)
	RevertChanges(arg2 bool)
	AddVars(arg2 IntVarVector)
	OnStart()
	Reset()
	HasFragments() (_swig_ret bool)
	ToString() (_swig_ret string)
	SwigIsLocalSearchOperator()
	SwigGetLocalSearchOperator() LocalSearchOperator
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorBaseLns struct {
	SwigcptrBaseLns
	v interface{}
}

func (p *_swig_DirectorBaseLns) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrBaseLns)
}

func (p *_swig_DirectorBaseLns) SwigIsBaseLns() {
}

func (p *_swig_DirectorBaseLns) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorBaseLns(v interface{}, arg1 IntVarVector) BaseLns {
	p := &_swig_DirectorBaseLns{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	p.SwigcptrBaseLns = SwigcptrBaseLns(C._wrap__swig_NewDirectorBaseLnsBaseLns_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0)))
	return p
}

func DeleteDirectorBaseLns(arg1 BaseLns) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorBaseLns_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_BaseLns_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_BaseLns_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorBaseLns).SwigcptrBaseLns = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceBaseLnsToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorBaseLns) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceBaseLnsToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorBaseLns_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrBaseLns))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorBaseLnsToString(swig_p BaseLns) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorBaseLns_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorBaseLns).SwigcptrBaseLns))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorBaseLns_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorBaseLns_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorBaseLns)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceBaseLnsStart interface {
	Start(Assignment)
}

func (swig_p *_swig_DirectorBaseLns) Start(assignment Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceBaseLnsStart); swig_ok {
		swig_g.Start(assignment)
		return
	}
	_swig_i_0 := getSwigcptr(assignment)
	C._wrap__swig_DirectorBaseLns_upcall_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrBaseLns), C.uintptr_t(_swig_i_0))
}

func DirectorBaseLnsStart(swig_p BaseLns, assignment Assignment) {
	_swig_i_0 := getSwigcptr(assignment)
	C._wrap__swig_DirectorBaseLns_upcall_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorBaseLns).SwigcptrBaseLns), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorBaseLns_callback_Start_constraintsolver_e5a2167dd134d32d
func Swig_DirectorBaseLns_callback_Start_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorBaseLns)
	swig_p.Start(SwigcptrAssignment(arg2))
}

type _swig_DirectorInterfaceBaseLnsReset interface {
	Reset()
}

func (swig_p *_swig_DirectorBaseLns) Reset() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceBaseLnsReset); swig_ok {
		swig_g.Reset()
		return
	}
	C._wrap__swig_DirectorBaseLns_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrBaseLns))
}

func DirectorBaseLnsReset(swig_p BaseLns) {
	C._wrap__swig_DirectorBaseLns_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorBaseLns).SwigcptrBaseLns))
}

//export Swig_DirectorBaseLns_callback_Reset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorBaseLns_callback_Reset_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorBaseLns)
	swig_p.Reset()
}

type _swig_DirectorInterfaceBaseLnsHasFragments interface {
	HasFragments() bool
}

func (swig_p *_swig_DirectorBaseLns) HasFragments() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceBaseLnsHasFragments); swig_ok {
		return swig_g.HasFragments()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorBaseLns_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrBaseLns)))
	return swig_r
}

func DirectorBaseLnsHasFragments(swig_p BaseLns) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorBaseLns_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorBaseLns).SwigcptrBaseLns)))
	return swig_r
}

//export Swig_DirectorBaseLns_callback_HasFragments_constraintsolver_e5a2167dd134d32d
func Swig_DirectorBaseLns_callback_HasFragments_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorBaseLns)
	swig_r = swig_p.HasFragments()
	return swig_r
}

type _swig_DirectorInterfaceBaseLnsHoldsDelta interface {
	HoldsDelta() bool
}

func (swig_p *_swig_DirectorBaseLns) HoldsDelta() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceBaseLnsHoldsDelta); swig_ok {
		return swig_g.HoldsDelta()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorBaseLns_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrBaseLns)))
	return swig_r
}

func DirectorBaseLnsHoldsDelta(swig_p BaseLns) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorBaseLns_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorBaseLns).SwigcptrBaseLns)))
	return swig_r
}

//export Swig_DirectorBaseLns_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorBaseLns_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorBaseLns)
	swig_r = swig_p.HoldsDelta()
	return swig_r
}

type _swig_DirectorInterfaceBaseLnsIsIncremental interface {
	IsIncremental() bool
}

func (swig_p *_swig_DirectorBaseLns) IsIncremental() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceBaseLnsIsIncremental); swig_ok {
		return swig_g.IsIncremental()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorBaseLns_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrBaseLns)))
	return swig_r
}

func DirectorBaseLnsIsIncremental(swig_p BaseLns) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorBaseLns_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorBaseLns).SwigcptrBaseLns)))
	return swig_r
}

//export Swig_DirectorBaseLns_callback_IsIncremental_constraintsolver_e5a2167dd134d32d
func Swig_DirectorBaseLns_callback_IsIncremental_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorBaseLns)
	swig_r = swig_p.IsIncremental()
	return swig_r
}

type _swig_DirectorInterfaceBaseLnsInitFragments interface {
	InitFragments()
}

func (swig_p *_swig_DirectorBaseLns) InitFragments() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceBaseLnsInitFragments); swig_ok {
		swig_g.InitFragments()
		return
	}
	C._wrap__swig_DirectorBaseLns_upcall_InitFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrBaseLns))
}

func DirectorBaseLnsInitFragments(swig_p BaseLns) {
	C._wrap__swig_DirectorBaseLns_upcall_InitFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorBaseLns).SwigcptrBaseLns))
}

//export Swig_DirectorBaseLns_callback_InitFragments_constraintsolver_e5a2167dd134d32d
func Swig_DirectorBaseLns_callback_InitFragments_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorBaseLns)
	swig_p.InitFragments()
}

type _swig_DirectorInterfaceBaseLnsNextFragment interface {
	NextFragment() bool
}

func (swig_p *_swig_DirectorBaseLns) NextFragment() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceBaseLnsNextFragment); swig_ok {
		return swig_g.NextFragment()
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorBaseLns_callback_NextFragment_constraintsolver_e5a2167dd134d32d
func Swig_DirectorBaseLns_callback_NextFragment_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorBaseLns)
	swig_r = swig_p.NextFragment()
	return swig_r
}

type SwigcptrBaseLns uintptr

func (p SwigcptrBaseLns) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBaseLns) SwigIsBaseLns() {
}

func (p SwigcptrBaseLns) DirectorInterface() interface{} {
	return nil
}

func DeleteBaseLns(arg1 BaseLns) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_BaseLns_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBaseLns) InitFragments() {
	_swig_i_0 := arg1
	C._wrap_BaseLns_InitFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBaseLns) NextFragment() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BaseLns_NextFragment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBaseLns) AppendToFragment(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BaseLns_AppendToFragment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrBaseLns) FragmentSize() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_BaseLns_FragmentSize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBaseLns) HasFragments() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BaseLns_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) HoldsDelta() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BaseLns_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) Start(arg1 Assignment) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseLns_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBaseLns) IsIncremental() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BaseLns_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) Size() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_BaseLns_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) Value(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_BaseLns_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_855(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) Var(arg1 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BaseLns_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_856(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) SkipUnchanged(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BaseLns_SkipUnchanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) OldValue(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_BaseLns_OldValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_858(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) PrevValue(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_BaseLns_PrevValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_860(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) SetValue(arg1 int64, arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BaseLns_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_861(_swig_i_0), C.swig_type_862(_swig_i_1))
}

func (_swig_base SwigcptrBaseLns) Activated(arg1 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BaseLns_Activated_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_863(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) Activate(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_BaseLns_Activate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_864(_swig_i_0))
}

func (_swig_base SwigcptrBaseLns) Deactivate(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_BaseLns_Deactivate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_865(_swig_i_0))
}

func (_swig_base SwigcptrBaseLns) ApplyChanges(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_BaseLns_ApplyChanges_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) RevertChanges(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_BaseLns_RevertChanges_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrBaseLns) AddVars(arg1 IntVarVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BaseLns_AddVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBaseLns) OnStart() {
	C._wrap_BaseLns_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrBaseLns) MakeNextNeighbor(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_BaseLns_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrBaseLns) Reset() {
	C._wrap_BaseLns_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrBaseLns) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_BaseLns_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrBaseLns) SwigIsIntVarLocalSearchOperator() {
}

func (p SwigcptrBaseLns) SwigGetIntVarLocalSearchOperator() IntVarLocalSearchOperator {
	return SwigcptrIntVarLocalSearchOperator(getSwigcptr(p))
}

func (p SwigcptrBaseLns) SwigIsLocalSearchOperator() {
}

func (p SwigcptrBaseLns) SwigGetLocalSearchOperator() LocalSearchOperator {
	return SwigcptrLocalSearchOperator(getSwigcptr(p))
}

func (p SwigcptrBaseLns) SwigIsBaseObject() {
}

func (p SwigcptrBaseLns) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type BaseLns interface {
	Swigcptr() uintptr
	SwigIsBaseLns()
	DirectorInterface() interface{}
	InitFragments()
	NextFragment() (_swig_ret bool)
	AppendToFragment(arg2 int)
	FragmentSize() (_swig_ret int)
	HasFragments() (_swig_ret bool)
	HoldsDelta() (_swig_ret bool)
	Start(arg1 Assignment)
	IsIncremental() (_swig_ret bool)
	Size() (_swig_ret int)
	Value(arg1 int64) (_swig_ret int64)
	Var(arg1 int64) (_swig_ret IntVar)
	SkipUnchanged(arg1 int) (_swig_ret bool)
	OldValue(arg1 int64) (_swig_ret int64)
	PrevValue(arg1 int64) (_swig_ret int64)
	SetValue(arg1 int64, arg2 int64)
	Activated(arg1 int64) (_swig_ret bool)
	Activate(arg1 int64)
	Deactivate(arg1 int64)
	ApplyChanges(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	RevertChanges(arg1 bool)
	AddVars(arg1 IntVarVector)
	OnStart()
	MakeNextNeighbor(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	Reset()
	ToString() (_swig_ret string)
	SwigIsIntVarLocalSearchOperator()
	SwigGetIntVarLocalSearchOperator() IntVarLocalSearchOperator
	SwigIsLocalSearchOperator()
	SwigGetLocalSearchOperator() LocalSearchOperator
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorChangeValue struct {
	SwigcptrChangeValue
	v interface{}
}

func (p *_swig_DirectorChangeValue) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrChangeValue)
}

func (p *_swig_DirectorChangeValue) SwigIsChangeValue() {
}

func (p *_swig_DirectorChangeValue) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorChangeValue(v interface{}, arg1 IntVarVector) ChangeValue {
	p := &_swig_DirectorChangeValue{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	p.SwigcptrChangeValue = SwigcptrChangeValue(C._wrap__swig_NewDirectorChangeValueChangeValue_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0)))
	return p
}

func DeleteDirectorChangeValue(arg1 ChangeValue) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorChangeValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_ChangeValue_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_ChangeValue_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorChangeValue).SwigcptrChangeValue = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceChangeValueToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorChangeValue) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorChangeValue_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorChangeValueToString(swig_p ChangeValue) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorChangeValue_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorChangeValue_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceChangeValueStart interface {
	Start(Assignment)
}

func (swig_p *_swig_DirectorChangeValue) Start(assignment Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueStart); swig_ok {
		swig_g.Start(assignment)
		return
	}
	_swig_i_0 := getSwigcptr(assignment)
	C._wrap__swig_DirectorChangeValue_upcall_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue), C.uintptr_t(_swig_i_0))
}

func DirectorChangeValueStart(swig_p ChangeValue, assignment Assignment) {
	_swig_i_0 := getSwigcptr(assignment)
	C._wrap__swig_DirectorChangeValue_upcall_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorChangeValue_callback_Start_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_Start_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_p.Start(SwigcptrAssignment(arg2))
}

type _swig_DirectorInterfaceChangeValueReset interface {
	Reset()
}

func (swig_p *_swig_DirectorChangeValue) Reset() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueReset); swig_ok {
		swig_g.Reset()
		return
	}
	C._wrap__swig_DirectorChangeValue_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue))
}

func DirectorChangeValueReset(swig_p ChangeValue) {
	C._wrap__swig_DirectorChangeValue_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue))
}

//export Swig_DirectorChangeValue_callback_Reset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_Reset_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_p.Reset()
}

type _swig_DirectorInterfaceChangeValueHasFragments interface {
	HasFragments() bool
}

func (swig_p *_swig_DirectorChangeValue) HasFragments() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueHasFragments); swig_ok {
		return swig_g.HasFragments()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue)))
	return swig_r
}

func DirectorChangeValueHasFragments(swig_p ChangeValue) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue)))
	return swig_r
}

//export Swig_DirectorChangeValue_callback_HasFragments_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_HasFragments_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_r = swig_p.HasFragments()
	return swig_r
}

type _swig_DirectorInterfaceChangeValueHoldsDelta interface {
	HoldsDelta() bool
}

func (swig_p *_swig_DirectorChangeValue) HoldsDelta() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueHoldsDelta); swig_ok {
		return swig_g.HoldsDelta()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue)))
	return swig_r
}

func DirectorChangeValueHoldsDelta(swig_p ChangeValue) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue)))
	return swig_r
}

//export Swig_DirectorChangeValue_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_r = swig_p.HoldsDelta()
	return swig_r
}

type _swig_DirectorInterfaceChangeValueIsIncremental interface {
	IsIncremental() bool
}

func (swig_p *_swig_DirectorChangeValue) IsIncremental() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueIsIncremental); swig_ok {
		return swig_g.IsIncremental()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue)))
	return swig_r
}

func DirectorChangeValueIsIncremental(swig_p ChangeValue) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue)))
	return swig_r
}

//export Swig_DirectorChangeValue_callback_IsIncremental_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_IsIncremental_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_r = swig_p.IsIncremental()
	return swig_r
}

type _swig_DirectorInterfaceChangeValueSkipUnchanged interface {
	SkipUnchanged(int) bool
}

func (swig_p *_swig_DirectorChangeValue) SkipUnchanged(index int) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueSkipUnchanged); swig_ok {
		return swig_g.SkipUnchanged(index)
	}
	var swig_r bool
	_swig_i_0 := index
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_SkipUnchanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue), C.swig_intgo(_swig_i_0)))
	return swig_r
}

func DirectorChangeValueSkipUnchanged(swig_p ChangeValue, index int) bool {
	var swig_r bool
	_swig_i_0 := index
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_SkipUnchanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue), C.swig_intgo(_swig_i_0)))
	return swig_r
}

//export Swig_DirectorChangeValue_callback_SkipUnchanged_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_SkipUnchanged_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_r = swig_p.SkipUnchanged(arg2)
	return swig_r
}

type _swig_DirectorInterfaceChangeValueOnStart interface {
	OnStart()
}

func (swig_p *_swig_DirectorChangeValue) OnStart() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueOnStart); swig_ok {
		swig_g.OnStart()
		return
	}
	C._wrap__swig_DirectorChangeValue_upcall_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue))
}

func DirectorChangeValueOnStart(swig_p ChangeValue) {
	C._wrap__swig_DirectorChangeValue_upcall_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue))
}

//export Swig_DirectorChangeValue_callback_OnStart_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_OnStart_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_p.OnStart()
}

type _swig_DirectorInterfaceChangeValueMakeOneNeighbor interface {
	MakeOneNeighbor() bool
}

func (swig_p *_swig_DirectorChangeValue) MakeOneNeighbor() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueMakeOneNeighbor); swig_ok {
		return swig_g.MakeOneNeighbor()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrChangeValue)))
	return swig_r
}

func DirectorChangeValueMakeOneNeighbor(swig_p ChangeValue) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorChangeValue_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorChangeValue).SwigcptrChangeValue)))
	return swig_r
}

//export Swig_DirectorChangeValue_callback_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_r = swig_p.MakeOneNeighbor()
	return swig_r
}

type _swig_DirectorInterfaceChangeValueModifyValue interface {
	ModifyValue(int64, int64) int64
}

func (swig_p *_swig_DirectorChangeValue) ModifyValue(index int64, value int64) int64 {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceChangeValueModifyValue); swig_ok {
		return swig_g.ModifyValue(index, value)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorChangeValue_callback_ModifyValue_constraintsolver_e5a2167dd134d32d
func Swig_DirectorChangeValue_callback_ModifyValue_constraintsolver_e5a2167dd134d32d(swig_c int, index int64, value int64) (swig_result int64) {
	var swig_r int64
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorChangeValue)
	swig_r = swig_p.ModifyValue(index, value)
	return swig_r
}

type SwigcptrChangeValue uintptr

func (p SwigcptrChangeValue) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrChangeValue) SwigIsChangeValue() {
}

func (p SwigcptrChangeValue) DirectorInterface() interface{} {
	return nil
}

func DeleteChangeValue(arg1 ChangeValue) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ChangeValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrChangeValue) ModifyValue(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_ChangeValue_ModifyValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_869(_swig_i_1), C.swig_type_870(_swig_i_2)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) HoldsDelta() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ChangeValue_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) Start(arg1 Assignment) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ChangeValue_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrChangeValue) IsIncremental() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ChangeValue_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) Size() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ChangeValue_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) Value(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ChangeValue_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_855(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) Var(arg1 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_ChangeValue_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_856(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) SkipUnchanged(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ChangeValue_SkipUnchanged_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) OldValue(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ChangeValue_OldValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_858(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) PrevValue(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ChangeValue_PrevValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_860(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) SetValue(arg1 int64, arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ChangeValue_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_861(_swig_i_0), C.swig_type_862(_swig_i_1))
}

func (_swig_base SwigcptrChangeValue) Activated(arg1 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ChangeValue_Activated_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_863(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) Activate(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_ChangeValue_Activate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_864(_swig_i_0))
}

func (_swig_base SwigcptrChangeValue) Deactivate(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_ChangeValue_Deactivate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_865(_swig_i_0))
}

func (_swig_base SwigcptrChangeValue) ApplyChanges(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_ChangeValue_ApplyChanges_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) RevertChanges(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_ChangeValue_RevertChanges_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrChangeValue) AddVars(arg1 IntVarVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ChangeValue_AddVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrChangeValue) OnStart() {
	C._wrap_ChangeValue_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrChangeValue) MakeNextNeighbor(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_ChangeValue_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) Reset() {
	C._wrap_ChangeValue_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrChangeValue) HasFragments() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ChangeValue_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrChangeValue) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ChangeValue_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrChangeValue) SwigIsIntVarLocalSearchOperator() {
}

func (p SwigcptrChangeValue) SwigGetIntVarLocalSearchOperator() IntVarLocalSearchOperator {
	return SwigcptrIntVarLocalSearchOperator(getSwigcptr(p))
}

func (p SwigcptrChangeValue) SwigIsLocalSearchOperator() {
}

func (p SwigcptrChangeValue) SwigGetLocalSearchOperator() LocalSearchOperator {
	return SwigcptrLocalSearchOperator(getSwigcptr(p))
}

func (p SwigcptrChangeValue) SwigIsBaseObject() {
}

func (p SwigcptrChangeValue) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type ChangeValue interface {
	Swigcptr() uintptr
	SwigIsChangeValue()
	DirectorInterface() interface{}
	ModifyValue(arg2 int64, arg3 int64) (_swig_ret int64)
	HoldsDelta() (_swig_ret bool)
	Start(arg1 Assignment)
	IsIncremental() (_swig_ret bool)
	Size() (_swig_ret int)
	Value(arg1 int64) (_swig_ret int64)
	Var(arg1 int64) (_swig_ret IntVar)
	SkipUnchanged(arg1 int) (_swig_ret bool)
	OldValue(arg1 int64) (_swig_ret int64)
	PrevValue(arg1 int64) (_swig_ret int64)
	SetValue(arg1 int64, arg2 int64)
	Activated(arg1 int64) (_swig_ret bool)
	Activate(arg1 int64)
	Deactivate(arg1 int64)
	ApplyChanges(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	RevertChanges(arg1 bool)
	AddVars(arg1 IntVarVector)
	OnStart()
	MakeNextNeighbor(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	Reset()
	HasFragments() (_swig_ret bool)
	ToString() (_swig_ret string)
	SwigIsIntVarLocalSearchOperator()
	SwigGetIntVarLocalSearchOperator() IntVarLocalSearchOperator
	SwigIsLocalSearchOperator()
	SwigGetLocalSearchOperator() LocalSearchOperator
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorPathOperator struct {
	SwigcptrPathOperator
	v interface{}
}

func (p *_swig_DirectorPathOperator) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrPathOperator)
}

func (p *_swig_DirectorPathOperator) SwigIsPathOperator() {
}

func (p *_swig_DirectorPathOperator) DirectorInterface() interface{} {
	return p.v
}

func DeleteDirectorPathOperator(arg1 PathOperator) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorPathOperator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_PathOperator_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_PathOperator_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorPathOperator).SwigcptrPathOperator = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfacePathOperatorToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorPathOperator) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorPathOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorPathOperatorToString(swig_p PathOperator) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorPathOperator_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorPathOperator_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfacePathOperatorStart interface {
	Start(Assignment)
}

func (swig_p *_swig_DirectorPathOperator) Start(assignment Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorStart); swig_ok {
		swig_g.Start(assignment)
		return
	}
	_swig_i_0 := getSwigcptr(assignment)
	C._wrap__swig_DirectorPathOperator_upcall_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator), C.uintptr_t(_swig_i_0))
}

func DirectorPathOperatorStart(swig_p PathOperator, assignment Assignment) {
	_swig_i_0 := getSwigcptr(assignment)
	C._wrap__swig_DirectorPathOperator_upcall_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorPathOperator_callback_Start_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_Start_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_p.Start(SwigcptrAssignment(arg2))
}

type _swig_DirectorInterfacePathOperatorReset interface {
	Reset()
}

func (swig_p *_swig_DirectorPathOperator) Reset() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorReset); swig_ok {
		swig_g.Reset()
		return
	}
	C._wrap__swig_DirectorPathOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator))
}

func DirectorPathOperatorReset(swig_p PathOperator) {
	C._wrap__swig_DirectorPathOperator_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator))
}

//export Swig_DirectorPathOperator_callback_Reset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_Reset_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_p.Reset()
}

type _swig_DirectorInterfacePathOperatorHasFragments interface {
	HasFragments() bool
}

func (swig_p *_swig_DirectorPathOperator) HasFragments() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorHasFragments); swig_ok {
		return swig_g.HasFragments()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator)))
	return swig_r
}

func DirectorPathOperatorHasFragments(swig_p PathOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_HasFragments_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_HasFragments_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.HasFragments()
	return swig_r
}

type _swig_DirectorInterfacePathOperatorHoldsDelta interface {
	HoldsDelta() bool
}

func (swig_p *_swig_DirectorPathOperator) HoldsDelta() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorHoldsDelta); swig_ok {
		return swig_g.HoldsDelta()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator)))
	return swig_r
}

func DirectorPathOperatorHoldsDelta(swig_p PathOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_HoldsDelta_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.HoldsDelta()
	return swig_r
}

type _swig_DirectorInterfacePathOperatorIsIncremental interface {
	IsIncremental() bool
}

func (swig_p *_swig_DirectorPathOperator) IsIncremental() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorIsIncremental); swig_ok {
		return swig_g.IsIncremental()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator)))
	return swig_r
}

func DirectorPathOperatorIsIncremental(swig_p PathOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_IsIncremental_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_IsIncremental_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.IsIncremental()
	return swig_r
}

type _swig_DirectorInterfacePathOperatorOnStart interface {
	OnStart()
}

func (swig_p *_swig_DirectorPathOperator) OnStart() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorOnStart); swig_ok {
		swig_g.OnStart()
		return
	}
	C._wrap__swig_DirectorPathOperator_upcall_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator))
}

func DirectorPathOperatorOnStart(swig_p PathOperator) {
	C._wrap__swig_DirectorPathOperator_upcall_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator))
}

//export Swig_DirectorPathOperator_callback_OnStart_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_OnStart_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_p.OnStart()
}

type _swig_DirectorInterfacePathOperatorMakeOneNeighbor interface {
	MakeOneNeighbor() bool
}

func (swig_p *_swig_DirectorPathOperator) MakeOneNeighbor() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorMakeOneNeighbor); swig_ok {
		return swig_g.MakeOneNeighbor()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator)))
	return swig_r
}

func DirectorPathOperatorMakeOneNeighbor(swig_p PathOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_MakeOneNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.MakeOneNeighbor()
	return swig_r
}

type _swig_DirectorInterfacePathOperatorMakeNeighbor interface {
	MakeNeighbor() bool
}

func (swig_p *_swig_DirectorPathOperator) MakeNeighbor() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorMakeNeighbor); swig_ok {
		return swig_g.MakeNeighbor()
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorPathOperator_callback_MakeNeighbor_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_MakeNeighbor_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.MakeNeighbor()
	return swig_r
}

type _swig_DirectorInterfacePathOperatorOnNodeInitialization interface {
	OnNodeInitialization()
}

func (swig_p *_swig_DirectorPathOperator) OnNodeInitialization() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorOnNodeInitialization); swig_ok {
		swig_g.OnNodeInitialization()
		return
	}
	C._wrap__swig_DirectorPathOperator_upcall_OnNodeInitialization_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator))
}

func DirectorPathOperatorOnNodeInitialization(swig_p PathOperator) {
	C._wrap__swig_DirectorPathOperator_upcall_OnNodeInitialization_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator))
}

//export Swig_DirectorPathOperator_callback_OnNodeInitialization_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_OnNodeInitialization_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_p.OnNodeInitialization()
}

type _swig_DirectorInterfacePathOperatorRestartAtPathStartOnSynchronize interface {
	RestartAtPathStartOnSynchronize() bool
}

func (swig_p *_swig_DirectorPathOperator) RestartAtPathStartOnSynchronize() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorRestartAtPathStartOnSynchronize); swig_ok {
		return swig_g.RestartAtPathStartOnSynchronize()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_RestartAtPathStartOnSynchronize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator)))
	return swig_r
}

func DirectorPathOperatorRestartAtPathStartOnSynchronize(swig_p PathOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_RestartAtPathStartOnSynchronize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_RestartAtPathStartOnSynchronize_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_RestartAtPathStartOnSynchronize_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.RestartAtPathStartOnSynchronize()
	return swig_r
}

type _swig_DirectorInterfacePathOperatorOnSamePathAsPreviousBase interface {
	OnSamePathAsPreviousBase(int64) bool
}

func (swig_p *_swig_DirectorPathOperator) OnSamePathAsPreviousBase(base_index int64) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorOnSamePathAsPreviousBase); swig_ok {
		return swig_g.OnSamePathAsPreviousBase(base_index)
	}
	var swig_r bool
	_swig_i_0 := base_index
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_OnSamePathAsPreviousBase_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator), C.swig_type_876(_swig_i_0)))
	return swig_r
}

func DirectorPathOperatorOnSamePathAsPreviousBase(swig_p PathOperator, base_index int64) bool {
	var swig_r bool
	_swig_i_0 := base_index
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_OnSamePathAsPreviousBase_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator), C.swig_type_876(_swig_i_0)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_OnSamePathAsPreviousBase_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_OnSamePathAsPreviousBase_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 int64) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.OnSamePathAsPreviousBase(arg2)
	return swig_r
}

type _swig_DirectorInterfacePathOperatorGetBaseNodeRestartPosition interface {
	GetBaseNodeRestartPosition(int) int64
}

func (swig_p *_swig_DirectorPathOperator) GetBaseNodeRestartPosition(base_index int) int64 {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorGetBaseNodeRestartPosition); swig_ok {
		return swig_g.GetBaseNodeRestartPosition(base_index)
	}
	var swig_r int64
	_swig_i_0 := base_index
	swig_r = (int64)(C._wrap__swig_DirectorPathOperator_upcall_GetBaseNodeRestartPosition_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator), C.swig_intgo(_swig_i_0)))
	return swig_r
}

func DirectorPathOperatorGetBaseNodeRestartPosition(swig_p PathOperator, base_index int) int64 {
	var swig_r int64
	_swig_i_0 := base_index
	swig_r = (int64)(C._wrap__swig_DirectorPathOperator_upcall_GetBaseNodeRestartPosition_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator), C.swig_intgo(_swig_i_0)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_GetBaseNodeRestartPosition_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_GetBaseNodeRestartPosition_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 int) (swig_result int64) {
	var swig_r int64
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.GetBaseNodeRestartPosition(arg2)
	return swig_r
}

type _swig_DirectorInterfacePathOperatorSetNextBaseToIncrement interface {
	SetNextBaseToIncrement(int64)
}

func (swig_p *_swig_DirectorPathOperator) SetNextBaseToIncrement(base_index int64) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorSetNextBaseToIncrement); swig_ok {
		swig_g.SetNextBaseToIncrement(base_index)
		return
	}
	_swig_i_0 := base_index
	C._wrap__swig_DirectorPathOperator_upcall_SetNextBaseToIncrement_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator), C.swig_type_878(_swig_i_0))
}

func DirectorPathOperatorSetNextBaseToIncrement(swig_p PathOperator, base_index int64) {
	_swig_i_0 := base_index
	C._wrap__swig_DirectorPathOperator_upcall_SetNextBaseToIncrement_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator), C.swig_type_878(_swig_i_0))
}

//export Swig_DirectorPathOperator_callback_SetNextBaseToIncrement_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_SetNextBaseToIncrement_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 int64) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_p.SetNextBaseToIncrement(arg2)
}

type _swig_DirectorInterfacePathOperatorConsiderAlternatives interface {
	ConsiderAlternatives(int64) bool
}

func (swig_p *_swig_DirectorPathOperator) ConsiderAlternatives(base_index int64) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorConsiderAlternatives); swig_ok {
		return swig_g.ConsiderAlternatives(base_index)
	}
	var swig_r bool
	_swig_i_0 := base_index
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_ConsiderAlternatives_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator), C.swig_type_879(_swig_i_0)))
	return swig_r
}

func DirectorPathOperatorConsiderAlternatives(swig_p PathOperator, base_index int64) bool {
	var swig_r bool
	_swig_i_0 := base_index
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_ConsiderAlternatives_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator), C.swig_type_879(_swig_i_0)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_ConsiderAlternatives_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_ConsiderAlternatives_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 int64) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.ConsiderAlternatives(arg2)
	return swig_r
}

type _swig_DirectorInterfacePathOperatorInitPosition interface {
	InitPosition() bool
}

func (swig_p *_swig_DirectorPathOperator) InitPosition() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfacePathOperatorInitPosition); swig_ok {
		return swig_g.InitPosition()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_InitPosition_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrPathOperator)))
	return swig_r
}

func DirectorPathOperatorInitPosition(swig_p PathOperator) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorPathOperator_upcall_InitPosition_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorPathOperator).SwigcptrPathOperator)))
	return swig_r
}

//export Swig_DirectorPathOperator_callback_InitPosition_constraintsolver_e5a2167dd134d32d
func Swig_DirectorPathOperator_callback_InitPosition_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorPathOperator)
	swig_r = swig_p.InitPosition()
	return swig_r
}

type SwigcptrPathOperator uintptr

func (p SwigcptrPathOperator) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPathOperator) SwigIsPathOperator() {
}

func (p SwigcptrPathOperator) DirectorInterface() interface{} {
	return nil
}

func DeletePathOperator(arg1 PathOperator) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_PathOperator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPathOperator) MakeNeighbor() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PathOperator_MakeNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPathOperator) Reset() {
	_swig_i_0 := arg1
	C._wrap_PathOperator_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPathOperator) Prev(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_PathOperator_Prev_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_881(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) HoldsDelta() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_PathOperator_HoldsDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) Start(arg1 Assignment) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_PathOperator_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPathOperator) IsIncremental() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_PathOperator_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) Size() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_PathOperator_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) Value(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_PathOperator_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_855(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) Var(arg1 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_PathOperator_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_856(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) OldValue(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_PathOperator_OldValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_858(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) PrevValue(arg1 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_PathOperator_PrevValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_860(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) SetValue(arg1 int64, arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PathOperator_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_861(_swig_i_0), C.swig_type_862(_swig_i_1))
}

func (_swig_base SwigcptrPathOperator) Activated(arg1 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PathOperator_Activated_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_863(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) Activate(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_PathOperator_Activate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_864(_swig_i_0))
}

func (_swig_base SwigcptrPathOperator) Deactivate(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_PathOperator_Deactivate_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_865(_swig_i_0))
}

func (_swig_base SwigcptrPathOperator) ApplyChanges(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_PathOperator_ApplyChanges_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) RevertChanges(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_PathOperator_RevertChanges_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrPathOperator) AddVars(arg1 IntVarVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_PathOperator_AddVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPathOperator) OnStart() {
	C._wrap_PathOperator_OnStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPathOperator) MakeNextNeighbor(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_PathOperator_MakeNextNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) HasFragments() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_PathOperator_HasFragments_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPathOperator) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_PathOperator_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrPathOperator) SwigIsIntVarLocalSearchOperator() {
}

func (p SwigcptrPathOperator) SwigGetIntVarLocalSearchOperator() IntVarLocalSearchOperator {
	return SwigcptrIntVarLocalSearchOperator(getSwigcptr(p))
}

func (p SwigcptrPathOperator) SwigIsLocalSearchOperator() {
}

func (p SwigcptrPathOperator) SwigGetLocalSearchOperator() LocalSearchOperator {
	return SwigcptrLocalSearchOperator(getSwigcptr(p))
}

func (p SwigcptrPathOperator) SwigIsBaseObject() {
}

func (p SwigcptrPathOperator) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type PathOperator interface {
	Swigcptr() uintptr
	SwigIsPathOperator()
	DirectorInterface() interface{}
	MakeNeighbor() (_swig_ret bool)
	Reset()
	Prev(arg2 int64) (_swig_ret int64)
	HoldsDelta() (_swig_ret bool)
	Start(arg1 Assignment)
	IsIncremental() (_swig_ret bool)
	Size() (_swig_ret int)
	Value(arg1 int64) (_swig_ret int64)
	Var(arg1 int64) (_swig_ret IntVar)
	OldValue(arg1 int64) (_swig_ret int64)
	PrevValue(arg1 int64) (_swig_ret int64)
	SetValue(arg1 int64, arg2 int64)
	Activated(arg1 int64) (_swig_ret bool)
	Activate(arg1 int64)
	Deactivate(arg1 int64)
	ApplyChanges(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	RevertChanges(arg1 bool)
	AddVars(arg1 IntVarVector)
	OnStart()
	MakeNextNeighbor(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	HasFragments() (_swig_ret bool)
	ToString() (_swig_ret string)
	SwigIsIntVarLocalSearchOperator()
	SwigGetIntVarLocalSearchOperator() IntVarLocalSearchOperator
	SwigIsLocalSearchOperator()
	SwigGetLocalSearchOperator() LocalSearchOperator
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorLocalSearchFilter struct {
	SwigcptrLocalSearchFilter
	v interface{}
}

func (p *_swig_DirectorLocalSearchFilter) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrLocalSearchFilter)
}

func (p *_swig_DirectorLocalSearchFilter) SwigIsLocalSearchFilter() {
}

func (p *_swig_DirectorLocalSearchFilter) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorLocalSearchFilter(v interface{}) LocalSearchFilter {
	p := &_swig_DirectorLocalSearchFilter{0, v}
	p.SwigcptrLocalSearchFilter = SwigcptrLocalSearchFilter(C._wrap__swig_NewDirectorLocalSearchFilterLocalSearchFilter_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorLocalSearchFilter(arg1 LocalSearchFilter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorLocalSearchFilter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_LocalSearchFilter_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_LocalSearchFilter_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceLocalSearchFilterToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorLocalSearchFilter) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorLocalSearchFilter_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchFilter))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorLocalSearchFilterToString(swig_p LocalSearchFilter) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorLocalSearchFilter_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorLocalSearchFilter_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceLocalSearchFilterRelax interface {
	Relax(Assignment, Assignment)
}

func (swig_p *_swig_DirectorLocalSearchFilter) Relax(delta Assignment, deltadelta Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterRelax); swig_ok {
		swig_g.Relax(delta, deltadelta)
		return
	}
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	C._wrap__swig_DirectorLocalSearchFilter_upcall_Relax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchFilter), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorLocalSearchFilterRelax(swig_p LocalSearchFilter, delta Assignment, deltadelta Assignment) {
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	C._wrap__swig_DirectorLocalSearchFilter_upcall_Relax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorLocalSearchFilter_callback_Relax_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_Relax_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_p.Relax(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
}

type _swig_DirectorInterfaceLocalSearchFilterCommit interface {
	Commit(Assignment, Assignment)
}

func (swig_p *_swig_DirectorLocalSearchFilter) Commit(delta Assignment, deltadelta Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterCommit); swig_ok {
		swig_g.Commit(delta, deltadelta)
		return
	}
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	C._wrap__swig_DirectorLocalSearchFilter_upcall_Commit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchFilter), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorLocalSearchFilterCommit(swig_p LocalSearchFilter, delta Assignment, deltadelta Assignment) {
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	C._wrap__swig_DirectorLocalSearchFilter_upcall_Commit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorLocalSearchFilter_callback_Commit_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_Commit_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_p.Commit(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
}

type _swig_DirectorInterfaceLocalSearchFilterAccept interface {
	Accept(Assignment, Assignment, int64, int64) bool
}

func (swig_p *_swig_DirectorLocalSearchFilter) Accept(delta Assignment, deltadelta Assignment, objective_min int64, objective_max int64) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterAccept); swig_ok {
		return swig_g.Accept(delta, deltadelta, objective_min, objective_max)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorLocalSearchFilter_callback_Accept_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_Accept_constraintsolver_e5a2167dd134d32d(swig_c int, delta uintptr, deltadelta uintptr, objective_min int64, objective_max int64) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_r = swig_p.Accept(SwigcptrAssignment(delta), SwigcptrAssignment(deltadelta), objective_min, objective_max)
	return swig_r
}

type _swig_DirectorInterfaceLocalSearchFilterIsIncremental interface {
	IsIncremental() bool
}

func (swig_p *_swig_DirectorLocalSearchFilter) IsIncremental() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterIsIncremental); swig_ok {
		return swig_g.IsIncremental()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorLocalSearchFilter_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchFilter)))
	return swig_r
}

func DirectorLocalSearchFilterIsIncremental(swig_p LocalSearchFilter) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorLocalSearchFilter_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter)))
	return swig_r
}

//export Swig_DirectorLocalSearchFilter_callback_IsIncremental_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_IsIncremental_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_r = swig_p.IsIncremental()
	return swig_r
}

type _swig_DirectorInterfaceLocalSearchFilterSynchronize interface {
	Synchronize(Assignment, Assignment)
}

func (swig_p *_swig_DirectorLocalSearchFilter) Synchronize(assignment Assignment, delta Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterSynchronize); swig_ok {
		swig_g.Synchronize(assignment, delta)
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorLocalSearchFilter_callback_Synchronize_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_Synchronize_constraintsolver_e5a2167dd134d32d(swig_c int, assignment uintptr, delta uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_p.Synchronize(SwigcptrAssignment(assignment), SwigcptrAssignment(delta))
}

type _swig_DirectorInterfaceLocalSearchFilterRevert interface {
	Revert()
}

func (swig_p *_swig_DirectorLocalSearchFilter) Revert() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterRevert); swig_ok {
		swig_g.Revert()
		return
	}
	C._wrap__swig_DirectorLocalSearchFilter_upcall_Revert_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchFilter))
}

func DirectorLocalSearchFilterRevert(swig_p LocalSearchFilter) {
	C._wrap__swig_DirectorLocalSearchFilter_upcall_Revert_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter))
}

//export Swig_DirectorLocalSearchFilter_callback_Revert_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_Revert_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_p.Revert()
}

type _swig_DirectorInterfaceLocalSearchFilterReset interface {
	Reset()
}

func (swig_p *_swig_DirectorLocalSearchFilter) Reset() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterReset); swig_ok {
		swig_g.Reset()
		return
	}
	C._wrap__swig_DirectorLocalSearchFilter_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchFilter))
}

func DirectorLocalSearchFilterReset(swig_p LocalSearchFilter) {
	C._wrap__swig_DirectorLocalSearchFilter_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter))
}

//export Swig_DirectorLocalSearchFilter_callback_Reset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_Reset_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_p.Reset()
}

type _swig_DirectorInterfaceLocalSearchFilterGetSynchronizedObjectiveValue interface {
	GetSynchronizedObjectiveValue() int64
}

func (swig_p *_swig_DirectorLocalSearchFilter) GetSynchronizedObjectiveValue() int64 {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterGetSynchronizedObjectiveValue); swig_ok {
		return swig_g.GetSynchronizedObjectiveValue()
	}
	var swig_r int64
	swig_r = (int64)(C._wrap__swig_DirectorLocalSearchFilter_upcall_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchFilter)))
	return swig_r
}

func DirectorLocalSearchFilterGetSynchronizedObjectiveValue(swig_p LocalSearchFilter) int64 {
	var swig_r int64
	swig_r = (int64)(C._wrap__swig_DirectorLocalSearchFilter_upcall_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter)))
	return swig_r
}

//export Swig_DirectorLocalSearchFilter_callback_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int64) {
	var swig_r int64
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_r = swig_p.GetSynchronizedObjectiveValue()
	return swig_r
}

type _swig_DirectorInterfaceLocalSearchFilterGetAcceptedObjectiveValue interface {
	GetAcceptedObjectiveValue() int64
}

func (swig_p *_swig_DirectorLocalSearchFilter) GetAcceptedObjectiveValue() int64 {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLocalSearchFilterGetAcceptedObjectiveValue); swig_ok {
		return swig_g.GetAcceptedObjectiveValue()
	}
	var swig_r int64
	swig_r = (int64)(C._wrap__swig_DirectorLocalSearchFilter_upcall_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrLocalSearchFilter)))
	return swig_r
}

func DirectorLocalSearchFilterGetAcceptedObjectiveValue(swig_p LocalSearchFilter) int64 {
	var swig_r int64
	swig_r = (int64)(C._wrap__swig_DirectorLocalSearchFilter_upcall_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorLocalSearchFilter).SwigcptrLocalSearchFilter)))
	return swig_r
}

//export Swig_DirectorLocalSearchFilter_callback_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d
func Swig_DirectorLocalSearchFilter_callback_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int64) {
	var swig_r int64
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLocalSearchFilter)
	swig_r = swig_p.GetAcceptedObjectiveValue()
	return swig_r
}

type SwigcptrLocalSearchFilter uintptr

func (p SwigcptrLocalSearchFilter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLocalSearchFilter) SwigIsLocalSearchFilter() {
}

func (p SwigcptrLocalSearchFilter) DirectorInterface() interface{} {
	return nil
}

func (arg1 SwigcptrLocalSearchFilter) Relax(arg2 Assignment, arg3 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_LocalSearchFilter_Relax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchFilter) Commit(arg2 Assignment, arg3 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_LocalSearchFilter_Commit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchFilter) Accept(arg2 Assignment, arg3 Assignment, arg4 int64, arg5 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_LocalSearchFilter_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_889(_swig_i_3), C.swig_type_890(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilter) IsIncremental() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_LocalSearchFilter_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilter) Synchronize(arg2 Assignment, arg3 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_LocalSearchFilter_Synchronize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchFilter) Revert() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchFilter_Revert_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchFilter) Reset() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchFilter_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchFilter) GetSynchronizedObjectiveValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LocalSearchFilter_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilter) GetAcceptedObjectiveValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LocalSearchFilter_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteLocalSearchFilter(arg1 LocalSearchFilter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LocalSearchFilter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLocalSearchFilter) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_LocalSearchFilter_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrLocalSearchFilter) SwigIsBaseObject() {
}

func (p SwigcptrLocalSearchFilter) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type LocalSearchFilter interface {
	Swigcptr() uintptr
	SwigIsLocalSearchFilter()
	DirectorInterface() interface{}
	Relax(arg2 Assignment, arg3 Assignment)
	Commit(arg2 Assignment, arg3 Assignment)
	Accept(arg2 Assignment, arg3 Assignment, arg4 int64, arg5 int64) (_swig_ret bool)
	IsIncremental() (_swig_ret bool)
	Synchronize(arg2 Assignment, arg3 Assignment)
	Revert()
	Reset()
	GetSynchronizedObjectiveValue() (_swig_ret int64)
	GetAcceptedObjectiveValue() (_swig_ret int64)
	ToString() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrLocalSearchFilterManager uintptr

func (p SwigcptrLocalSearchFilterManager) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLocalSearchFilterManager) SwigIsLocalSearchFilterManager() {
}

type Operations_researchLocalSearchFilterManagerFilterEventType int
func _swig_getLocalSearchFilterManager_kAccept_LocalSearchFilterManager() (_swig_ret Operations_researchLocalSearchFilterManagerFilterEventType) {
	var swig_r Operations_researchLocalSearchFilterManagerFilterEventType
	swig_r = (Operations_researchLocalSearchFilterManagerFilterEventType)(C._wrap_kAccept_LocalSearchFilterManager_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var LocalSearchFilterManagerKAccept Operations_researchLocalSearchFilterManagerFilterEventType = _swig_getLocalSearchFilterManager_kAccept_LocalSearchFilterManager()
func _swig_getLocalSearchFilterManager_kRelax_LocalSearchFilterManager() (_swig_ret Operations_researchLocalSearchFilterManagerFilterEventType) {
	var swig_r Operations_researchLocalSearchFilterManagerFilterEventType
	swig_r = (Operations_researchLocalSearchFilterManagerFilterEventType)(C._wrap_kRelax_LocalSearchFilterManager_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var LocalSearchFilterManagerKRelax Operations_researchLocalSearchFilterManagerFilterEventType = _swig_getLocalSearchFilterManager_kRelax_LocalSearchFilterManager()
func (arg1 SwigcptrLocalSearchFilterManager) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_LocalSearchFilterManager_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewLocalSearchFilterManager__SWIG_0(arg1 Std_vector_Sl_operations_research_LocalSearchFilterManager_FilterEvent_Sg_) (_swig_ret LocalSearchFilterManager) {
	var swig_r LocalSearchFilterManager
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (LocalSearchFilterManager)(SwigcptrLocalSearchFilterManager(C._wrap_new_LocalSearchFilterManager__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewLocalSearchFilterManager__SWIG_1(arg1 LocalSearchFilterVector) (_swig_ret LocalSearchFilterManager) {
	var swig_r LocalSearchFilterManager
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (LocalSearchFilterManager)(SwigcptrLocalSearchFilterManager(C._wrap_new_LocalSearchFilterManager__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewLocalSearchFilterManager(a ...interface{}) LocalSearchFilterManager {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrStd_vector_Sl_operations_research_LocalSearchFilterManager_FilterEvent_Sg_); !ok {
			goto check_1
		}
		return NewLocalSearchFilterManager__SWIG_0(a[0].(Std_vector_Sl_operations_research_LocalSearchFilterManager_FilterEvent_Sg_))
	}
check_1:
	if argc == 1 {
		return NewLocalSearchFilterManager__SWIG_1(a[0].(LocalSearchFilterVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrLocalSearchFilterManager) Revert() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchFilterManager_Revert_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchFilterManager) Accept(arg2 LocalSearchMonitor, arg3 Assignment, arg4 Assignment, arg5 int64, arg6 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_LocalSearchFilterManager_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_type_895(_swig_i_4), C.swig_type_896(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilterManager) Synchronize(arg2 Assignment, arg3 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_LocalSearchFilterManager_Synchronize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchFilterManager) GetSynchronizedObjectiveValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LocalSearchFilterManager_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchFilterManager) GetAcceptedObjectiveValue() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LocalSearchFilterManager_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteLocalSearchFilterManager(arg1 LocalSearchFilterManager) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LocalSearchFilterManager_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrLocalSearchFilterManager) SwigIsBaseObject() {
}

func (p SwigcptrLocalSearchFilterManager) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type LocalSearchFilterManager interface {
	Swigcptr() uintptr
	SwigIsLocalSearchFilterManager()
	ToString() (_swig_ret string)
	Revert()
	Accept(arg2 LocalSearchMonitor, arg3 Assignment, arg4 Assignment, arg5 int64, arg6 int64) (_swig_ret bool)
	Synchronize(arg2 Assignment, arg3 Assignment)
	GetSynchronizedObjectiveValue() (_swig_ret int64)
	GetAcceptedObjectiveValue() (_swig_ret int64)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type _swig_DirectorIntVarLocalSearchFilter struct {
	SwigcptrIntVarLocalSearchFilter
	v interface{}
}

func (p *_swig_DirectorIntVarLocalSearchFilter) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrIntVarLocalSearchFilter)
}

func (p *_swig_DirectorIntVarLocalSearchFilter) SwigIsIntVarLocalSearchFilter() {
}

func (p *_swig_DirectorIntVarLocalSearchFilter) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorIntVarLocalSearchFilter(v interface{}, arg1 IntVarVector) IntVarLocalSearchFilter {
	p := &_swig_DirectorIntVarLocalSearchFilter{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	p.SwigcptrIntVarLocalSearchFilter = SwigcptrIntVarLocalSearchFilter(C._wrap__swig_NewDirectorIntVarLocalSearchFilterIntVarLocalSearchFilter_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0)))
	return p
}

func DeleteDirectorIntVarLocalSearchFilter(arg1 IntVarLocalSearchFilter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorIntVarLocalSearchFilter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_IntVarLocalSearchFilter_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_IntVarLocalSearchFilter_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterToString interface {
	ToString() string
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) ToString() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterToString); swig_ok {
		return swig_g.ToString()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DirectorIntVarLocalSearchFilterToString(swig_p IntVarLocalSearchFilter) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_ToString_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_ToString_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_r = swig_p.ToString()
	var swig_r_1 string

  {
    p := Swig_malloc(len(swig_r))
    s := (*[1<<30]byte)(unsafe.Pointer(p))[:len(swig_r)]
    copy(s, swig_r)
    swig_r_1 = *(*string)(unsafe.Pointer(&s))
  }

	return swig_r_1
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterRelax interface {
	Relax(Assignment, Assignment)
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) Relax(delta Assignment, deltadelta Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterRelax); swig_ok {
		swig_g.Relax(delta, deltadelta)
		return
	}
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Relax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorIntVarLocalSearchFilterRelax(swig_p IntVarLocalSearchFilter, delta Assignment, deltadelta Assignment) {
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Relax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_Relax_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_Relax_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_p.Relax(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterCommit interface {
	Commit(Assignment, Assignment)
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) Commit(delta Assignment, deltadelta Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterCommit); swig_ok {
		swig_g.Commit(delta, deltadelta)
		return
	}
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Commit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DirectorIntVarLocalSearchFilterCommit(swig_p IntVarLocalSearchFilter, delta Assignment, deltadelta Assignment) {
	_swig_i_0 := getSwigcptr(delta)
	_swig_i_1 := getSwigcptr(deltadelta)
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Commit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_Commit_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_Commit_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr, arg3 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_p.Commit(SwigcptrAssignment(arg2), SwigcptrAssignment(arg3))
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterAccept interface {
	Accept(Assignment, Assignment, int64, int64) bool
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) Accept(delta Assignment, deltadelta Assignment, objective_min int64, objective_max int64) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterAccept); swig_ok {
		return swig_g.Accept(delta, deltadelta, objective_min, objective_max)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_Accept_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_Accept_constraintsolver_e5a2167dd134d32d(swig_c int, delta uintptr, deltadelta uintptr, objective_min int64, objective_max int64) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_r = swig_p.Accept(SwigcptrAssignment(delta), SwigcptrAssignment(deltadelta), objective_min, objective_max)
	return swig_r
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterIsIncremental interface {
	IsIncremental() bool
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) IsIncremental() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterIsIncremental); swig_ok {
		return swig_g.IsIncremental()
	}
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter)))
	return swig_r
}

func DirectorIntVarLocalSearchFilterIsIncremental(swig_p IntVarLocalSearchFilter) bool {
	var swig_r bool
	swig_r = (bool)(C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter)))
	return swig_r
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_IsIncremental_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_IsIncremental_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_r = swig_p.IsIncremental()
	return swig_r
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterRevert interface {
	Revert()
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) Revert() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterRevert); swig_ok {
		swig_g.Revert()
		return
	}
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Revert_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter))
}

func DirectorIntVarLocalSearchFilterRevert(swig_p IntVarLocalSearchFilter) {
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Revert_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter))
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_Revert_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_Revert_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_p.Revert()
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterReset interface {
	Reset()
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) Reset() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterReset); swig_ok {
		swig_g.Reset()
		return
	}
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter))
}

func DirectorIntVarLocalSearchFilterReset(swig_p IntVarLocalSearchFilter) {
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter))
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_Reset_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_Reset_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_p.Reset()
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterGetSynchronizedObjectiveValue interface {
	GetSynchronizedObjectiveValue() int64
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) GetSynchronizedObjectiveValue() int64 {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterGetSynchronizedObjectiveValue); swig_ok {
		return swig_g.GetSynchronizedObjectiveValue()
	}
	var swig_r int64
	swig_r = (int64)(C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter)))
	return swig_r
}

func DirectorIntVarLocalSearchFilterGetSynchronizedObjectiveValue(swig_p IntVarLocalSearchFilter) int64 {
	var swig_r int64
	swig_r = (int64)(C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter)))
	return swig_r
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int64) {
	var swig_r int64
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_r = swig_p.GetSynchronizedObjectiveValue()
	return swig_r
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterGetAcceptedObjectiveValue interface {
	GetAcceptedObjectiveValue() int64
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) GetAcceptedObjectiveValue() int64 {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterGetAcceptedObjectiveValue); swig_ok {
		return swig_g.GetAcceptedObjectiveValue()
	}
	var swig_r int64
	swig_r = (int64)(C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter)))
	return swig_r
}

func DirectorIntVarLocalSearchFilterGetAcceptedObjectiveValue(swig_p IntVarLocalSearchFilter) int64 {
	var swig_r int64
	swig_r = (int64)(C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter)))
	return swig_r
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(swig_c int) (swig_result int64) {
	var swig_r int64
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_r = swig_p.GetAcceptedObjectiveValue()
	return swig_r
}

type _swig_DirectorInterfaceIntVarLocalSearchFilterOnSynchronize interface {
	OnSynchronize(Assignment)
}

func (swig_p *_swig_DirectorIntVarLocalSearchFilter) OnSynchronize(delta Assignment) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceIntVarLocalSearchFilterOnSynchronize); swig_ok {
		swig_g.OnSynchronize(delta)
		return
	}
	_swig_i_0 := getSwigcptr(delta)
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_OnSynchronize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.SwigcptrIntVarLocalSearchFilter), C.uintptr_t(_swig_i_0))
}

func DirectorIntVarLocalSearchFilterOnSynchronize(swig_p IntVarLocalSearchFilter, delta Assignment) {
	_swig_i_0 := getSwigcptr(delta)
	C._wrap__swig_DirectorIntVarLocalSearchFilter_upcall_OnSynchronize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(swig_p.(*_swig_DirectorIntVarLocalSearchFilter).SwigcptrIntVarLocalSearchFilter), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorIntVarLocalSearchFilter_callback_OnSynchronize_constraintsolver_e5a2167dd134d32d
func Swig_DirectorIntVarLocalSearchFilter_callback_OnSynchronize_constraintsolver_e5a2167dd134d32d(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorIntVarLocalSearchFilter)
	swig_p.OnSynchronize(SwigcptrAssignment(arg2))
}

type SwigcptrIntVarLocalSearchFilter uintptr

func (p SwigcptrIntVarLocalSearchFilter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntVarLocalSearchFilter) SwigIsIntVarLocalSearchFilter() {
}

func (p SwigcptrIntVarLocalSearchFilter) DirectorInterface() interface{} {
	return nil
}

func DeleteIntVarLocalSearchFilter(arg1 IntVarLocalSearchFilter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_IntVarLocalSearchFilter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIntVarLocalSearchFilter) Synchronize(arg2 Assignment, arg3 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_IntVarLocalSearchFilter_Synchronize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrIntVarLocalSearchFilter) AddVars(arg2 IntVarVector) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVarLocalSearchFilter_AddVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIntVarLocalSearchFilter) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IntVarLocalSearchFilter_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchFilter) Var(arg2 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_IntVarLocalSearchFilter_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchFilter) Value(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_IntVarLocalSearchFilter_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrIntVarLocalSearchFilter) Index(arg2 IntVar) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_IntVarLocalSearchFilter_Index_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) Relax(arg1 Assignment, arg2 Assignment) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVarLocalSearchFilter_Relax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) Commit(arg1 Assignment, arg2 Assignment) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_IntVarLocalSearchFilter_Commit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) Accept(arg1 Assignment, arg2 Assignment, arg3 int64, arg4 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_IntVarLocalSearchFilter_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_903(_swig_i_2), C.swig_type_904(_swig_i_3)))
	return swig_r
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) IsIncremental() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IntVarLocalSearchFilter_IsIncremental_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) Revert() {
	C._wrap_IntVarLocalSearchFilter_Revert_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) Reset() {
	C._wrap_IntVarLocalSearchFilter_Reset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) GetSynchronizedObjectiveValue() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_IntVarLocalSearchFilter_GetSynchronizedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) GetAcceptedObjectiveValue() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_IntVarLocalSearchFilter_GetAcceptedObjectiveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrIntVarLocalSearchFilter) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_IntVarLocalSearchFilter_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrIntVarLocalSearchFilter) SwigIsLocalSearchFilter() {
}

func (p SwigcptrIntVarLocalSearchFilter) SwigGetLocalSearchFilter() LocalSearchFilter {
	return SwigcptrLocalSearchFilter(getSwigcptr(p))
}

func (p SwigcptrIntVarLocalSearchFilter) SwigIsBaseObject() {
}

func (p SwigcptrIntVarLocalSearchFilter) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type IntVarLocalSearchFilter interface {
	Swigcptr() uintptr
	SwigIsIntVarLocalSearchFilter()
	DirectorInterface() interface{}
	Synchronize(arg2 Assignment, arg3 Assignment)
	AddVars(arg2 IntVarVector)
	Size() (_swig_ret int)
	Var(arg2 int) (_swig_ret IntVar)
	Value(arg2 int) (_swig_ret int64)
	Index(arg2 IntVar) (_swig_ret int)
	Relax(arg1 Assignment, arg2 Assignment)
	Commit(arg1 Assignment, arg2 Assignment)
	Accept(arg1 Assignment, arg2 Assignment, arg3 int64, arg4 int64) (_swig_ret bool)
	IsIncremental() (_swig_ret bool)
	Revert()
	Reset()
	GetSynchronizedObjectiveValue() (_swig_ret int64)
	GetAcceptedObjectiveValue() (_swig_ret int64)
	ToString() (_swig_ret string)
	SwigIsLocalSearchFilter()
	SwigGetLocalSearchFilter() LocalSearchFilter
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrPropagationMonitor uintptr

func (p SwigcptrPropagationMonitor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPropagationMonitor) SwigIsPropagationMonitor() {
}

func DeletePropagationMonitor(arg1 PropagationMonitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_PropagationMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPropagationMonitor) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PropagationMonitor_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPropagationMonitor) BeginConstraintInitialPropagation(arg2 Constraint) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationMonitor_BeginConstraintInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationMonitor) EndConstraintInitialPropagation(arg2 Constraint) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationMonitor_EndConstraintInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationMonitor) BeginNestedConstraintInitialPropagation(arg2 Constraint, arg3 Constraint) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_PropagationMonitor_BeginNestedConstraintInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) EndNestedConstraintInitialPropagation(arg2 Constraint, arg3 Constraint) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_PropagationMonitor_EndNestedConstraintInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) RegisterDemon(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationMonitor_RegisterDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationMonitor) BeginDemonRun(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationMonitor_BeginDemonRun_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationMonitor) EndDemonRun(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationMonitor_EndDemonRun_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationMonitor) StartProcessingIntegerVariable(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationMonitor_StartProcessingIntegerVariable_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationMonitor) EndProcessingIntegerVariable(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationMonitor_EndProcessingIntegerVariable_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPropagationMonitor) PushContext(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PropagationMonitor_PushContext_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_909)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPropagationMonitor) PopContext() {
	_swig_i_0 := arg1
	C._wrap_PropagationMonitor_PopContext_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPropagationMonitor) SetMin__SWIG_0(arg2 IntExpr, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetMin__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_910(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetMax__SWIG_0(arg2 IntExpr, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetMax__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_911(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetRange__SWIG_0(arg2 IntExpr, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PropagationMonitor_SetRange__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_912(_swig_i_2), C.swig_type_913(_swig_i_3))
}

func (arg1 SwigcptrPropagationMonitor) SetMin__SWIG_1(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetMin__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_914(_swig_i_2))
}

func (p SwigcptrPropagationMonitor) SetMin(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		p.SetMin__SWIG_1(a[0].(IntVar), a[1].(int64))
		return
	}
check_1:
	if argc == 2 {
		p.SetMin__SWIG_0(a[0].(IntExpr), a[1].(int64))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPropagationMonitor) SetMax__SWIG_1(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetMax__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_915(_swig_i_2))
}

func (p SwigcptrPropagationMonitor) SetMax(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		p.SetMax__SWIG_1(a[0].(IntVar), a[1].(int64))
		return
	}
check_1:
	if argc == 2 {
		p.SetMax__SWIG_0(a[0].(IntExpr), a[1].(int64))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPropagationMonitor) SetRange__SWIG_1(arg2 IntVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PropagationMonitor_SetRange__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_916(_swig_i_2), C.swig_type_917(_swig_i_3))
}

func (p SwigcptrPropagationMonitor) SetRange(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		p.SetRange__SWIG_1(a[0].(IntVar), a[1].(int64), a[2].(int64))
		return
	}
check_1:
	if argc == 3 {
		p.SetRange__SWIG_0(a[0].(IntExpr), a[1].(int64), a[2].(int64))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPropagationMonitor) RemoveValue(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_RemoveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_918(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetValue(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_919(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) RemoveInterval(arg2 IntVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PropagationMonitor_RemoveInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_920(_swig_i_2), C.swig_type_921(_swig_i_3))
}

func (arg1 SwigcptrPropagationMonitor) SetValues(arg2 IntVar, arg3 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetValues_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_922)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrPropagationMonitor) RemoveValues(arg2 IntVar, arg3 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_RemoveValues_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_923)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrPropagationMonitor) SetStartMin(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetStartMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_924(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetStartMax(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetStartMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_925(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetStartRange(arg2 IntervalVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PropagationMonitor_SetStartRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_926(_swig_i_2), C.swig_type_927(_swig_i_3))
}

func (arg1 SwigcptrPropagationMonitor) SetEndMin(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetEndMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_928(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetEndMax(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetEndMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_929(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetEndRange(arg2 IntervalVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PropagationMonitor_SetEndRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_930(_swig_i_2), C.swig_type_931(_swig_i_3))
}

func (arg1 SwigcptrPropagationMonitor) SetDurationMin(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetDurationMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_932(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetDurationMax(arg2 IntervalVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetDurationMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_933(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) SetDurationRange(arg2 IntervalVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PropagationMonitor_SetDurationRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_934(_swig_i_2), C.swig_type_935(_swig_i_3))
}

func (arg1 SwigcptrPropagationMonitor) SetPerformed(arg2 IntervalVar, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_SetPerformed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) RankFirst(arg2 SequenceVar, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_RankFirst_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) RankNotFirst(arg2 SequenceVar, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_RankNotFirst_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) RankLast(arg2 SequenceVar, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_RankLast_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) RankNotLast(arg2 SequenceVar, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_PropagationMonitor_RankNotLast_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrPropagationMonitor) RankSequence(arg2 SequenceVar, arg3 []int, arg4 []int, arg5 []int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyintSliceIn(arg3)

	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyintSliceIn(arg4)

	var _swig_i_4 []C.int

    _swig_i_4 = swigCopyintSliceIn(arg5)

	C._wrap_PropagationMonitor_RankSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_936)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_937)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_938)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_4
	}
}

func (arg1 SwigcptrPropagationMonitor) Install() {
	_swig_i_0 := arg1
	C._wrap_PropagationMonitor_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPropagationMonitor) EnterSearch() {
	C._wrap_PropagationMonitor_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) RestartSearch() {
	C._wrap_PropagationMonitor_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) ExitSearch() {
	C._wrap_PropagationMonitor_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) BeginNextDecision(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_PropagationMonitor_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPropagationMonitor) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_PropagationMonitor_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrPropagationMonitor) ApplyDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_PropagationMonitor_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPropagationMonitor) RefuteDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_PropagationMonitor_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPropagationMonitor) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_PropagationMonitor_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrPropagationMonitor) BeginFail() {
	C._wrap_PropagationMonitor_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) EndFail() {
	C._wrap_PropagationMonitor_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) BeginInitialPropagation() {
	C._wrap_PropagationMonitor_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) EndInitialPropagation() {
	C._wrap_PropagationMonitor_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_PropagationMonitor_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPropagationMonitor) AtSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_PropagationMonitor_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPropagationMonitor) NoMoreSolutions() {
	C._wrap_PropagationMonitor_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_PropagationMonitor_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPropagationMonitor) AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_PropagationMonitor_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrPropagationMonitor) AcceptNeighbor() {
	C._wrap_PropagationMonitor_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) AcceptUncheckedNeighbor() {
	C._wrap_PropagationMonitor_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_PropagationMonitor_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPropagationMonitor) PeriodicCheck() {
	C._wrap_PropagationMonitor_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrPropagationMonitor) ProgressPercent() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_PropagationMonitor_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrPropagationMonitor) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_PropagationMonitor_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrPropagationMonitor) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_PropagationMonitor_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrPropagationMonitor) SwigIsSearchMonitor() {
}

func (p SwigcptrPropagationMonitor) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrPropagationMonitor) SwigIsBaseObject() {
}

func (p SwigcptrPropagationMonitor) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type PropagationMonitor interface {
	Swigcptr() uintptr
	SwigIsPropagationMonitor()
	ToString() (_swig_ret string)
	BeginConstraintInitialPropagation(arg2 Constraint)
	EndConstraintInitialPropagation(arg2 Constraint)
	BeginNestedConstraintInitialPropagation(arg2 Constraint, arg3 Constraint)
	EndNestedConstraintInitialPropagation(arg2 Constraint, arg3 Constraint)
	RegisterDemon(arg2 Demon)
	BeginDemonRun(arg2 Demon)
	EndDemonRun(arg2 Demon)
	StartProcessingIntegerVariable(arg2 IntVar)
	EndProcessingIntegerVariable(arg2 IntVar)
	PushContext(arg2 string)
	PopContext()
	SetMin(a ...interface{})
	SetMax(a ...interface{})
	SetRange(a ...interface{})
	RemoveValue(arg2 IntVar, arg3 int64)
	SetValue(arg2 IntVar, arg3 int64)
	RemoveInterval(arg2 IntVar, arg3 int64, arg4 int64)
	SetValues(arg2 IntVar, arg3 []int64)
	RemoveValues(arg2 IntVar, arg3 []int64)
	SetStartMin(arg2 IntervalVar, arg3 int64)
	SetStartMax(arg2 IntervalVar, arg3 int64)
	SetStartRange(arg2 IntervalVar, arg3 int64, arg4 int64)
	SetEndMin(arg2 IntervalVar, arg3 int64)
	SetEndMax(arg2 IntervalVar, arg3 int64)
	SetEndRange(arg2 IntervalVar, arg3 int64, arg4 int64)
	SetDurationMin(arg2 IntervalVar, arg3 int64)
	SetDurationMax(arg2 IntervalVar, arg3 int64)
	SetDurationRange(arg2 IntervalVar, arg3 int64, arg4 int64)
	SetPerformed(arg2 IntervalVar, arg3 bool)
	RankFirst(arg2 SequenceVar, arg3 int)
	RankNotFirst(arg2 SequenceVar, arg3 int)
	RankLast(arg2 SequenceVar, arg3 int)
	RankNotLast(arg2 SequenceVar, arg3 int)
	RankSequence(arg2 SequenceVar, arg3 []int, arg4 []int, arg5 []int)
	Install()
	EnterSearch()
	RestartSearch()
	ExitSearch()
	BeginNextDecision(arg1 DecisionBuilder)
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	ApplyDecision(arg1 Decision)
	RefuteDecision(arg1 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	AcceptSolution() (_swig_ret bool)
	AtSolution() (_swig_ret bool)
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	PeriodicCheck()
	ProgressPercent() (_swig_ret int)
	Accept(arg1 ModelVisitor)
	Solver() (_swig_ret Solver)
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrLocalSearchMonitor uintptr

func (p SwigcptrLocalSearchMonitor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLocalSearchMonitor) SwigIsLocalSearchMonitor() {
}

func DeleteLocalSearchMonitor(arg1 LocalSearchMonitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LocalSearchMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchMonitor) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_LocalSearchMonitor_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrLocalSearchMonitor) BeginOperatorStart() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchMonitor_BeginOperatorStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchMonitor) EndOperatorStart() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchMonitor_EndOperatorStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLocalSearchMonitor) BeginMakeNextNeighbor(arg2 LocalSearchOperator) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_LocalSearchMonitor_BeginMakeNextNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchMonitor) EndMakeNextNeighbor(arg2 LocalSearchOperator, arg3 bool, arg4 Assignment, arg5 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	C._wrap_LocalSearchMonitor_EndMakeNextNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))
}

func (arg1 SwigcptrLocalSearchMonitor) BeginFilterNeighbor(arg2 LocalSearchOperator) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_LocalSearchMonitor_BeginFilterNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchMonitor) EndFilterNeighbor(arg2 LocalSearchOperator, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_LocalSearchMonitor_EndFilterNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchMonitor) BeginAcceptNeighbor(arg2 LocalSearchOperator) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_LocalSearchMonitor_BeginAcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchMonitor) EndAcceptNeighbor(arg2 LocalSearchOperator, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_LocalSearchMonitor_EndAcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchMonitor) BeginFiltering(arg2 LocalSearchFilter) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_LocalSearchMonitor_BeginFiltering_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLocalSearchMonitor) EndFiltering(arg2 LocalSearchFilter, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_LocalSearchMonitor_EndFiltering_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrLocalSearchMonitor) IsActive() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_LocalSearchMonitor_IsActive_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLocalSearchMonitor) Install() {
	_swig_i_0 := arg1
	C._wrap_LocalSearchMonitor_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLocalSearchMonitor) EnterSearch() {
	C._wrap_LocalSearchMonitor_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) RestartSearch() {
	C._wrap_LocalSearchMonitor_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) ExitSearch() {
	C._wrap_LocalSearchMonitor_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) BeginNextDecision(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_LocalSearchMonitor_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLocalSearchMonitor) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_LocalSearchMonitor_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrLocalSearchMonitor) ApplyDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_LocalSearchMonitor_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLocalSearchMonitor) RefuteDecision(arg1 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_LocalSearchMonitor_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLocalSearchMonitor) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_LocalSearchMonitor_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrLocalSearchMonitor) BeginFail() {
	C._wrap_LocalSearchMonitor_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) EndFail() {
	C._wrap_LocalSearchMonitor_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) BeginInitialPropagation() {
	C._wrap_LocalSearchMonitor_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) EndInitialPropagation() {
	C._wrap_LocalSearchMonitor_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_LocalSearchMonitor_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrLocalSearchMonitor) AtSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_LocalSearchMonitor_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrLocalSearchMonitor) NoMoreSolutions() {
	C._wrap_LocalSearchMonitor_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_LocalSearchMonitor_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrLocalSearchMonitor) AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_LocalSearchMonitor_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrLocalSearchMonitor) AcceptNeighbor() {
	C._wrap_LocalSearchMonitor_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) AcceptUncheckedNeighbor() {
	C._wrap_LocalSearchMonitor_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_LocalSearchMonitor_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrLocalSearchMonitor) PeriodicCheck() {
	C._wrap_LocalSearchMonitor_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLocalSearchMonitor) ProgressPercent() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_LocalSearchMonitor_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrLocalSearchMonitor) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_LocalSearchMonitor_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLocalSearchMonitor) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_LocalSearchMonitor_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrLocalSearchMonitor) SwigIsSearchMonitor() {
}

func (p SwigcptrLocalSearchMonitor) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrLocalSearchMonitor) SwigIsBaseObject() {
}

func (p SwigcptrLocalSearchMonitor) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type LocalSearchMonitor interface {
	Swigcptr() uintptr
	SwigIsLocalSearchMonitor()
	ToString() (_swig_ret string)
	BeginOperatorStart()
	EndOperatorStart()
	BeginMakeNextNeighbor(arg2 LocalSearchOperator)
	EndMakeNextNeighbor(arg2 LocalSearchOperator, arg3 bool, arg4 Assignment, arg5 Assignment)
	BeginFilterNeighbor(arg2 LocalSearchOperator)
	EndFilterNeighbor(arg2 LocalSearchOperator, arg3 bool)
	BeginAcceptNeighbor(arg2 LocalSearchOperator)
	EndAcceptNeighbor(arg2 LocalSearchOperator, arg3 bool)
	BeginFiltering(arg2 LocalSearchFilter)
	EndFiltering(arg2 LocalSearchFilter, arg3 bool)
	IsActive() (_swig_ret bool)
	Install()
	EnterSearch()
	RestartSearch()
	ExitSearch()
	BeginNextDecision(arg1 DecisionBuilder)
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	ApplyDecision(arg1 Decision)
	RefuteDecision(arg1 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	BeginFail()
	EndFail()
	BeginInitialPropagation()
	EndInitialPropagation()
	AcceptSolution() (_swig_ret bool)
	AtSolution() (_swig_ret bool)
	NoMoreSolutions()
	LocalOptimum() (_swig_ret bool)
	AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	AcceptNeighbor()
	AcceptUncheckedNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	PeriodicCheck()
	ProgressPercent() (_swig_ret int)
	Accept(arg1 ModelVisitor)
	Solver() (_swig_ret Solver)
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrBooleanVar uintptr

func (p SwigcptrBooleanVar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBooleanVar) SwigIsBooleanVar() {
}

func GetBooleanVarKUnboundBooleanVarValue() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_BooleanVar_kUnboundBooleanVarValue_get_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

func DeleteBooleanVar(arg1 BooleanVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_BooleanVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBooleanVar) Min() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_BooleanVar_Min_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) SetMin(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BooleanVar_SetMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_941(_swig_i_1))
}

func (arg1 SwigcptrBooleanVar) Max() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_BooleanVar_Max_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) SetMax(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BooleanVar_SetMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_943(_swig_i_1))
}

func (arg1 SwigcptrBooleanVar) SetRange(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_BooleanVar_SetRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_944(_swig_i_1), C.swig_type_945(_swig_i_2))
}

func (arg1 SwigcptrBooleanVar) Bound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BooleanVar_Bound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) Value() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_BooleanVar_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) RemoveValue(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BooleanVar_RemoveValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_947(_swig_i_1))
}

func (arg1 SwigcptrBooleanVar) RemoveInterval(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_BooleanVar_RemoveInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_948(_swig_i_1), C.swig_type_949(_swig_i_2))
}

func (arg1 SwigcptrBooleanVar) WhenBound(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_BooleanVar_WhenBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBooleanVar) WhenRange(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_BooleanVar_WhenRange_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBooleanVar) WhenDomain(arg2 Demon) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_BooleanVar_WhenDomain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBooleanVar) Size() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_BooleanVar_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) Contains(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BooleanVar_Contains_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_951(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BooleanVar_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrBooleanVar) VarType() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_BooleanVar_VarType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) IsEqual(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BooleanVar_IsEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_953(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) IsDifferent(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BooleanVar_IsDifferent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_954(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) IsGreaterOrEqual(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BooleanVar_IsGreaterOrEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_955(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) IsLessOrEqual(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BooleanVar_IsLessOrEqual_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_956(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBooleanVar) RestoreValue() {
	_swig_i_0 := arg1
	C._wrap_BooleanVar_RestoreValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBooleanVar) BaseName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BooleanVar_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrBooleanVar) RawValue() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_BooleanVar_RawValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) IsVar() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BooleanVar_IsVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BooleanVar_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) RemoveValues(arg1 []int64) {
	_swig_i_0 := arg1
	C._wrap_BooleanVar_RemoveValues_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), *(*C.swig_type_958)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrBooleanVar) SetValues(arg1 []int64) {
	_swig_i_0 := arg1
	C._wrap_BooleanVar_SetValues_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), *(*C.swig_type_959)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrBooleanVar) OldMin() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_BooleanVar_OldMin_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) OldMax() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_BooleanVar_OldMax_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BooleanVar_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBooleanVar) Index() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_BooleanVar_Index_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) GetDomain() (_swig_ret IntVarIterator) {
	var swig_r IntVarIterator
	swig_r = (IntVarIterator)(SwigcptrIntVarIterator(C._wrap_BooleanVar_GetDomain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) GetHoles() (_swig_ret IntVarIterator) {
	var swig_r IntVarIterator
	swig_r = (IntVarIterator)(SwigcptrIntVarIterator(C._wrap_BooleanVar_GetHoles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) Range(arg1 []int64, arg2 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BooleanVar_Range_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), *(*C.swig_type_573)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_574)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrBooleanVar) SetValue(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_BooleanVar_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.swig_type_577(_swig_i_0))
}

func (_swig_base SwigcptrBooleanVar) VarWithName(arg1 string) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_BooleanVar_VarWithName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), *(*C.swig_type_578)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_BooleanVar_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrBooleanVar) FreezeQueue() {
	C._wrap_BooleanVar_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrBooleanVar) UnfreezeQueue() {
	C._wrap_BooleanVar_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrBooleanVar) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BooleanVar_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBooleanVar) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BooleanVar_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBooleanVar) ResetActionOnFail() {
	C._wrap_BooleanVar_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrBooleanVar) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BooleanVar_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBooleanVar) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_BooleanVar_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrBooleanVar) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_BooleanVar_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrBooleanVar) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BooleanVar_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrBooleanVar) SwigIsIntVar() {
}

func (p SwigcptrBooleanVar) SwigGetIntVar() IntVar {
	return SwigcptrIntVar(getSwigcptr(p))
}

func (p SwigcptrBooleanVar) SwigIsIntExpr() {
}

func (p SwigcptrBooleanVar) SwigGetIntExpr() IntExpr {
	return SwigcptrIntExpr(getSwigcptr(p))
}

func (p SwigcptrBooleanVar) SwigIsPropagationBaseObject() {
}

func (p SwigcptrBooleanVar) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrBooleanVar) SwigIsBaseObject() {
}

func (p SwigcptrBooleanVar) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type BooleanVar interface {
	Swigcptr() uintptr
	SwigIsBooleanVar()
	Min() (_swig_ret int64)
	SetMin(arg2 int64)
	Max() (_swig_ret int64)
	SetMax(arg2 int64)
	SetRange(arg2 int64, arg3 int64)
	Bound() (_swig_ret bool)
	Value() (_swig_ret int64)
	RemoveValue(arg2 int64)
	RemoveInterval(arg2 int64, arg3 int64)
	WhenBound(arg2 Demon)
	WhenRange(arg2 Demon)
	WhenDomain(arg2 Demon)
	Size() (_swig_ret uint64)
	Contains(arg2 int64) (_swig_ret bool)
	ToString() (_swig_ret string)
	VarType() (_swig_ret int)
	IsEqual(arg2 int64) (_swig_ret IntVar)
	IsDifferent(arg2 int64) (_swig_ret IntVar)
	IsGreaterOrEqual(arg2 int64) (_swig_ret IntVar)
	IsLessOrEqual(arg2 int64) (_swig_ret IntVar)
	RestoreValue()
	BaseName() (_swig_ret string)
	RawValue() (_swig_ret int)
	IsVar() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	RemoveValues(arg1 []int64)
	SetValues(arg1 []int64)
	OldMin() (_swig_ret int64)
	OldMax() (_swig_ret int64)
	Accept(arg1 ModelVisitor)
	Index() (_swig_ret int)
	GetDomain() (_swig_ret IntVarIterator)
	GetHoles() (_swig_ret IntVarIterator)
	Range(arg1 []int64, arg2 []int64)
	SetValue(arg1 int64)
	VarWithName(arg1 string) (_swig_ret IntVar)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	SwigIsIntVar()
	SwigGetIntVar() IntVar
	SwigIsIntExpr()
	SwigGetIntExpr() IntExpr
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrSymmetryBreaker uintptr

func (p SwigcptrSymmetryBreaker) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSymmetryBreaker) SwigIsSymmetryBreaker() {
}

func NewSymmetryBreaker() (_swig_ret SymmetryBreaker) {
	var swig_r SymmetryBreaker
	swig_r = (SymmetryBreaker)(SwigcptrSymmetryBreaker(C._wrap_new_SymmetryBreaker_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func DeleteSymmetryBreaker(arg1 SymmetryBreaker) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SymmetryBreaker_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSymmetryBreaker) AddIntegerVariableEqualValueClause(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_SymmetryBreaker_AddIntegerVariableEqualValueClause_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_963(_swig_i_2))
}

func (arg1 SwigcptrSymmetryBreaker) AddIntegerVariableGreaterOrEqualValueClause(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_SymmetryBreaker_AddIntegerVariableGreaterOrEqualValueClause_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_964(_swig_i_2))
}

func (arg1 SwigcptrSymmetryBreaker) AddIntegerVariableLessOrEqualValueClause(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_SymmetryBreaker_AddIntegerVariableLessOrEqualValueClause_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_965(_swig_i_2))
}

func (_swig_base SwigcptrSymmetryBreaker) VisitSetVariableValue(arg1 IntVar, arg2 int64) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SymmetryBreaker_VisitSetVariableValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_type_966(_swig_i_1))
}

func (_swig_base SwigcptrSymmetryBreaker) VisitSplitVariableDomain(arg1 IntVar, arg2 int64, arg3 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_SymmetryBreaker_VisitSplitVariableDomain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_type_967(_swig_i_1), C._Bool(_swig_i_2))
}

func (_swig_base SwigcptrSymmetryBreaker) VisitScheduleOrPostpone(arg1 IntervalVar, arg2 int64) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SymmetryBreaker_VisitScheduleOrPostpone_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_type_968(_swig_i_1))
}

func (_swig_base SwigcptrSymmetryBreaker) VisitScheduleOrExpedite(arg1 IntervalVar, arg2 int64) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SymmetryBreaker_VisitScheduleOrExpedite_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_type_969(_swig_i_1))
}

func (_swig_base SwigcptrSymmetryBreaker) VisitRankFirstInterval(arg1 SequenceVar, arg2 int) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SymmetryBreaker_VisitRankFirstInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (_swig_base SwigcptrSymmetryBreaker) VisitRankLastInterval(arg1 SequenceVar, arg2 int) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SymmetryBreaker_VisitRankLastInterval_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (_swig_base SwigcptrSymmetryBreaker) VisitUnknownDecision() {
	C._wrap_SymmetryBreaker_VisitUnknownDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSymmetryBreaker) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SymmetryBreaker_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrSymmetryBreaker) SwigIsDecisionVisitor() {
}

func (p SwigcptrSymmetryBreaker) SwigGetDecisionVisitor() DecisionVisitor {
	return SwigcptrDecisionVisitor(getSwigcptr(p))
}

func (p SwigcptrSymmetryBreaker) SwigIsBaseObject() {
}

func (p SwigcptrSymmetryBreaker) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type SymmetryBreaker interface {
	Swigcptr() uintptr
	SwigIsSymmetryBreaker()
	AddIntegerVariableEqualValueClause(arg2 IntVar, arg3 int64)
	AddIntegerVariableGreaterOrEqualValueClause(arg2 IntVar, arg3 int64)
	AddIntegerVariableLessOrEqualValueClause(arg2 IntVar, arg3 int64)
	VisitSetVariableValue(arg1 IntVar, arg2 int64)
	VisitSplitVariableDomain(arg1 IntVar, arg2 int64, arg3 bool)
	VisitScheduleOrPostpone(arg1 IntervalVar, arg2 int64)
	VisitScheduleOrExpedite(arg1 IntervalVar, arg2 int64)
	VisitRankFirstInterval(arg1 SequenceVar, arg2 int)
	VisitRankLastInterval(arg1 SequenceVar, arg2 int)
	VisitUnknownDecision()
	ToString() (_swig_ret string)
	SwigIsDecisionVisitor()
	SwigGetDecisionVisitor() DecisionVisitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrSearchLog uintptr

func (p SwigcptrSearchLog) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSearchLog) SwigIsSearchLog() {
}

func NewSearchLog(arg1 Solver, arg2 IntVarVector, arg3 string, arg4 Std_vector_Sl_double_Sg_, arg5 Std_vector_Sl_double_Sg_, arg6 Std_function_Sl_std_string_Sp__SP__Sg_, arg7 bool, arg8 int) (_swig_ret SearchLog) {
	var swig_r SearchLog
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	_swig_i_5 := getSwigcptr(arg6)
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (SearchLog)(SwigcptrSearchLog(C._wrap_new_SearchLog_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_971)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C._Bool(_swig_i_6), C.swig_intgo(_swig_i_7))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func DeleteSearchLog(arg1 SearchLog) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SearchLog_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) EnterSearch() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_EnterSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) ExitSearch() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_ExitSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) AtSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SearchLog_AtSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSearchLog) BeginFail() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_BeginFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) NoMoreSolutions() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_NoMoreSolutions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) AcceptUncheckedNeighbor() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_AcceptUncheckedNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) ApplyDecision(arg2 Decision) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchLog_ApplyDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchLog) RefuteDecision(arg2 Decision) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchLog_RefuteDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSearchLog) OutputDecision() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_OutputDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) Maintain() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_Maintain_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) BeginInitialPropagation() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_BeginInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) EndInitialPropagation() {
	_swig_i_0 := arg1
	C._wrap_SearchLog_EndInitialPropagation_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSearchLog) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SearchLog_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrSearchLog) RestartSearch() {
	C._wrap_SearchLog_RestartSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLog) BeginNextDecision(arg1 DecisionBuilder) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SearchLog_BeginNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSearchLog) EndNextDecision(arg1 DecisionBuilder, arg2 Decision) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SearchLog_EndNextDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrSearchLog) AfterDecision(arg1 Decision, arg2 bool) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SearchLog_AfterDecision_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrSearchLog) EndFail() {
	C._wrap_SearchLog_EndFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLog) AcceptSolution() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SearchLog_AcceptSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLog) LocalOptimum() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SearchLog_LocalOptimum_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLog) AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_SearchLog_AcceptDelta_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (_swig_base SwigcptrSearchLog) AcceptNeighbor() {
	C._wrap_SearchLog_AcceptNeighbor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLog) IsUncheckedSolutionLimitReached() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SearchLog_IsUncheckedSolutionLimitReached_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLog) PeriodicCheck() {
	C._wrap_SearchLog_PeriodicCheck_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLog) ProgressPercent() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_SearchLog_ProgressPercent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSearchLog) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SearchLog_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSearchLog) Install() {
	C._wrap_SearchLog_Install_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSearchLog) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_SearchLog_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrSearchLog) SwigIsSearchMonitor() {
}

func (p SwigcptrSearchLog) SwigGetSearchMonitor() SearchMonitor {
	return SwigcptrSearchMonitor(getSwigcptr(p))
}

func (p SwigcptrSearchLog) SwigIsBaseObject() {
}

func (p SwigcptrSearchLog) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type SearchLog interface {
	Swigcptr() uintptr
	SwigIsSearchLog()
	EnterSearch()
	ExitSearch()
	AtSolution() (_swig_ret bool)
	BeginFail()
	NoMoreSolutions()
	AcceptUncheckedNeighbor()
	ApplyDecision(arg2 Decision)
	RefuteDecision(arg2 Decision)
	OutputDecision()
	Maintain()
	BeginInitialPropagation()
	EndInitialPropagation()
	ToString() (_swig_ret string)
	RestartSearch()
	BeginNextDecision(arg1 DecisionBuilder)
	EndNextDecision(arg1 DecisionBuilder, arg2 Decision)
	AfterDecision(arg1 Decision, arg2 bool)
	EndFail()
	AcceptSolution() (_swig_ret bool)
	LocalOptimum() (_swig_ret bool)
	AcceptDelta(arg1 Assignment, arg2 Assignment) (_swig_ret bool)
	AcceptNeighbor()
	IsUncheckedSolutionLimitReached() (_swig_ret bool)
	PeriodicCheck()
	ProgressPercent() (_swig_ret int)
	Accept(arg1 ModelVisitor)
	Install()
	Solver() (_swig_ret Solver)
	SwigIsSearchMonitor()
	SwigGetSearchMonitor() SearchMonitor
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrModelCache uintptr

func (p SwigcptrModelCache) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrModelCache) SwigIsModelCache() {
}

type Operations_researchModelCacheVoidConstraintType int
func _swig_getModelCache_VOID_FALSE_CONSTRAINT_ModelCache() (_swig_ret Operations_researchModelCacheVoidConstraintType) {
	var swig_r Operations_researchModelCacheVoidConstraintType
	swig_r = (Operations_researchModelCacheVoidConstraintType)(C._wrap_VOID_FALSE_CONSTRAINT_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVOID_FALSE_CONSTRAINT Operations_researchModelCacheVoidConstraintType = _swig_getModelCache_VOID_FALSE_CONSTRAINT_ModelCache()
func _swig_getModelCache_VOID_TRUE_CONSTRAINT_ModelCache() (_swig_ret Operations_researchModelCacheVoidConstraintType) {
	var swig_r Operations_researchModelCacheVoidConstraintType
	swig_r = (Operations_researchModelCacheVoidConstraintType)(C._wrap_VOID_TRUE_CONSTRAINT_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVOID_TRUE_CONSTRAINT Operations_researchModelCacheVoidConstraintType = _swig_getModelCache_VOID_TRUE_CONSTRAINT_ModelCache()
func _swig_getModelCache_VOID_CONSTRAINT_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVoidConstraintType) {
	var swig_r Operations_researchModelCacheVoidConstraintType
	swig_r = (Operations_researchModelCacheVoidConstraintType)(C._wrap_VOID_CONSTRAINT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVOID_CONSTRAINT_MAX Operations_researchModelCacheVoidConstraintType = _swig_getModelCache_VOID_CONSTRAINT_MAX_ModelCache()
type Operations_researchModelCacheVarConstantConstraintType int
func _swig_getModelCache_VAR_CONSTANT_EQUALITY_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstraintType) {
	var swig_r Operations_researchModelCacheVarConstantConstraintType
	swig_r = (Operations_researchModelCacheVarConstantConstraintType)(C._wrap_VAR_CONSTANT_EQUALITY_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_EQUALITY Operations_researchModelCacheVarConstantConstraintType = _swig_getModelCache_VAR_CONSTANT_EQUALITY_ModelCache()
func _swig_getModelCache_VAR_CONSTANT_GREATER_OR_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstraintType) {
	var swig_r Operations_researchModelCacheVarConstantConstraintType
	swig_r = (Operations_researchModelCacheVarConstantConstraintType)(C._wrap_VAR_CONSTANT_GREATER_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_GREATER_OR_EQUAL Operations_researchModelCacheVarConstantConstraintType = _swig_getModelCache_VAR_CONSTANT_GREATER_OR_EQUAL_ModelCache()
func _swig_getModelCache_VAR_CONSTANT_LESS_OR_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstraintType) {
	var swig_r Operations_researchModelCacheVarConstantConstraintType
	swig_r = (Operations_researchModelCacheVarConstantConstraintType)(C._wrap_VAR_CONSTANT_LESS_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_LESS_OR_EQUAL Operations_researchModelCacheVarConstantConstraintType = _swig_getModelCache_VAR_CONSTANT_LESS_OR_EQUAL_ModelCache()
func _swig_getModelCache_VAR_CONSTANT_NON_EQUALITY_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstraintType) {
	var swig_r Operations_researchModelCacheVarConstantConstraintType
	swig_r = (Operations_researchModelCacheVarConstantConstraintType)(C._wrap_VAR_CONSTANT_NON_EQUALITY_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_NON_EQUALITY Operations_researchModelCacheVarConstantConstraintType = _swig_getModelCache_VAR_CONSTANT_NON_EQUALITY_ModelCache()
func _swig_getModelCache_VAR_CONSTANT_CONSTRAINT_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstraintType) {
	var swig_r Operations_researchModelCacheVarConstantConstraintType
	swig_r = (Operations_researchModelCacheVarConstantConstraintType)(C._wrap_VAR_CONSTANT_CONSTRAINT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_CONSTRAINT_MAX Operations_researchModelCacheVarConstantConstraintType = _swig_getModelCache_VAR_CONSTANT_CONSTRAINT_MAX_ModelCache()
type Operations_researchModelCacheVarConstantConstantConstraintType int
func _swig_getModelCache_VAR_CONSTANT_CONSTANT_BETWEEN_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstantConstraintType) {
	var swig_r Operations_researchModelCacheVarConstantConstantConstraintType
	swig_r = (Operations_researchModelCacheVarConstantConstantConstraintType)(C._wrap_VAR_CONSTANT_CONSTANT_BETWEEN_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_CONSTANT_BETWEEN Operations_researchModelCacheVarConstantConstantConstraintType = _swig_getModelCache_VAR_CONSTANT_CONSTANT_BETWEEN_ModelCache()
func _swig_getModelCache_VAR_CONSTANT_CONSTANT_CONSTRAINT_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstantConstraintType) {
	var swig_r Operations_researchModelCacheVarConstantConstantConstraintType
	swig_r = (Operations_researchModelCacheVarConstantConstantConstraintType)(C._wrap_VAR_CONSTANT_CONSTANT_CONSTRAINT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_CONSTANT_CONSTRAINT_MAX Operations_researchModelCacheVarConstantConstantConstraintType = _swig_getModelCache_VAR_CONSTANT_CONSTANT_CONSTRAINT_MAX_ModelCache()
type Operations_researchModelCacheExprExprConstraintType int
func _swig_getModelCache_EXPR_EXPR_EQUALITY_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstraintType) {
	var swig_r Operations_researchModelCacheExprExprConstraintType
	swig_r = (Operations_researchModelCacheExprExprConstraintType)(C._wrap_EXPR_EXPR_EQUALITY_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_EQUALITY Operations_researchModelCacheExprExprConstraintType = _swig_getModelCache_EXPR_EXPR_EQUALITY_ModelCache()
func _swig_getModelCache_EXPR_EXPR_GREATER_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstraintType) {
	var swig_r Operations_researchModelCacheExprExprConstraintType
	swig_r = (Operations_researchModelCacheExprExprConstraintType)(C._wrap_EXPR_EXPR_GREATER_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_GREATER Operations_researchModelCacheExprExprConstraintType = _swig_getModelCache_EXPR_EXPR_GREATER_ModelCache()
func _swig_getModelCache_EXPR_EXPR_GREATER_OR_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstraintType) {
	var swig_r Operations_researchModelCacheExprExprConstraintType
	swig_r = (Operations_researchModelCacheExprExprConstraintType)(C._wrap_EXPR_EXPR_GREATER_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_GREATER_OR_EQUAL Operations_researchModelCacheExprExprConstraintType = _swig_getModelCache_EXPR_EXPR_GREATER_OR_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_EXPR_LESS_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstraintType) {
	var swig_r Operations_researchModelCacheExprExprConstraintType
	swig_r = (Operations_researchModelCacheExprExprConstraintType)(C._wrap_EXPR_EXPR_LESS_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_LESS Operations_researchModelCacheExprExprConstraintType = _swig_getModelCache_EXPR_EXPR_LESS_ModelCache()
func _swig_getModelCache_EXPR_EXPR_LESS_OR_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstraintType) {
	var swig_r Operations_researchModelCacheExprExprConstraintType
	swig_r = (Operations_researchModelCacheExprExprConstraintType)(C._wrap_EXPR_EXPR_LESS_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_LESS_OR_EQUAL Operations_researchModelCacheExprExprConstraintType = _swig_getModelCache_EXPR_EXPR_LESS_OR_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_EXPR_NON_EQUALITY_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstraintType) {
	var swig_r Operations_researchModelCacheExprExprConstraintType
	swig_r = (Operations_researchModelCacheExprExprConstraintType)(C._wrap_EXPR_EXPR_NON_EQUALITY_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_NON_EQUALITY Operations_researchModelCacheExprExprConstraintType = _swig_getModelCache_EXPR_EXPR_NON_EQUALITY_ModelCache()
func _swig_getModelCache_EXPR_EXPR_CONSTRAINT_MAX_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstraintType) {
	var swig_r Operations_researchModelCacheExprExprConstraintType
	swig_r = (Operations_researchModelCacheExprExprConstraintType)(C._wrap_EXPR_EXPR_CONSTRAINT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_CONSTRAINT_MAX Operations_researchModelCacheExprExprConstraintType = _swig_getModelCache_EXPR_EXPR_CONSTRAINT_MAX_ModelCache()
type Operations_researchModelCacheExprExpressionType int
func _swig_getModelCache_EXPR_OPPOSITE_ModelCache() (_swig_ret Operations_researchModelCacheExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExpressionType
	swig_r = (Operations_researchModelCacheExprExpressionType)(C._wrap_EXPR_OPPOSITE_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_OPPOSITE Operations_researchModelCacheExprExpressionType = _swig_getModelCache_EXPR_OPPOSITE_ModelCache()
func _swig_getModelCache_EXPR_ABS_ModelCache() (_swig_ret Operations_researchModelCacheExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExpressionType
	swig_r = (Operations_researchModelCacheExprExpressionType)(C._wrap_EXPR_ABS_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_ABS Operations_researchModelCacheExprExpressionType = _swig_getModelCache_EXPR_ABS_ModelCache()
func _swig_getModelCache_EXPR_SQUARE_ModelCache() (_swig_ret Operations_researchModelCacheExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExpressionType
	swig_r = (Operations_researchModelCacheExprExpressionType)(C._wrap_EXPR_SQUARE_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_SQUARE Operations_researchModelCacheExprExpressionType = _swig_getModelCache_EXPR_SQUARE_ModelCache()
func _swig_getModelCache_EXPR_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExpressionType
	swig_r = (Operations_researchModelCacheExprExpressionType)(C._wrap_EXPR_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPRESSION_MAX Operations_researchModelCacheExprExpressionType = _swig_getModelCache_EXPR_EXPRESSION_MAX_ModelCache()
type Operations_researchModelCacheExprExprExpressionType int
func _swig_getModelCache_EXPR_EXPR_DIFFERENCE_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_DIFFERENCE_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_DIFFERENCE Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_DIFFERENCE_ModelCache()
func _swig_getModelCache_EXPR_EXPR_PROD_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_PROD_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_PROD Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_PROD_ModelCache()
func _swig_getModelCache_EXPR_EXPR_DIV_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_DIV_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_DIV Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_DIV_ModelCache()
func _swig_getModelCache_EXPR_EXPR_MAX_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_MAX Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_MAX_ModelCache()
func _swig_getModelCache_EXPR_EXPR_MIN_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_MIN_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_MIN Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_MIN_ModelCache()
func _swig_getModelCache_EXPR_EXPR_SUM_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_SUM_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_SUM Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_SUM_ModelCache()
func _swig_getModelCache_EXPR_EXPR_IS_LESS_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_IS_LESS_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_IS_LESS Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_IS_LESS_ModelCache()
func _swig_getModelCache_EXPR_EXPR_IS_LESS_OR_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_IS_LESS_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_IS_LESS_OR_EQUAL Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_IS_LESS_OR_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_EXPR_IS_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_IS_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_IS_EQUAL Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_IS_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_EXPR_IS_NOT_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_IS_NOT_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_IS_NOT_EQUAL Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_IS_NOT_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_EXPR_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheExprExprExpressionType) {
	var swig_r Operations_researchModelCacheExprExprExpressionType
	swig_r = (Operations_researchModelCacheExprExprExpressionType)(C._wrap_EXPR_EXPR_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_EXPRESSION_MAX Operations_researchModelCacheExprExprExpressionType = _swig_getModelCache_EXPR_EXPR_EXPRESSION_MAX_ModelCache()
type Operations_researchModelCacheExprExprConstantExpressionType int
func _swig_getModelCache_EXPR_EXPR_CONSTANT_CONDITIONAL_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprExprConstantExpressionType)(C._wrap_EXPR_EXPR_CONSTANT_CONDITIONAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_CONSTANT_CONDITIONAL Operations_researchModelCacheExprExprConstantExpressionType = _swig_getModelCache_EXPR_EXPR_CONSTANT_CONDITIONAL_ModelCache()
func _swig_getModelCache_EXPR_EXPR_CONSTANT_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheExprExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprExprConstantExpressionType)(C._wrap_EXPR_EXPR_CONSTANT_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_EXPR_CONSTANT_EXPRESSION_MAX Operations_researchModelCacheExprExprConstantExpressionType = _swig_getModelCache_EXPR_EXPR_CONSTANT_EXPRESSION_MAX_ModelCache()
type Operations_researchModelCacheExprConstantExpressionType int
func _swig_getModelCache_EXPR_CONSTANT_DIFFERENCE_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_DIFFERENCE_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_DIFFERENCE Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_DIFFERENCE_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_DIVIDE_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_DIVIDE_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_DIVIDE Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_DIVIDE_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_PROD_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_PROD_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_PROD Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_PROD_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_MAX_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_MAX Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_MAX_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_MIN_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_MIN_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_MIN Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_MIN_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_SUM_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_SUM_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_SUM Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_SUM_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_IS_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_IS_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_IS_EQUAL Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_IS_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_IS_NOT_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_IS_NOT_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_IS_NOT_EQUAL Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_IS_NOT_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_IS_GREATER_OR_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_IS_GREATER_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_IS_GREATER_OR_EQUAL Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_IS_GREATER_OR_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_IS_LESS_OR_EQUAL_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_IS_LESS_OR_EQUAL_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_IS_LESS_OR_EQUAL Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_IS_LESS_OR_EQUAL_ModelCache()
func _swig_getModelCache_EXPR_CONSTANT_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheExprConstantExpressionType) {
	var swig_r Operations_researchModelCacheExprConstantExpressionType
	swig_r = (Operations_researchModelCacheExprConstantExpressionType)(C._wrap_EXPR_CONSTANT_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheEXPR_CONSTANT_EXPRESSION_MAX Operations_researchModelCacheExprConstantExpressionType = _swig_getModelCache_EXPR_CONSTANT_EXPRESSION_MAX_ModelCache()
type Operations_researchModelCacheVarConstantConstantExpressionType int
func _swig_getModelCache_VAR_CONSTANT_CONSTANT_SEMI_CONTINUOUS_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstantExpressionType) {
	var swig_r Operations_researchModelCacheVarConstantConstantExpressionType
	swig_r = (Operations_researchModelCacheVarConstantConstantExpressionType)(C._wrap_VAR_CONSTANT_CONSTANT_SEMI_CONTINUOUS_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_CONSTANT_SEMI_CONTINUOUS Operations_researchModelCacheVarConstantConstantExpressionType = _swig_getModelCache_VAR_CONSTANT_CONSTANT_SEMI_CONTINUOUS_ModelCache()
func _swig_getModelCache_VAR_CONSTANT_CONSTANT_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantConstantExpressionType) {
	var swig_r Operations_researchModelCacheVarConstantConstantExpressionType
	swig_r = (Operations_researchModelCacheVarConstantConstantExpressionType)(C._wrap_VAR_CONSTANT_CONSTANT_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_CONSTANT_EXPRESSION_MAX Operations_researchModelCacheVarConstantConstantExpressionType = _swig_getModelCache_VAR_CONSTANT_CONSTANT_EXPRESSION_MAX_ModelCache()
type Operations_researchModelCacheVarConstantArrayExpressionType int
func _swig_getModelCache_VAR_CONSTANT_ARRAY_ELEMENT_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantArrayExpressionType) {
	var swig_r Operations_researchModelCacheVarConstantArrayExpressionType
	swig_r = (Operations_researchModelCacheVarConstantArrayExpressionType)(C._wrap_VAR_CONSTANT_ARRAY_ELEMENT_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_ARRAY_ELEMENT Operations_researchModelCacheVarConstantArrayExpressionType = _swig_getModelCache_VAR_CONSTANT_ARRAY_ELEMENT_ModelCache()
func _swig_getModelCache_VAR_CONSTANT_ARRAY_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVarConstantArrayExpressionType) {
	var swig_r Operations_researchModelCacheVarConstantArrayExpressionType
	swig_r = (Operations_researchModelCacheVarConstantArrayExpressionType)(C._wrap_VAR_CONSTANT_ARRAY_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_CONSTANT_ARRAY_EXPRESSION_MAX Operations_researchModelCacheVarConstantArrayExpressionType = _swig_getModelCache_VAR_CONSTANT_ARRAY_EXPRESSION_MAX_ModelCache()
type Operations_researchModelCacheVarArrayConstantArrayExpressionType int
func _swig_getModelCache_VAR_ARRAY_CONSTANT_ARRAY_SCAL_PROD_ModelCache() (_swig_ret Operations_researchModelCacheVarArrayConstantArrayExpressionType) {
	var swig_r Operations_researchModelCacheVarArrayConstantArrayExpressionType
	swig_r = (Operations_researchModelCacheVarArrayConstantArrayExpressionType)(C._wrap_VAR_ARRAY_CONSTANT_ARRAY_SCAL_PROD_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_ARRAY_CONSTANT_ARRAY_SCAL_PROD Operations_researchModelCacheVarArrayConstantArrayExpressionType = _swig_getModelCache_VAR_ARRAY_CONSTANT_ARRAY_SCAL_PROD_ModelCache()
func _swig_getModelCache_VAR_ARRAY_CONSTANT_ARRAY_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVarArrayConstantArrayExpressionType) {
	var swig_r Operations_researchModelCacheVarArrayConstantArrayExpressionType
	swig_r = (Operations_researchModelCacheVarArrayConstantArrayExpressionType)(C._wrap_VAR_ARRAY_CONSTANT_ARRAY_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_ARRAY_CONSTANT_ARRAY_EXPRESSION_MAX Operations_researchModelCacheVarArrayConstantArrayExpressionType = _swig_getModelCache_VAR_ARRAY_CONSTANT_ARRAY_EXPRESSION_MAX_ModelCache()
type Operations_researchModelCacheVarArrayExpressionType int
func _swig_getModelCache_VAR_ARRAY_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVarArrayExpressionType) {
	var swig_r Operations_researchModelCacheVarArrayExpressionType
	swig_r = (Operations_researchModelCacheVarArrayExpressionType)(C._wrap_VAR_ARRAY_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_ARRAY_MAX Operations_researchModelCacheVarArrayExpressionType = _swig_getModelCache_VAR_ARRAY_MAX_ModelCache()
func _swig_getModelCache_VAR_ARRAY_MIN_ModelCache() (_swig_ret Operations_researchModelCacheVarArrayExpressionType) {
	var swig_r Operations_researchModelCacheVarArrayExpressionType
	swig_r = (Operations_researchModelCacheVarArrayExpressionType)(C._wrap_VAR_ARRAY_MIN_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_ARRAY_MIN Operations_researchModelCacheVarArrayExpressionType = _swig_getModelCache_VAR_ARRAY_MIN_ModelCache()
func _swig_getModelCache_VAR_ARRAY_SUM_ModelCache() (_swig_ret Operations_researchModelCacheVarArrayExpressionType) {
	var swig_r Operations_researchModelCacheVarArrayExpressionType
	swig_r = (Operations_researchModelCacheVarArrayExpressionType)(C._wrap_VAR_ARRAY_SUM_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_ARRAY_SUM Operations_researchModelCacheVarArrayExpressionType = _swig_getModelCache_VAR_ARRAY_SUM_ModelCache()
func _swig_getModelCache_VAR_ARRAY_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVarArrayExpressionType) {
	var swig_r Operations_researchModelCacheVarArrayExpressionType
	swig_r = (Operations_researchModelCacheVarArrayExpressionType)(C._wrap_VAR_ARRAY_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_ARRAY_EXPRESSION_MAX Operations_researchModelCacheVarArrayExpressionType = _swig_getModelCache_VAR_ARRAY_EXPRESSION_MAX_ModelCache()
type Operations_researchModelCacheVarArrayConstantExpressionType int
func _swig_getModelCache_VAR_ARRAY_CONSTANT_INDEX_ModelCache() (_swig_ret Operations_researchModelCacheVarArrayConstantExpressionType) {
	var swig_r Operations_researchModelCacheVarArrayConstantExpressionType
	swig_r = (Operations_researchModelCacheVarArrayConstantExpressionType)(C._wrap_VAR_ARRAY_CONSTANT_INDEX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_ARRAY_CONSTANT_INDEX Operations_researchModelCacheVarArrayConstantExpressionType = _swig_getModelCache_VAR_ARRAY_CONSTANT_INDEX_ModelCache()
func _swig_getModelCache_VAR_ARRAY_CONSTANT_EXPRESSION_MAX_ModelCache() (_swig_ret Operations_researchModelCacheVarArrayConstantExpressionType) {
	var swig_r Operations_researchModelCacheVarArrayConstantExpressionType
	swig_r = (Operations_researchModelCacheVarArrayConstantExpressionType)(C._wrap_VAR_ARRAY_CONSTANT_EXPRESSION_MAX_ModelCache_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var ModelCacheVAR_ARRAY_CONSTANT_EXPRESSION_MAX Operations_researchModelCacheVarArrayConstantExpressionType = _swig_getModelCache_VAR_ARRAY_CONSTANT_EXPRESSION_MAX_ModelCache()
func DeleteModelCache(arg1 ModelCache) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ModelCache_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrModelCache) Clear() {
	_swig_i_0 := arg1
	C._wrap_ModelCache_Clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrModelCache) FindVoidConstraint(arg2 Operations_researchModelCacheVoidConstraintType) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_ModelCache_FindVoidConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertVoidConstraint(arg2 Constraint, arg3 Operations_researchModelCacheVoidConstraintType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_ModelCache_InsertVoidConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrModelCache) FindVarConstantConstraint(arg2 IntVar, arg3 int64, arg4 Operations_researchModelCacheVarConstantConstraintType) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_ModelCache_FindVarConstantConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_973(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertVarConstantConstraint(arg2 Constraint, arg3 IntVar, arg4 int64, arg5 Operations_researchModelCacheVarConstantConstraintType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ModelCache_InsertVarConstantConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_974(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrModelCache) FindVarConstantConstantConstraint(arg2 IntVar, arg3 int64, arg4 int64, arg5 Operations_researchModelCacheVarConstantConstantConstraintType) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_ModelCache_FindVarConstantConstantConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_975(_swig_i_2), C.swig_type_976(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertVarConstantConstantConstraint(arg2 Constraint, arg3 IntVar, arg4 int64, arg5 int64, arg6 Operations_researchModelCacheVarConstantConstantConstraintType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_ModelCache_InsertVarConstantConstantConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_977(_swig_i_3), C.swig_type_978(_swig_i_4), C.swig_intgo(_swig_i_5))
}

func (arg1 SwigcptrModelCache) FindExprExprConstraint(arg2 IntExpr, arg3 IntExpr, arg4 Operations_researchModelCacheExprExprConstraintType) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_ModelCache_FindExprExprConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertExprExprConstraint(arg2 Constraint, arg3 IntExpr, arg4 IntExpr, arg5 Operations_researchModelCacheExprExprConstraintType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	C._wrap_ModelCache_InsertExprExprConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrModelCache) FindExprExpression(arg2 IntExpr, arg3 Operations_researchModelCacheExprExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindExprExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertExprExpression(arg2 IntExpr, arg3 IntExpr, arg4 Operations_researchModelCacheExprExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_ModelCache_InsertExprExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (arg1 SwigcptrModelCache) FindExprConstantExpression(arg2 IntExpr, arg3 int64, arg4 Operations_researchModelCacheExprConstantExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindExprConstantExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_979(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertExprConstantExpression(arg2 IntExpr, arg3 IntExpr, arg4 int64, arg5 Operations_researchModelCacheExprConstantExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ModelCache_InsertExprConstantExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_980(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrModelCache) FindExprExprExpression(arg2 IntExpr, arg3 IntExpr, arg4 Operations_researchModelCacheExprExprExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindExprExprExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertExprExprExpression(arg2 IntExpr, arg3 IntExpr, arg4 IntExpr, arg5 Operations_researchModelCacheExprExprExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	C._wrap_ModelCache_InsertExprExprExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrModelCache) FindExprExprConstantExpression(arg2 IntExpr, arg3 IntExpr, arg4 int64, arg5 Operations_researchModelCacheExprExprConstantExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindExprExprConstantExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_981(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertExprExprConstantExpression(arg2 IntExpr, arg3 IntExpr, arg4 IntExpr, arg5 int64, arg6 Operations_researchModelCacheExprExprConstantExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_ModelCache_InsertExprExprConstantExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_type_982(_swig_i_4), C.swig_intgo(_swig_i_5))
}

func (arg1 SwigcptrModelCache) FindVarConstantConstantExpression(arg2 IntVar, arg3 int64, arg4 int64, arg5 Operations_researchModelCacheVarConstantConstantExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindVarConstantConstantExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_983(_swig_i_2), C.swig_type_984(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertVarConstantConstantExpression(arg2 IntExpr, arg3 IntVar, arg4 int64, arg5 int64, arg6 Operations_researchModelCacheVarConstantConstantExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_ModelCache_InsertVarConstantConstantExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_985(_swig_i_3), C.swig_type_986(_swig_i_4), C.swig_intgo(_swig_i_5))
}

func (arg1 SwigcptrModelCache) FindVarConstantArrayExpression(arg2 IntVar, arg3 []int64, arg4 Operations_researchModelCacheVarConstantArrayExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindVarConstantArrayExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_987)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertVarConstantArrayExpression(arg2 IntExpr, arg3 IntVar, arg4 []int64, arg5 Operations_researchModelCacheVarConstantArrayExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ModelCache_InsertVarConstantArrayExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_988)(unsafe.Pointer(&_swig_i_3)), C.swig_intgo(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrModelCache) FindVarArrayExpression(arg2 IntVarVector, arg3 Operations_researchModelCacheVarArrayExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindVarArrayExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertVarArrayExpression(arg2 IntExpr, arg3 IntVarVector, arg4 Operations_researchModelCacheVarArrayExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_ModelCache_InsertVarArrayExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (arg1 SwigcptrModelCache) FindVarArrayConstantArrayExpression(arg2 IntVarVector, arg3 []int64, arg4 Operations_researchModelCacheVarArrayConstantArrayExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindVarArrayConstantArrayExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_989)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertVarArrayConstantArrayExpression(arg2 IntExpr, arg3 IntVarVector, arg4 []int64, arg5 Operations_researchModelCacheVarArrayConstantArrayExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ModelCache_InsertVarArrayConstantArrayExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_990)(unsafe.Pointer(&_swig_i_3)), C.swig_intgo(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrModelCache) FindVarArrayConstantExpression(arg2 IntVarVector, arg3 int64, arg4 Operations_researchModelCacheVarArrayConstantExpressionType) (_swig_ret IntExpr) {
	var swig_r IntExpr
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (IntExpr)(SwigcptrIntExpr(C._wrap_ModelCache_FindVarArrayConstantExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_991(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrModelCache) InsertVarArrayConstantExpression(arg2 IntExpr, arg3 IntVarVector, arg4 int64, arg5 Operations_researchModelCacheVarArrayConstantExpressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ModelCache_InsertVarArrayConstantExpression_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_992(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrModelCache) Solver() (_swig_ret Solver) {
	var swig_r Solver
	_swig_i_0 := arg1
	swig_r = (Solver)(SwigcptrSolver(C._wrap_ModelCache_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type ModelCache interface {
	Swigcptr() uintptr
	SwigIsModelCache()
	Clear()
	FindVoidConstraint(arg2 Operations_researchModelCacheVoidConstraintType) (_swig_ret Constraint)
	InsertVoidConstraint(arg2 Constraint, arg3 Operations_researchModelCacheVoidConstraintType)
	FindVarConstantConstraint(arg2 IntVar, arg3 int64, arg4 Operations_researchModelCacheVarConstantConstraintType) (_swig_ret Constraint)
	InsertVarConstantConstraint(arg2 Constraint, arg3 IntVar, arg4 int64, arg5 Operations_researchModelCacheVarConstantConstraintType)
	FindVarConstantConstantConstraint(arg2 IntVar, arg3 int64, arg4 int64, arg5 Operations_researchModelCacheVarConstantConstantConstraintType) (_swig_ret Constraint)
	InsertVarConstantConstantConstraint(arg2 Constraint, arg3 IntVar, arg4 int64, arg5 int64, arg6 Operations_researchModelCacheVarConstantConstantConstraintType)
	FindExprExprConstraint(arg2 IntExpr, arg3 IntExpr, arg4 Operations_researchModelCacheExprExprConstraintType) (_swig_ret Constraint)
	InsertExprExprConstraint(arg2 Constraint, arg3 IntExpr, arg4 IntExpr, arg5 Operations_researchModelCacheExprExprConstraintType)
	FindExprExpression(arg2 IntExpr, arg3 Operations_researchModelCacheExprExpressionType) (_swig_ret IntExpr)
	InsertExprExpression(arg2 IntExpr, arg3 IntExpr, arg4 Operations_researchModelCacheExprExpressionType)
	FindExprConstantExpression(arg2 IntExpr, arg3 int64, arg4 Operations_researchModelCacheExprConstantExpressionType) (_swig_ret IntExpr)
	InsertExprConstantExpression(arg2 IntExpr, arg3 IntExpr, arg4 int64, arg5 Operations_researchModelCacheExprConstantExpressionType)
	FindExprExprExpression(arg2 IntExpr, arg3 IntExpr, arg4 Operations_researchModelCacheExprExprExpressionType) (_swig_ret IntExpr)
	InsertExprExprExpression(arg2 IntExpr, arg3 IntExpr, arg4 IntExpr, arg5 Operations_researchModelCacheExprExprExpressionType)
	FindExprExprConstantExpression(arg2 IntExpr, arg3 IntExpr, arg4 int64, arg5 Operations_researchModelCacheExprExprConstantExpressionType) (_swig_ret IntExpr)
	InsertExprExprConstantExpression(arg2 IntExpr, arg3 IntExpr, arg4 IntExpr, arg5 int64, arg6 Operations_researchModelCacheExprExprConstantExpressionType)
	FindVarConstantConstantExpression(arg2 IntVar, arg3 int64, arg4 int64, arg5 Operations_researchModelCacheVarConstantConstantExpressionType) (_swig_ret IntExpr)
	InsertVarConstantConstantExpression(arg2 IntExpr, arg3 IntVar, arg4 int64, arg5 int64, arg6 Operations_researchModelCacheVarConstantConstantExpressionType)
	FindVarConstantArrayExpression(arg2 IntVar, arg3 []int64, arg4 Operations_researchModelCacheVarConstantArrayExpressionType) (_swig_ret IntExpr)
	InsertVarConstantArrayExpression(arg2 IntExpr, arg3 IntVar, arg4 []int64, arg5 Operations_researchModelCacheVarConstantArrayExpressionType)
	FindVarArrayExpression(arg2 IntVarVector, arg3 Operations_researchModelCacheVarArrayExpressionType) (_swig_ret IntExpr)
	InsertVarArrayExpression(arg2 IntExpr, arg3 IntVarVector, arg4 Operations_researchModelCacheVarArrayExpressionType)
	FindVarArrayConstantArrayExpression(arg2 IntVarVector, arg3 []int64, arg4 Operations_researchModelCacheVarArrayConstantArrayExpressionType) (_swig_ret IntExpr)
	InsertVarArrayConstantArrayExpression(arg2 IntExpr, arg3 IntVarVector, arg4 []int64, arg5 Operations_researchModelCacheVarArrayConstantArrayExpressionType)
	FindVarArrayConstantExpression(arg2 IntVarVector, arg3 int64, arg4 Operations_researchModelCacheVarArrayConstantExpressionType) (_swig_ret IntExpr)
	InsertVarArrayConstantExpression(arg2 IntExpr, arg3 IntVarVector, arg4 int64, arg5 Operations_researchModelCacheVarArrayConstantExpressionType)
	Solver() (_swig_ret Solver)
}

type SwigcptrRevPartialSequence uintptr

func (p SwigcptrRevPartialSequence) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRevPartialSequence) SwigIsRevPartialSequence() {
}

func NewRevPartialSequence__SWIG_0(arg1 []int) (_swig_ret RevPartialSequence) {
	var swig_r RevPartialSequence
	var _swig_i_0 []C.int

    _swig_i_0 = swigCopyintSliceIn(arg1)

	swig_r = (RevPartialSequence)(SwigcptrRevPartialSequence(C._wrap_new_RevPartialSequence__SWIG_0_constraintsolver_e5a2167dd134d32d(*(*C.swig_type_993)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	return swig_r
}

func NewRevPartialSequence__SWIG_1(arg1 int) (_swig_ret RevPartialSequence) {
	var swig_r RevPartialSequence
	_swig_i_0 := arg1
	swig_r = (RevPartialSequence)(SwigcptrRevPartialSequence(C._wrap_new_RevPartialSequence__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewRevPartialSequence(a ...interface{}) RevPartialSequence {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].([]int); !ok {
			goto check_1
		}
		return NewRevPartialSequence__SWIG_0(a[0].([]int))
	}
check_1:
	if argc == 1 {
		return NewRevPartialSequence__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func DeleteRevPartialSequence(arg1 RevPartialSequence) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RevPartialSequence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRevPartialSequence) NumFirstRanked() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RevPartialSequence_NumFirstRanked_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRevPartialSequence) NumLastRanked() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RevPartialSequence_NumLastRanked_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRevPartialSequence) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RevPartialSequence_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRevPartialSequence) RankFirst(arg2 Solver, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RevPartialSequence_RankFirst_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRevPartialSequence) RankLast(arg2 Solver, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RevPartialSequence_RankLast_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRevPartialSequence) IsRanked(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RevPartialSequence_IsRanked_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRevPartialSequence) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RevPartialSequence_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

type RevPartialSequence interface {
	Swigcptr() uintptr
	SwigIsRevPartialSequence()
	NumFirstRanked() (_swig_ret int)
	NumLastRanked() (_swig_ret int)
	Size() (_swig_ret int)
	RankFirst(arg2 Solver, arg3 int)
	RankLast(arg2 Solver, arg3 int)
	IsRanked(arg2 int) (_swig_ret bool)
	ToString() (_swig_ret string)
}

func AreAllBound(arg1 IntVarVector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (bool)(C._wrap_AreAllBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func AreAllBooleans(arg1 IntVarVector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (bool)(C._wrap_AreAllBooleans_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func AreAllBoundTo(arg1 IntVarVector, arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_AreAllBoundTo_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_995(_swig_i_1)))
	return swig_r
}

func MaxVarArray(arg1 IntVarVector) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (int64)(C._wrap_MaxVarArray_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func MinVarArray(arg1 IntVarVector) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (int64)(C._wrap_MinVarArray_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func PosIntDivUp(arg1 int64, arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_PosIntDivUp_constraintsolver_e5a2167dd134d32d(C.swig_type_999(_swig_i_0), C.swig_type_1000(_swig_i_1)))
	return swig_r
}

func PosIntDivDown(arg1 int64, arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_PosIntDivDown_constraintsolver_e5a2167dd134d32d(C.swig_type_1002(_swig_i_0), C.swig_type_1003(_swig_i_1)))
	return swig_r
}

func ToInt64Vector(arg1 []int) (_swig_ret []int64) {
	var swig_r []int64
	var _swig_i_0 []C.int

    _swig_i_0 = swigCopyintSliceIn(arg1)

	swig_r_p := C._wrap_ToInt64Vector_constraintsolver_e5a2167dd134d32d(*(*C.swig_type_1005)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	return swig_r
}

type SwigcptrRevInteger uintptr

func (p SwigcptrRevInteger) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRevInteger) SwigIsRevInteger() {
}

func NewRevInteger(arg1 int64) (_swig_ret RevInteger) {
	var swig_r RevInteger
	_swig_i_0 := arg1
	swig_r = (RevInteger)(SwigcptrRevInteger(C._wrap_new_RevInteger_constraintsolver_e5a2167dd134d32d(C.swig_type_1006(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRevInteger) Value() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RevInteger_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRevInteger) SetValue(arg2 Solver, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RevInteger_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_1008(_swig_i_2))
}

func DeleteRevInteger(arg1 RevInteger) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RevInteger_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type RevInteger interface {
	Swigcptr() uintptr
	SwigIsRevInteger()
	Value() (_swig_ret int64)
	SetValue(arg2 Solver, arg3 int64)
}

type SwigcptrRevBool uintptr

func (p SwigcptrRevBool) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRevBool) SwigIsRevBool() {
}

func NewRevBool(arg1 bool) (_swig_ret RevBool) {
	var swig_r RevBool
	_swig_i_0 := arg1
	swig_r = (RevBool)(SwigcptrRevBool(C._wrap_new_RevBool_constraintsolver_e5a2167dd134d32d(C._Bool(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRevBool) Value() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RevBool_Value_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRevBool) SetValue(arg2 Solver, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RevBool_SetValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func DeleteRevBool(arg1 RevBool) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RevBool_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type RevBool interface {
	Swigcptr() uintptr
	SwigIsRevBool()
	Value() (_swig_ret bool)
	SetValue(arg2 Solver, arg3 bool)
}

type SwigcptrAssignmentIntContainer uintptr

func (p SwigcptrAssignmentIntContainer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAssignmentIntContainer) SwigIsAssignmentIntContainer() {
}

func NewAssignmentIntContainer() (_swig_ret AssignmentIntContainer) {
	var swig_r AssignmentIntContainer
	swig_r = (AssignmentIntContainer)(SwigcptrAssignmentIntContainer(C._wrap_new_AssignmentIntContainer_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntContainer) Add(arg2 IntVar) (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_AssignmentIntContainer_Add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntContainer) FastAdd(arg2 IntVar) (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_AssignmentIntContainer_FastAdd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntContainer) AddAtPosition(arg2 IntVar, arg3 int) (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_AssignmentIntContainer_AddAtPosition_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntContainer) Clear() {
	_swig_i_0 := arg1
	C._wrap_AssignmentIntContainer_Clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentIntContainer) Resize(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AssignmentIntContainer_Resize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1009(_swig_i_1))
}

func (arg1 SwigcptrAssignmentIntContainer) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AssignmentIntContainer_Empty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntContainer) CopyIntersection(arg2 AssignmentIntContainer) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_AssignmentIntContainer_CopyIntersection_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignmentIntContainer) Copy(arg2 AssignmentIntContainer) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_AssignmentIntContainer_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignmentIntContainer) Contains(arg2 IntVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_AssignmentIntContainer_Contains_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntContainer) Element__SWIG_0(arg2 IntVar) (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_AssignmentIntContainer_Element__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntContainer) Element__SWIG_1(arg2 int) (_swig_ret IntVarElement) {
	var swig_r IntVarElement
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVarElement)(SwigcptrIntVarElement(C._wrap_AssignmentIntContainer_Element__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (p SwigcptrAssignmentIntContainer) Element(a ...interface{}) IntVarElement {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVar); !ok {
			goto check_1
		}
		return p.Element__SWIG_0(a[0].(IntVar))
	}
check_1:
	if argc == 1 {
		return p.Element__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignmentIntContainer) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_AssignmentIntContainer_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntContainer) Store() {
	_swig_i_0 := arg1
	C._wrap_AssignmentIntContainer_Store_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentIntContainer) Restore() {
	_swig_i_0 := arg1
	C._wrap_AssignmentIntContainer_Restore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentIntContainer) AreAllElementsBound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AssignmentIntContainer_AreAllElementsBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteAssignmentIntContainer(arg1 AssignmentIntContainer) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_AssignmentIntContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type AssignmentIntContainer interface {
	Swigcptr() uintptr
	SwigIsAssignmentIntContainer()
	Add(arg2 IntVar) (_swig_ret IntVarElement)
	FastAdd(arg2 IntVar) (_swig_ret IntVarElement)
	AddAtPosition(arg2 IntVar, arg3 int) (_swig_ret IntVarElement)
	Clear()
	Resize(arg2 int64)
	Empty() (_swig_ret bool)
	CopyIntersection(arg2 AssignmentIntContainer)
	Copy(arg2 AssignmentIntContainer)
	Contains(arg2 IntVar) (_swig_ret bool)
	Element(a ...interface{}) IntVarElement
	Size() (_swig_ret int)
	Store()
	Restore()
	AreAllElementsBound() (_swig_ret bool)
}

type SwigcptrAssignmentIntervalContainer uintptr

func (p SwigcptrAssignmentIntervalContainer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAssignmentIntervalContainer) SwigIsAssignmentIntervalContainer() {
}

func NewAssignmentIntervalContainer() (_swig_ret AssignmentIntervalContainer) {
	var swig_r AssignmentIntervalContainer
	swig_r = (AssignmentIntervalContainer)(SwigcptrAssignmentIntervalContainer(C._wrap_new_AssignmentIntervalContainer_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntervalContainer) Add(arg2 IntervalVar) (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_AssignmentIntervalContainer_Add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntervalContainer) FastAdd(arg2 IntervalVar) (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_AssignmentIntervalContainer_FastAdd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntervalContainer) AddAtPosition(arg2 IntervalVar, arg3 int) (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_AssignmentIntervalContainer_AddAtPosition_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntervalContainer) Clear() {
	_swig_i_0 := arg1
	C._wrap_AssignmentIntervalContainer_Clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentIntervalContainer) Resize(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AssignmentIntervalContainer_Resize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1010(_swig_i_1))
}

func (arg1 SwigcptrAssignmentIntervalContainer) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AssignmentIntervalContainer_Empty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntervalContainer) CopyIntersection(arg2 AssignmentIntervalContainer) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_AssignmentIntervalContainer_CopyIntersection_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignmentIntervalContainer) Copy(arg2 AssignmentIntervalContainer) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_AssignmentIntervalContainer_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignmentIntervalContainer) Contains(arg2 IntervalVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_AssignmentIntervalContainer_Contains_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntervalContainer) Element__SWIG_0(arg2 IntervalVar) (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_AssignmentIntervalContainer_Element__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntervalContainer) Element__SWIG_1(arg2 int) (_swig_ret IntervalVarElement) {
	var swig_r IntervalVarElement
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntervalVarElement)(SwigcptrIntervalVarElement(C._wrap_AssignmentIntervalContainer_Element__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (p SwigcptrAssignmentIntervalContainer) Element(a ...interface{}) IntervalVarElement {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntervalVar); !ok {
			goto check_1
		}
		return p.Element__SWIG_0(a[0].(IntervalVar))
	}
check_1:
	if argc == 1 {
		return p.Element__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignmentIntervalContainer) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_AssignmentIntervalContainer_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignmentIntervalContainer) Store() {
	_swig_i_0 := arg1
	C._wrap_AssignmentIntervalContainer_Store_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentIntervalContainer) Restore() {
	_swig_i_0 := arg1
	C._wrap_AssignmentIntervalContainer_Restore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentIntervalContainer) AreAllElementsBound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AssignmentIntervalContainer_AreAllElementsBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteAssignmentIntervalContainer(arg1 AssignmentIntervalContainer) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_AssignmentIntervalContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type AssignmentIntervalContainer interface {
	Swigcptr() uintptr
	SwigIsAssignmentIntervalContainer()
	Add(arg2 IntervalVar) (_swig_ret IntervalVarElement)
	FastAdd(arg2 IntervalVar) (_swig_ret IntervalVarElement)
	AddAtPosition(arg2 IntervalVar, arg3 int) (_swig_ret IntervalVarElement)
	Clear()
	Resize(arg2 int64)
	Empty() (_swig_ret bool)
	CopyIntersection(arg2 AssignmentIntervalContainer)
	Copy(arg2 AssignmentIntervalContainer)
	Contains(arg2 IntervalVar) (_swig_ret bool)
	Element(a ...interface{}) IntervalVarElement
	Size() (_swig_ret int)
	Store()
	Restore()
	AreAllElementsBound() (_swig_ret bool)
}

type SwigcptrAssignmentSequenceContainer uintptr

func (p SwigcptrAssignmentSequenceContainer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAssignmentSequenceContainer) SwigIsAssignmentSequenceContainer() {
}

func NewAssignmentSequenceContainer() (_swig_ret AssignmentSequenceContainer) {
	var swig_r AssignmentSequenceContainer
	swig_r = (AssignmentSequenceContainer)(SwigcptrAssignmentSequenceContainer(C._wrap_new_AssignmentSequenceContainer_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func (arg1 SwigcptrAssignmentSequenceContainer) Add(arg2 SequenceVar) (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_AssignmentSequenceContainer_Add_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentSequenceContainer) FastAdd(arg2 SequenceVar) (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_AssignmentSequenceContainer_FastAdd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentSequenceContainer) AddAtPosition(arg2 SequenceVar, arg3 int) (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_AssignmentSequenceContainer_AddAtPosition_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrAssignmentSequenceContainer) Clear() {
	_swig_i_0 := arg1
	C._wrap_AssignmentSequenceContainer_Clear_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentSequenceContainer) Resize(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AssignmentSequenceContainer_Resize_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1011(_swig_i_1))
}

func (arg1 SwigcptrAssignmentSequenceContainer) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AssignmentSequenceContainer_Empty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignmentSequenceContainer) CopyIntersection(arg2 AssignmentSequenceContainer) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_AssignmentSequenceContainer_CopyIntersection_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignmentSequenceContainer) Copy(arg2 AssignmentSequenceContainer) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_AssignmentSequenceContainer_Copy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAssignmentSequenceContainer) Contains(arg2 SequenceVar) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_AssignmentSequenceContainer_Contains_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrAssignmentSequenceContainer) Element__SWIG_0(arg2 SequenceVar) (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_AssignmentSequenceContainer_Element__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAssignmentSequenceContainer) Element__SWIG_1(arg2 int) (_swig_ret SequenceVarElement) {
	var swig_r SequenceVarElement
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SequenceVarElement)(SwigcptrSequenceVarElement(C._wrap_AssignmentSequenceContainer_Element__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (p SwigcptrAssignmentSequenceContainer) Element(a ...interface{}) SequenceVarElement {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SequenceVar); !ok {
			goto check_1
		}
		return p.Element__SWIG_0(a[0].(SequenceVar))
	}
check_1:
	if argc == 1 {
		return p.Element__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAssignmentSequenceContainer) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_AssignmentSequenceContainer_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAssignmentSequenceContainer) Store() {
	_swig_i_0 := arg1
	C._wrap_AssignmentSequenceContainer_Store_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentSequenceContainer) Restore() {
	_swig_i_0 := arg1
	C._wrap_AssignmentSequenceContainer_Restore_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAssignmentSequenceContainer) AreAllElementsBound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AssignmentSequenceContainer_AreAllElementsBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteAssignmentSequenceContainer(arg1 AssignmentSequenceContainer) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_AssignmentSequenceContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type AssignmentSequenceContainer interface {
	Swigcptr() uintptr
	SwigIsAssignmentSequenceContainer()
	Add(arg2 SequenceVar) (_swig_ret SequenceVarElement)
	FastAdd(arg2 SequenceVar) (_swig_ret SequenceVarElement)
	AddAtPosition(arg2 SequenceVar, arg3 int) (_swig_ret SequenceVarElement)
	Clear()
	Resize(arg2 int64)
	Empty() (_swig_ret bool)
	CopyIntersection(arg2 AssignmentSequenceContainer)
	Copy(arg2 AssignmentSequenceContainer)
	Contains(arg2 SequenceVar) (_swig_ret bool)
	Element(a ...interface{}) SequenceVarElement
	Size() (_swig_ret int)
	Store()
	Restore()
	AreAllElementsBound() (_swig_ret bool)
}

type _swig_DirectorRoutingTransitCallback1Impl struct {
	SwigcptrRoutingTransitCallback1Impl
	v interface{}
}

func (p *_swig_DirectorRoutingTransitCallback1Impl) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrRoutingTransitCallback1Impl)
}

func (p *_swig_DirectorRoutingTransitCallback1Impl) SwigIsRoutingTransitCallback1Impl() {
}

func (p *_swig_DirectorRoutingTransitCallback1Impl) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorRoutingTransitCallback1Impl(v interface{}) RoutingTransitCallback1Impl {
	p := &_swig_DirectorRoutingTransitCallback1Impl{0, v}
	p.SwigcptrRoutingTransitCallback1Impl = SwigcptrRoutingTransitCallback1Impl(C._wrap__swig_NewDirectorRoutingTransitCallback1ImplRoutingTransitCallback1Impl_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorRoutingTransitCallback1Impl(arg1 RoutingTransitCallback1Impl) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorRoutingTransitCallback1Impl_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_RoutingTransitCallback1Impl_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_RoutingTransitCallback1Impl_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorRoutingTransitCallback1Impl).SwigcptrRoutingTransitCallback1Impl = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceRoutingTransitCallback1ImplCall interface {
	Call(int64) int64
}

func (swig_p *_swig_DirectorRoutingTransitCallback1Impl) Call(arg0 int64) int64 {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRoutingTransitCallback1ImplCall); swig_ok {
		return swig_g.Call(arg0)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorRoutingTransitCallback1Impl_callback_Call_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRoutingTransitCallback1Impl_callback_Call_constraintsolver_e5a2167dd134d32d(swig_c int, arg0 int64) (swig_result int64) {
	var swig_r int64
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRoutingTransitCallback1Impl)
	swig_r = swig_p.Call(arg0)
	return swig_r
}

type SwigcptrRoutingTransitCallback1Impl uintptr

func (p SwigcptrRoutingTransitCallback1Impl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRoutingTransitCallback1Impl) SwigIsRoutingTransitCallback1Impl() {
}

func (p SwigcptrRoutingTransitCallback1Impl) DirectorInterface() interface{} {
	return nil
}

func DeleteRoutingTransitCallback1Impl(arg1 RoutingTransitCallback1Impl) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RoutingTransitCallback1Impl_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRoutingTransitCallback1Impl) Call(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingTransitCallback1Impl_Call_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1013(_swig_i_1)))
	return swig_r
}

type RoutingTransitCallback1Impl interface {
	Swigcptr() uintptr
	SwigIsRoutingTransitCallback1Impl()
	DirectorInterface() interface{}
	Call(arg2 int64) (_swig_ret int64)
}

type SwigcptrRoutingTransitCallback1 uintptr

func (p SwigcptrRoutingTransitCallback1) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRoutingTransitCallback1) SwigIsRoutingTransitCallback1() {
}

func NewRoutingTransitCallback1__SWIG_0(arg1 RoutingTransitCallback1) (_swig_ret RoutingTransitCallback1) {
	var swig_r RoutingTransitCallback1
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RoutingTransitCallback1)(SwigcptrRoutingTransitCallback1(C._wrap_new_RoutingTransitCallback1__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingTransitCallback1) Call(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingTransitCallback1_call_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1015(_swig_i_1)))
	return swig_r
}

func NewRoutingTransitCallback1__SWIG_1(arg1 *_swig_fnptr) (_swig_ret RoutingTransitCallback1) {
	var swig_r RoutingTransitCallback1
	_swig_i_0 := arg1
	swig_r = (RoutingTransitCallback1)(SwigcptrRoutingTransitCallback1(C._wrap_new_RoutingTransitCallback1__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_voidp(_swig_i_0))))
	return swig_r
}

func NewRoutingTransitCallback1__SWIG_2(arg1 RoutingTransitCallback1Impl) (_swig_ret RoutingTransitCallback1) {
	var swig_r RoutingTransitCallback1
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RoutingTransitCallback1)(SwigcptrRoutingTransitCallback1(C._wrap_new_RoutingTransitCallback1__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRoutingTransitCallback1(a ...interface{}) RoutingTransitCallback1 {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(RoutingTransitCallback1); !ok {
			goto check_1
		}
		return NewRoutingTransitCallback1__SWIG_0(a[0].(RoutingTransitCallback1))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(*_swig_fnptr); !ok {
			goto check_2
		}
		return NewRoutingTransitCallback1__SWIG_1(a[0].(*_swig_fnptr))
	}
check_2:
	if argc == 1 {
		return NewRoutingTransitCallback1__SWIG_2(a[0].(RoutingTransitCallback1Impl))
	}
	panic("No match for overloaded function call")
}

func DeleteRoutingTransitCallback1(arg1 RoutingTransitCallback1) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RoutingTransitCallback1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type RoutingTransitCallback1 interface {
	Swigcptr() uintptr
	SwigIsRoutingTransitCallback1()
	Call(arg2 int64) (_swig_ret int64)
}

type _swig_DirectorRoutingTransitCallback2Impl struct {
	SwigcptrRoutingTransitCallback2Impl
	v interface{}
}

func (p *_swig_DirectorRoutingTransitCallback2Impl) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrRoutingTransitCallback2Impl)
}

func (p *_swig_DirectorRoutingTransitCallback2Impl) SwigIsRoutingTransitCallback2Impl() {
}

func (p *_swig_DirectorRoutingTransitCallback2Impl) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorRoutingTransitCallback2Impl(v interface{}) RoutingTransitCallback2Impl {
	p := &_swig_DirectorRoutingTransitCallback2Impl{0, v}
	p.SwigcptrRoutingTransitCallback2Impl = SwigcptrRoutingTransitCallback2Impl(C._wrap__swig_NewDirectorRoutingTransitCallback2ImplRoutingTransitCallback2Impl_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorRoutingTransitCallback2Impl(arg1 RoutingTransitCallback2Impl) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorRoutingTransitCallback2Impl_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_RoutingTransitCallback2Impl_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_RoutingTransitCallback2Impl_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorRoutingTransitCallback2Impl).SwigcptrRoutingTransitCallback2Impl = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceRoutingTransitCallback2ImplCall interface {
	Call(int64, int64) int64
}

func (swig_p *_swig_DirectorRoutingTransitCallback2Impl) Call(arg0 int64, arg1 int64) int64 {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRoutingTransitCallback2ImplCall); swig_ok {
		return swig_g.Call(arg0, arg1)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorRoutingTransitCallback2Impl_callback_Call_constraintsolver_e5a2167dd134d32d
func Swig_DirectorRoutingTransitCallback2Impl_callback_Call_constraintsolver_e5a2167dd134d32d(swig_c int, arg0 int64, arg1 int64) (swig_result int64) {
	var swig_r int64
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRoutingTransitCallback2Impl)
	swig_r = swig_p.Call(arg0, arg1)
	return swig_r
}

type SwigcptrRoutingTransitCallback2Impl uintptr

func (p SwigcptrRoutingTransitCallback2Impl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRoutingTransitCallback2Impl) SwigIsRoutingTransitCallback2Impl() {
}

func (p SwigcptrRoutingTransitCallback2Impl) DirectorInterface() interface{} {
	return nil
}

func DeleteRoutingTransitCallback2Impl(arg1 RoutingTransitCallback2Impl) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RoutingTransitCallback2Impl_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRoutingTransitCallback2Impl) Call(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_RoutingTransitCallback2Impl_Call_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1017(_swig_i_1), C.swig_type_1018(_swig_i_2)))
	return swig_r
}

type RoutingTransitCallback2Impl interface {
	Swigcptr() uintptr
	SwigIsRoutingTransitCallback2Impl()
	DirectorInterface() interface{}
	Call(arg2 int64, arg3 int64) (_swig_ret int64)
}

type SwigcptrRoutingTransitCallback2 uintptr

func (p SwigcptrRoutingTransitCallback2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRoutingTransitCallback2) SwigIsRoutingTransitCallback2() {
}

func NewRoutingTransitCallback2__SWIG_0(arg1 RoutingTransitCallback2) (_swig_ret RoutingTransitCallback2) {
	var swig_r RoutingTransitCallback2
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RoutingTransitCallback2)(SwigcptrRoutingTransitCallback2(C._wrap_new_RoutingTransitCallback2__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingTransitCallback2) Call(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_RoutingTransitCallback2_call_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1020(_swig_i_1), C.swig_type_1021(_swig_i_2)))
	return swig_r
}

func NewRoutingTransitCallback2__SWIG_1(arg1 *_swig_fnptr) (_swig_ret RoutingTransitCallback2) {
	var swig_r RoutingTransitCallback2
	_swig_i_0 := arg1
	swig_r = (RoutingTransitCallback2)(SwigcptrRoutingTransitCallback2(C._wrap_new_RoutingTransitCallback2__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_voidp(_swig_i_0))))
	return swig_r
}

func NewRoutingTransitCallback2__SWIG_2(arg1 RoutingTransitCallback2Impl) (_swig_ret RoutingTransitCallback2) {
	var swig_r RoutingTransitCallback2
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RoutingTransitCallback2)(SwigcptrRoutingTransitCallback2(C._wrap_new_RoutingTransitCallback2__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRoutingTransitCallback2(a ...interface{}) RoutingTransitCallback2 {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(RoutingTransitCallback2); !ok {
			goto check_1
		}
		return NewRoutingTransitCallback2__SWIG_0(a[0].(RoutingTransitCallback2))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(*_swig_fnptr); !ok {
			goto check_2
		}
		return NewRoutingTransitCallback2__SWIG_1(a[0].(*_swig_fnptr))
	}
check_2:
	if argc == 1 {
		return NewRoutingTransitCallback2__SWIG_2(a[0].(RoutingTransitCallback2Impl))
	}
	panic("No match for overloaded function call")
}

func DeleteRoutingTransitCallback2(arg1 RoutingTransitCallback2) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RoutingTransitCallback2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type RoutingTransitCallback2 interface {
	Swigcptr() uintptr
	SwigIsRoutingTransitCallback2()
	Call(arg2 int64, arg3 int64) (_swig_ret int64)
}

type _swig_DirectorAtSolutionCallbackImpl struct {
	SwigcptrAtSolutionCallbackImpl
	v interface{}
}

func (p *_swig_DirectorAtSolutionCallbackImpl) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrAtSolutionCallbackImpl)
}

func (p *_swig_DirectorAtSolutionCallbackImpl) SwigIsAtSolutionCallbackImpl() {
}

func (p *_swig_DirectorAtSolutionCallbackImpl) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorAtSolutionCallbackImpl(v interface{}) AtSolutionCallbackImpl {
	p := &_swig_DirectorAtSolutionCallbackImpl{0, v}
	p.SwigcptrAtSolutionCallbackImpl = SwigcptrAtSolutionCallbackImpl(C._wrap__swig_NewDirectorAtSolutionCallbackImplAtSolutionCallbackImpl_constraintsolver_e5a2167dd134d32d(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorAtSolutionCallbackImpl(arg1 AtSolutionCallbackImpl) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorAtSolutionCallbackImpl_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_AtSolutionCallbackImpl_constraintsolver_e5a2167dd134d32d
func Swiggo_DeleteDirector_AtSolutionCallbackImpl_constraintsolver_e5a2167dd134d32d(c int) {
	swigDirectorLookup(c).(*_swig_DirectorAtSolutionCallbackImpl).SwigcptrAtSolutionCallbackImpl = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceAtSolutionCallbackImplCall interface {
	Call()
}

func (swig_p *_swig_DirectorAtSolutionCallbackImpl) Call() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceAtSolutionCallbackImplCall); swig_ok {
		swig_g.Call()
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorAtSolutionCallbackImpl_callback_Call_constraintsolver_e5a2167dd134d32d
func Swig_DirectorAtSolutionCallbackImpl_callback_Call_constraintsolver_e5a2167dd134d32d(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorAtSolutionCallbackImpl)
	swig_p.Call()
}

type SwigcptrAtSolutionCallbackImpl uintptr

func (p SwigcptrAtSolutionCallbackImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAtSolutionCallbackImpl) SwigIsAtSolutionCallbackImpl() {
}

func (p SwigcptrAtSolutionCallbackImpl) DirectorInterface() interface{} {
	return nil
}

func DeleteAtSolutionCallbackImpl(arg1 AtSolutionCallbackImpl) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_AtSolutionCallbackImpl_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAtSolutionCallbackImpl) Call() {
	_swig_i_0 := arg1
	C._wrap_AtSolutionCallbackImpl_Call_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type AtSolutionCallbackImpl interface {
	Swigcptr() uintptr
	SwigIsAtSolutionCallbackImpl()
	DirectorInterface() interface{}
	Call()
}

type SwigcptrAtSolutionCallback uintptr

func (p SwigcptrAtSolutionCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAtSolutionCallback) SwigIsAtSolutionCallback() {
}

func NewAtSolutionCallback__SWIG_0(arg1 AtSolutionCallback) (_swig_ret AtSolutionCallback) {
	var swig_r AtSolutionCallback
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (AtSolutionCallback)(SwigcptrAtSolutionCallback(C._wrap_new_AtSolutionCallback__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAtSolutionCallback) Call() {
	_swig_i_0 := arg1
	C._wrap_AtSolutionCallback_call_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func NewAtSolutionCallback__SWIG_1(arg1 *_swig_fnptr) (_swig_ret AtSolutionCallback) {
	var swig_r AtSolutionCallback
	_swig_i_0 := arg1
	swig_r = (AtSolutionCallback)(SwigcptrAtSolutionCallback(C._wrap_new_AtSolutionCallback__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_voidp(_swig_i_0))))
	return swig_r
}

func NewAtSolutionCallback__SWIG_2(arg1 AtSolutionCallbackImpl) (_swig_ret AtSolutionCallback) {
	var swig_r AtSolutionCallback
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (AtSolutionCallback)(SwigcptrAtSolutionCallback(C._wrap_new_AtSolutionCallback__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewAtSolutionCallback(a ...interface{}) AtSolutionCallback {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(AtSolutionCallback); !ok {
			goto check_1
		}
		return NewAtSolutionCallback__SWIG_0(a[0].(AtSolutionCallback))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(*_swig_fnptr); !ok {
			goto check_2
		}
		return NewAtSolutionCallback__SWIG_1(a[0].(*_swig_fnptr))
	}
check_2:
	if argc == 1 {
		return NewAtSolutionCallback__SWIG_2(a[0].(AtSolutionCallbackImpl))
	}
	panic("No match for overloaded function call")
}

func DeleteAtSolutionCallback(arg1 AtSolutionCallback) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_AtSolutionCallback_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type AtSolutionCallback interface {
	Swigcptr() uintptr
	SwigIsAtSolutionCallback()
	Call()
}

type SwigcptrRoutingIndexManager uintptr

func (p SwigcptrRoutingIndexManager) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRoutingIndexManager) SwigIsRoutingIndexManager() {
}

func NewRoutingIndexManager(arg1 int, arg2 int, arg3 []int, arg4 []int) (_swig_ret RoutingIndexManager) {
	var swig_r RoutingIndexManager
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 []C.int

    _swig_i_2 = swigCopyRoutingNodeIndexSliceIn(arg3)

	var _swig_i_3 []C.int

    _swig_i_3 = swigCopyRoutingNodeIndexSliceIn(arg4)

	swig_r = (RoutingIndexManager)(SwigcptrRoutingIndexManager(C._wrap_new_RoutingIndexManager_constraintsolver_e5a2167dd134d32d(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_1022)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_1023)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	return swig_r
}

func (arg1 SwigcptrRoutingIndexManager) GetNumberOfNodes() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingIndexManager_GetNumberOfNodes_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingIndexManager) GetNumberOfVehicles() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingIndexManager_GetNumberOfVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingIndexManager) GetNumberOfIndices() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingIndexManager_GetNumberOfIndices_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingIndexManager) GetStartIndex(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingIndexManager_GetStartIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingIndexManager) GetEndIndex(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingIndexManager_GetEndIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingIndexManager) NodeToIndex(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	var _swig_i_1 int
{
  _swig_i_1 = arg2
}
	swig_r = (int64)(C._wrap_RoutingIndexManager_NodeToIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingIndexManager) NodesToIndices(arg2 []int) (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyRoutingNodeIndexSliceIn(arg2)

	swig_r_p := C._wrap_RoutingIndexManager_NodesToIndices_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1028)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrRoutingIndexManager) IndexToNode(arg2 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingIndexManager_IndexToNode_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1029(_swig_i_1)))
	var swig_r_1 int
{
  return int(swig_r);
}
	return swig_r_1
}

func DeleteRoutingIndexManager(arg1 RoutingIndexManager) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RoutingIndexManager_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type RoutingIndexManager interface {
	Swigcptr() uintptr
	SwigIsRoutingIndexManager()
	GetNumberOfNodes() (_swig_ret int)
	GetNumberOfVehicles() (_swig_ret int)
	GetNumberOfIndices() (_swig_ret int)
	GetStartIndex(arg2 int) (_swig_ret int64)
	GetEndIndex(arg2 int) (_swig_ret int64)
	NodeToIndex(arg2 int) (_swig_ret int64)
	NodesToIndices(arg2 []int) (_swig_ret []int64)
	IndexToNode(arg2 int64) (_swig_ret int)
}

func DefaultRoutingModelParameters() (_swig_ret RoutingModelParameters) {
	var swig_r []byte
	swig_r_p := C._wrap_DefaultRoutingModelParameters_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*[]byte)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 RoutingModelParameters
{
  // go
  if err := proto.Unmarshal(swig_r, &swig_r_1); err != nil {
    panic(fmt.Sprintf("Unable to parse RoutingModelParameters protocol message: %v", err))
  }

  // free dynamic mem
  p := *(*swig_goslice)(unsafe.Pointer(&swig_r))
  Swig_free(p.arr)
}
	return swig_r_1
}

func DefaultRoutingSearchParameters() (_swig_ret RoutingSearchParameters) {
	var swig_r []byte
	swig_r_p := C._wrap_DefaultRoutingSearchParameters_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*[]byte)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 RoutingSearchParameters
{
  // go
  if err := proto.Unmarshal(swig_r, &swig_r_1); err != nil {
    panic(fmt.Sprintf("Unable to parse RoutingSearchParameters protocol message: %v", err))
  }

  // free dynamic mem
  p := *(*swig_goslice)(unsafe.Pointer(&swig_r))
  Swig_free(p.arr)
}
	return swig_r_1
}

func DefaultSecondaryRoutingSearchParameters() (_swig_ret RoutingSearchParameters) {
	var swig_r []byte
	swig_r_p := C._wrap_DefaultSecondaryRoutingSearchParameters_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*[]byte)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 RoutingSearchParameters
{
  // go
  if err := proto.Unmarshal(swig_r, &swig_r_1); err != nil {
    panic(fmt.Sprintf("Unable to parse RoutingSearchParameters protocol message: %v", err))
  }

  // free dynamic mem
  p := *(*swig_goslice)(unsafe.Pointer(&swig_r))
  Swig_free(p.arr)
}
	return swig_r_1
}

func FindErrorInRoutingSearchParameters(arg1 RoutingSearchParameters) (_swig_ret string) {
	var swig_r string
	var _swig_i_0 []byte
{
  // go
  bytes, err := proto.Marshal(&arg1)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_0 = bytes
}
	swig_r_p := C._wrap_FindErrorInRoutingSearchParameters_constraintsolver_e5a2167dd134d32d(*(*C.swig_type_1034)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func FindErrorsInRoutingSearchParameters(arg1 RoutingSearchParameters) (_swig_ret Std_vector_Sl_std_string_Sg_) {
	var swig_r Std_vector_Sl_std_string_Sg_
	var _swig_i_0 []byte
{
  // go
  bytes, err := proto.Marshal(&arg1)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_0 = bytes
}
	swig_r = (Std_vector_Sl_std_string_Sg_)(SwigcptrStd_vector_Sl_std_string_Sg_(C._wrap_FindErrorsInRoutingSearchParameters_constraintsolver_e5a2167dd134d32d(*(*C.swig_type_1035)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	return swig_r
}

type SwigcptrPathsMetadata uintptr

func (p SwigcptrPathsMetadata) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPathsMetadata) SwigIsPathsMetadata() {
}

func NewPathsMetadata(arg1 RoutingIndexManager) (_swig_ret PathsMetadata) {
	var swig_r PathsMetadata
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (PathsMetadata)(SwigcptrPathsMetadata(C._wrap_new_PathsMetadata_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrPathsMetadata) IsStart(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_PathsMetadata_IsStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1036(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPathsMetadata) IsEnd(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_PathsMetadata_IsEnd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1037(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPathsMetadata) GetPath(arg2 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_PathsMetadata_GetPath_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1038(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPathsMetadata) NumPaths() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_PathsMetadata_NumPaths_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPathsMetadata) Paths() (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PathsMetadata_Paths_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrPathsMetadata) Starts() (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PathsMetadata_Starts_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrPathsMetadata) Ends() (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PathsMetadata_Ends_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func DeletePathsMetadata(arg1 PathsMetadata) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_PathsMetadata_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type PathsMetadata interface {
	Swigcptr() uintptr
	SwigIsPathsMetadata()
	IsStart(arg2 int64) (_swig_ret bool)
	IsEnd(arg2 int64) (_swig_ret bool)
	GetPath(arg2 int64) (_swig_ret int)
	NumPaths() (_swig_ret int)
	Paths() (_swig_ret []int64)
	Starts() (_swig_ret []int64)
	Ends() (_swig_ret []int64)
}

type SwigcptrRoutingModel uintptr

func (p SwigcptrRoutingModel) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRoutingModel) SwigIsRoutingModel() {
}

type Operations_researchRoutingModelStatus int
func _swig_getRoutingModel_ROUTING_NOT_SOLVED_RoutingModel() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_ROUTING_NOT_SOLVED_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelROUTING_NOT_SOLVED Operations_researchRoutingModelStatus = _swig_getRoutingModel_ROUTING_NOT_SOLVED_RoutingModel()
func _swig_getRoutingModel_ROUTING_SUCCESS_RoutingModel() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_ROUTING_SUCCESS_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelROUTING_SUCCESS Operations_researchRoutingModelStatus = _swig_getRoutingModel_ROUTING_SUCCESS_RoutingModel()
func _swig_getRoutingModel_ROUTING_PARTIAL_SUCCESS_LOCAL_OPTIMUM_NOT_REACHED_RoutingModel() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_ROUTING_PARTIAL_SUCCESS_LOCAL_OPTIMUM_NOT_REACHED_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelROUTING_PARTIAL_SUCCESS_LOCAL_OPTIMUM_NOT_REACHED Operations_researchRoutingModelStatus = _swig_getRoutingModel_ROUTING_PARTIAL_SUCCESS_LOCAL_OPTIMUM_NOT_REACHED_RoutingModel()
func _swig_getRoutingModel_ROUTING_FAIL_RoutingModel() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_ROUTING_FAIL_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelROUTING_FAIL Operations_researchRoutingModelStatus = _swig_getRoutingModel_ROUTING_FAIL_RoutingModel()
func _swig_getRoutingModel_ROUTING_FAIL_TIMEOUT_RoutingModel() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_ROUTING_FAIL_TIMEOUT_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelROUTING_FAIL_TIMEOUT Operations_researchRoutingModelStatus = _swig_getRoutingModel_ROUTING_FAIL_TIMEOUT_RoutingModel()
func _swig_getRoutingModel_ROUTING_INVALID_RoutingModel() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_ROUTING_INVALID_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelROUTING_INVALID Operations_researchRoutingModelStatus = _swig_getRoutingModel_ROUTING_INVALID_RoutingModel()
func _swig_getRoutingModel_ROUTING_INFEASIBLE_RoutingModel() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_ROUTING_INFEASIBLE_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelROUTING_INFEASIBLE Operations_researchRoutingModelStatus = _swig_getRoutingModel_ROUTING_INFEASIBLE_RoutingModel()
func _swig_getRoutingModel_ROUTING_OPTIMAL_RoutingModel() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_ROUTING_OPTIMAL_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelROUTING_OPTIMAL Operations_researchRoutingModelStatus = _swig_getRoutingModel_ROUTING_OPTIMAL_RoutingModel()
type Operations_researchRoutingModelPickupAndDeliveryPolicy int
func _swig_getRoutingModel_PICKUP_AND_DELIVERY_NO_ORDER_RoutingModel() (_swig_ret Operations_researchRoutingModelPickupAndDeliveryPolicy) {
	var swig_r Operations_researchRoutingModelPickupAndDeliveryPolicy
	swig_r = (Operations_researchRoutingModelPickupAndDeliveryPolicy)(C._wrap_PICKUP_AND_DELIVERY_NO_ORDER_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelPICKUP_AND_DELIVERY_NO_ORDER Operations_researchRoutingModelPickupAndDeliveryPolicy = _swig_getRoutingModel_PICKUP_AND_DELIVERY_NO_ORDER_RoutingModel()
func _swig_getRoutingModel_PICKUP_AND_DELIVERY_LIFO_RoutingModel() (_swig_ret Operations_researchRoutingModelPickupAndDeliveryPolicy) {
	var swig_r Operations_researchRoutingModelPickupAndDeliveryPolicy
	swig_r = (Operations_researchRoutingModelPickupAndDeliveryPolicy)(C._wrap_PICKUP_AND_DELIVERY_LIFO_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelPICKUP_AND_DELIVERY_LIFO Operations_researchRoutingModelPickupAndDeliveryPolicy = _swig_getRoutingModel_PICKUP_AND_DELIVERY_LIFO_RoutingModel()
func _swig_getRoutingModel_PICKUP_AND_DELIVERY_FIFO_RoutingModel() (_swig_ret Operations_researchRoutingModelPickupAndDeliveryPolicy) {
	var swig_r Operations_researchRoutingModelPickupAndDeliveryPolicy
	swig_r = (Operations_researchRoutingModelPickupAndDeliveryPolicy)(C._wrap_PICKUP_AND_DELIVERY_FIFO_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelPICKUP_AND_DELIVERY_FIFO Operations_researchRoutingModelPickupAndDeliveryPolicy = _swig_getRoutingModel_PICKUP_AND_DELIVERY_FIFO_RoutingModel()
func GetRoutingModelKNoPenalty() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_RoutingModel_kNoPenalty_get_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

func GetRoutingModelKNoDisjunction() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RoutingModel_kNoDisjunction_get_constraintsolver_e5a2167dd134d32d())
	var swig_r_1 int
{
  return int(swig_r);
}
	return swig_r_1
}

func GetRoutingModelKNoDimension() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RoutingModel_kNoDimension_get_constraintsolver_e5a2167dd134d32d())
	var swig_r_1 int
{
  return int(swig_r);
}
	return swig_r_1
}

func NewRoutingModel__SWIG_0(arg1 RoutingIndexManager) (_swig_ret RoutingModel) {
	var swig_r RoutingModel
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RoutingModel)(SwigcptrRoutingModel(C._wrap_new_RoutingModel__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRoutingModel__SWIG_1(arg1 RoutingIndexManager, arg2 RoutingModelParameters) (_swig_ret RoutingModel) {
	var swig_r RoutingModel
	_swig_i_0 := getSwigcptr(arg1)
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	swig_r = (RoutingModel)(SwigcptrRoutingModel(C._wrap_new_RoutingModel__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1043)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func NewRoutingModel(a ...interface{}) RoutingModel {
	argc := len(a)
	if argc == 1 {
		return NewRoutingModel__SWIG_0(a[0].(RoutingIndexManager))
	}
	if argc == 2 {
		return NewRoutingModel__SWIG_1(a[0].(RoutingIndexManager), a[1].(RoutingModelParameters))
	}
	panic("No match for overloaded function call")
}

func DeleteRoutingModel(arg1 RoutingModel) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RoutingModel_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type Operations_researchRoutingModelTransitEvaluatorSign int
func _swig_getRoutingModel_kTransitEvaluatorSignUnknown_RoutingModel() (_swig_ret Operations_researchRoutingModelTransitEvaluatorSign) {
	var swig_r Operations_researchRoutingModelTransitEvaluatorSign
	swig_r = (Operations_researchRoutingModelTransitEvaluatorSign)(C._wrap_kTransitEvaluatorSignUnknown_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelKTransitEvaluatorSignUnknown Operations_researchRoutingModelTransitEvaluatorSign = _swig_getRoutingModel_kTransitEvaluatorSignUnknown_RoutingModel()
func _swig_getRoutingModel_kTransitEvaluatorSignPositiveOrZero_RoutingModel() (_swig_ret Operations_researchRoutingModelTransitEvaluatorSign) {
	var swig_r Operations_researchRoutingModelTransitEvaluatorSign
	swig_r = (Operations_researchRoutingModelTransitEvaluatorSign)(C._wrap_kTransitEvaluatorSignPositiveOrZero_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelKTransitEvaluatorSignPositiveOrZero Operations_researchRoutingModelTransitEvaluatorSign = _swig_getRoutingModel_kTransitEvaluatorSignPositiveOrZero_RoutingModel()
func _swig_getRoutingModel_kTransitEvaluatorSignNegativeOrZero_RoutingModel() (_swig_ret Operations_researchRoutingModelTransitEvaluatorSign) {
	var swig_r Operations_researchRoutingModelTransitEvaluatorSign
	swig_r = (Operations_researchRoutingModelTransitEvaluatorSign)(C._wrap_kTransitEvaluatorSignNegativeOrZero_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelKTransitEvaluatorSignNegativeOrZero Operations_researchRoutingModelTransitEvaluatorSign = _swig_getRoutingModel_kTransitEvaluatorSignNegativeOrZero_RoutingModel()
func (arg1 SwigcptrRoutingModel) RegisterUnaryTransitVector(arg2 []int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingModel_RegisterUnaryTransitVector_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1044)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) RegisterUnaryTransitCallback__SWIG_0(arg2 RoutingTransitCallback1, arg3 Operations_researchRoutingModelTransitEvaluatorSign) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_RoutingModel_RegisterUnaryTransitCallback__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) RegisterUnaryTransitCallback__SWIG_1(arg2 RoutingTransitCallback1) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_RoutingModel_RegisterUnaryTransitCallback__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRoutingModel) RegisterUnaryTransitCallback(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.RegisterUnaryTransitCallback__SWIG_1(a[0].(RoutingTransitCallback1))
	}
	if argc == 2 {
		return p.RegisterUnaryTransitCallback__SWIG_0(a[0].(RoutingTransitCallback1), a[1].(Operations_researchRoutingModelTransitEvaluatorSign))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) RegisterTransitMatrix(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_RoutingModel_RegisterTransitMatrix_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) RegisterTransitCallback__SWIG_0(arg2 RoutingTransitCallback2, arg3 Operations_researchRoutingModelTransitEvaluatorSign) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_RoutingModel_RegisterTransitCallback__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) RegisterTransitCallback__SWIG_1(arg2 RoutingTransitCallback2) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_RoutingModel_RegisterTransitCallback__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRoutingModel) RegisterTransitCallback(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.RegisterTransitCallback__SWIG_1(a[0].(RoutingTransitCallback2))
	}
	if argc == 2 {
		return p.RegisterTransitCallback__SWIG_0(a[0].(RoutingTransitCallback2), a[1].(Operations_researchRoutingModelTransitEvaluatorSign))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) AddDimension(arg2 int, arg3 int64, arg4 int64, arg5 bool, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_RoutingModel_AddDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_1045(_swig_i_2), C.swig_type_1046(_swig_i_3), C._Bool(_swig_i_4), *(*C.swig_type_1047)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddDimensionWithVehicleTransits(arg2 []int, arg3 int64, arg4 int64, arg5 bool, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_RoutingModel_AddDimensionWithVehicleTransits_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1048)(unsafe.Pointer(&_swig_i_1)), C.swig_type_1049(_swig_i_2), C.swig_type_1050(_swig_i_3), C._Bool(_swig_i_4), *(*C.swig_type_1051)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddDimensionWithVehicleCapacity(arg2 int, arg3 int64, arg4 []int64, arg5 bool, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_RoutingModel_AddDimensionWithVehicleCapacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_1052(_swig_i_2), *(*C.swig_type_1053)(unsafe.Pointer(&_swig_i_3)), C._Bool(_swig_i_4), *(*C.swig_type_1054)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddDimensionWithVehicleTransitAndCapacity(arg2 []int, arg3 int64, arg4 []int64, arg5 bool, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_RoutingModel_AddDimensionWithVehicleTransitAndCapacity_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1055)(unsafe.Pointer(&_swig_i_1)), C.swig_type_1056(_swig_i_2), *(*C.swig_type_1057)(unsafe.Pointer(&_swig_i_3)), C._Bool(_swig_i_4), *(*C.swig_type_1058)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddConstantDimensionWithSlack(arg2 int64, arg3 int64, arg4 int64, arg5 bool, arg6 string) (_swig_ret Std_pair_Sl_int_Sc_bool_Sg_) {
	var swig_r Std_pair_Sl_int_Sc_bool_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (Std_pair_Sl_int_Sc_bool_Sg_)(SwigcptrStd_pair_Sl_int_Sc_bool_Sg_(C._wrap_RoutingModel_AddConstantDimensionWithSlack_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1059(_swig_i_1), C.swig_type_1060(_swig_i_2), C.swig_type_1061(_swig_i_3), C._Bool(_swig_i_4), *(*C.swig_type_1062)(unsafe.Pointer(&_swig_i_5)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddConstantDimension(arg2 int64, arg3 int64, arg4 bool, arg5 string) (_swig_ret Std_pair_Sl_int_Sc_bool_Sg_) {
	var swig_r Std_pair_Sl_int_Sc_bool_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Std_pair_Sl_int_Sc_bool_Sg_)(SwigcptrStd_pair_Sl_int_Sc_bool_Sg_(C._wrap_RoutingModel_AddConstantDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1063(_swig_i_1), C.swig_type_1064(_swig_i_2), C._Bool(_swig_i_3), *(*C.swig_type_1065)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddVectorDimension(arg2 []int64, arg3 int64, arg4 bool, arg5 string) (_swig_ret Std_pair_Sl_int_Sc_bool_Sg_) {
	var swig_r Std_pair_Sl_int_Sc_bool_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Std_pair_Sl_int_Sc_bool_Sg_)(SwigcptrStd_pair_Sl_int_Sc_bool_Sg_(C._wrap_RoutingModel_AddVectorDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1066)(unsafe.Pointer(&_swig_i_1)), C.swig_type_1067(_swig_i_2), C._Bool(_swig_i_3), *(*C.swig_type_1068)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddMatrixDimension(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_, arg3 int64, arg4 bool, arg5 string) (_swig_ret Std_pair_Sl_int_Sc_bool_Sg_) {
	var swig_r Std_pair_Sl_int_Sc_bool_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Std_pair_Sl_int_Sc_bool_Sg_)(SwigcptrStd_pair_Sl_int_Sc_bool_Sg_(C._wrap_RoutingModel_AddMatrixDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_1069(_swig_i_2), C._Bool(_swig_i_3), *(*C.swig_type_1070)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetUnaryDimensions() (_swig_ret Std_vector_Sl_operations_research_RoutingDimension_Sm__Sg_) {
	var swig_r Std_vector_Sl_operations_research_RoutingDimension_Sm__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_operations_research_RoutingDimension_Sm__Sg_)(SwigcptrStd_vector_Sl_operations_research_RoutingDimension_Sm__Sg_(C._wrap_RoutingModel_GetUnaryDimensions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetDimensionsWithGlobalCumulOptimizers() (_swig_ret Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_) {
	var swig_r Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_)(SwigcptrStd_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_(C._wrap_RoutingModel_GetDimensionsWithGlobalCumulOptimizers_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetDimensionsWithLocalCumulOptimizers() (_swig_ret Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_) {
	var swig_r Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_)(SwigcptrStd_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_(C._wrap_RoutingModel_GetDimensionsWithLocalCumulOptimizers_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) HasGlobalCumulOptimizer(arg2 RoutingDimension) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_RoutingModel_HasGlobalCumulOptimizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) HasLocalCumulOptimizer(arg2 RoutingDimension) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_RoutingModel_HasLocalCumulOptimizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetMutableGlobalCumulLPOptimizer(arg2 RoutingDimension) (_swig_ret Operations_research_GlobalDimensionCumulOptimizer) {
	var swig_r Operations_research_GlobalDimensionCumulOptimizer
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Operations_research_GlobalDimensionCumulOptimizer)(SwigcptrOperations_research_GlobalDimensionCumulOptimizer(C._wrap_RoutingModel_GetMutableGlobalCumulLPOptimizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetMutableGlobalCumulMPOptimizer(arg2 RoutingDimension) (_swig_ret Operations_research_GlobalDimensionCumulOptimizer) {
	var swig_r Operations_research_GlobalDimensionCumulOptimizer
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Operations_research_GlobalDimensionCumulOptimizer)(SwigcptrOperations_research_GlobalDimensionCumulOptimizer(C._wrap_RoutingModel_GetMutableGlobalCumulMPOptimizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetMutableLocalCumulLPOptimizer(arg2 RoutingDimension) (_swig_ret Operations_research_LocalDimensionCumulOptimizer) {
	var swig_r Operations_research_LocalDimensionCumulOptimizer
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Operations_research_LocalDimensionCumulOptimizer)(SwigcptrOperations_research_LocalDimensionCumulOptimizer(C._wrap_RoutingModel_GetMutableLocalCumulLPOptimizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) HasDimension(arg2 Absl_string_view) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_RoutingModel_HasDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetDimensionOrDie(arg2 string) (_swig_ret RoutingDimension) {
	var swig_r RoutingDimension
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RoutingDimension)(SwigcptrRoutingDimension(C._wrap_RoutingModel_GetDimensionOrDie_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1071)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetMutableDimension(arg2 string) (_swig_ret RoutingDimension) {
	var swig_r RoutingDimension
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RoutingDimension)(SwigcptrRoutingDimension(C._wrap_RoutingModel_GetMutableDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1072)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SetPrimaryConstrainedDimension(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RoutingModel_SetPrimaryConstrainedDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1073)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRoutingModel) GetPrimaryConstrainedDimension() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RoutingModel_GetPrimaryConstrainedDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) AddResourceGroup() (_swig_ret Operations_research_RoutingModel_ResourceGroup) {
	var swig_r Operations_research_RoutingModel_ResourceGroup
	_swig_i_0 := arg1
	swig_r = (Operations_research_RoutingModel_ResourceGroup)(SwigcptrOperations_research_RoutingModel_ResourceGroup(C._wrap_RoutingModel_AddResourceGroup_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetResourceGroups() (_swig_ret Std_vector_Sl_std_unique_ptr_Sl_operations_research_RoutingModel_ResourceGroup_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_unique_ptr_Sl_operations_research_RoutingModel_ResourceGroup_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_std_unique_ptr_Sl_operations_research_RoutingModel_ResourceGroup_Sg__Sg_)(SwigcptrStd_vector_Sl_std_unique_ptr_Sl_operations_research_RoutingModel_ResourceGroup_Sg__Sg_(C._wrap_RoutingModel_GetResourceGroups_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetResourceGroup(arg2 int) (_swig_ret Operations_research_RoutingModel_ResourceGroup) {
	var swig_r Operations_research_RoutingModel_ResourceGroup
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Operations_research_RoutingModel_ResourceGroup)(SwigcptrOperations_research_RoutingModel_ResourceGroup(C._wrap_RoutingModel_GetResourceGroup_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetDimensionResourceGroupIndices(arg2 RoutingDimension) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_RoutingModel_GetDimensionResourceGroupIndices_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) GetDimensionResourceGroupIndex(arg2 RoutingDimension) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_RoutingModel_GetDimensionResourceGroupIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddDisjunction__SWIG_0(arg2 []int64, arg3 int64, arg4 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_RoutingModel_AddDisjunction__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1076)(unsafe.Pointer(&_swig_i_1)), C.swig_type_1077(_swig_i_2), C.swig_type_1078(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 int
{
  return int(swig_r);
}
	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) AddDisjunction__SWIG_1(arg2 []int64, arg3 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_RoutingModel_AddDisjunction__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1079)(unsafe.Pointer(&_swig_i_1)), C.swig_type_1080(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 int
{
  return int(swig_r);
}
	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) AddDisjunction__SWIG_2(arg2 []int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingModel_AddDisjunction__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1081)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 int
{
  return int(swig_r);
}
	return swig_r_1
}

func (p SwigcptrRoutingModel) AddDisjunction(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.AddDisjunction__SWIG_2(a[0].([]int64))
	}
	if argc == 2 {
		return p.AddDisjunction__SWIG_1(a[0].([]int64), a[1].(int64))
	}
	if argc == 3 {
		return p.AddDisjunction__SWIG_0(a[0].([]int64), a[1].(int64), a[2].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) GetDisjunctionIndices(arg2 int64) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_RoutingModel_GetDisjunctionIndices_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1083(_swig_i_1))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyRoutingDisjunctionIndexSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) GetDisjunctionNodeIndices(arg2 int) (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	var _swig_i_1 int
{
  _swig_i_1 = arg2
}
	swig_r_p := C._wrap_RoutingModel_GetDisjunctionNodeIndices_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetDisjunctionPenalty(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	var _swig_i_1 int
{
  _swig_i_1 = arg2
}
	swig_r = (int64)(C._wrap_RoutingModel_GetDisjunctionPenalty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetDisjunctionMaxCardinality(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	var _swig_i_1 int
{
  _swig_i_1 = arg2
}
	swig_r = (int64)(C._wrap_RoutingModel_GetDisjunctionMaxCardinality_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetNumberOfDisjunctions() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_GetNumberOfDisjunctions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) HasMandatoryDisjunctions() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingModel_HasMandatoryDisjunctions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) HasMaxCardinalityConstrainedDisjunctions() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingModel_HasMaxCardinalityConstrainedDisjunctions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) IgnoreDisjunctionsAlreadyForcedToZero() {
	_swig_i_0 := arg1
	C._wrap_RoutingModel_IgnoreDisjunctionsAlreadyForcedToZero_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRoutingModel) AddSoftSameVehicleConstraint(arg2 []int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingModel_AddSoftSameVehicleConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1087)(unsafe.Pointer(&_swig_i_1)), C.swig_type_1088(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRoutingModel) SetAllowedVehiclesForIndex(arg2 []int, arg3 int64) {
	_swig_i_0 := arg1
	var _swig_i_1 []C.int

    _swig_i_1 = swigCopyintSliceIn(arg2)

	_swig_i_2 := arg3
	C._wrap_RoutingModel_SetAllowedVehiclesForIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1089)(unsafe.Pointer(&_swig_i_1)), C.swig_type_1090(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func (arg1 SwigcptrRoutingModel) IsVehicleAllowedForIndex(arg2 int, arg3 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RoutingModel_IsVehicleAllowedForIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_1091(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddPickupAndDelivery(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingModel_AddPickupAndDelivery_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1092(_swig_i_1), C.swig_type_1093(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) AddPickupAndDeliverySets(arg2 int, arg3 int) {
	_swig_i_0 := arg1
	var _swig_i_1 int
{
  _swig_i_1 = arg2
}
	var _swig_i_2 int
{
  _swig_i_2 = arg3
}
	C._wrap_RoutingModel_AddPickupAndDeliverySets_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) GetPickupPositions(arg2 int64) (_swig_ret Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_) {
	var swig_r Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_)(SwigcptrStd_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_(C._wrap_RoutingModel_GetPickupPositions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1094(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetDeliveryPositions(arg2 int64) (_swig_ret Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_) {
	var swig_r Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_)(SwigcptrStd_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_(C._wrap_RoutingModel_GetDeliveryPositions_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1095(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) IsPickup(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingModel_IsPickup_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1096(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) IsDelivery(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingModel_IsDelivery_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1097(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SetPickupAndDeliveryPolicyOfAllVehicles(arg2 Operations_researchRoutingModelPickupAndDeliveryPolicy) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RoutingModel_SetPickupAndDeliveryPolicyOfAllVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) SetPickupAndDeliveryPolicyOfVehicle(arg2 Operations_researchRoutingModelPickupAndDeliveryPolicy, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingModel_SetPickupAndDeliveryPolicyOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) GetPickupAndDeliveryPolicyOfVehicle(arg2 int) (_swig_ret Operations_researchRoutingModelPickupAndDeliveryPolicy) {
	var swig_r Operations_researchRoutingModelPickupAndDeliveryPolicy
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Operations_researchRoutingModelPickupAndDeliveryPolicy)(C._wrap_RoutingModel_GetPickupAndDeliveryPolicyOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetNumOfSingletonNodes() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_GetNumOfSingletonNodes_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type Operations_researchRoutingModelVisitTypePolicy int
func _swig_getRoutingModel_TYPE_ADDED_TO_VEHICLE_RoutingModel() (_swig_ret Operations_researchRoutingModelVisitTypePolicy) {
	var swig_r Operations_researchRoutingModelVisitTypePolicy
	swig_r = (Operations_researchRoutingModelVisitTypePolicy)(C._wrap_TYPE_ADDED_TO_VEHICLE_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelTYPE_ADDED_TO_VEHICLE Operations_researchRoutingModelVisitTypePolicy = _swig_getRoutingModel_TYPE_ADDED_TO_VEHICLE_RoutingModel()
func _swig_getRoutingModel_ADDED_TYPE_REMOVED_FROM_VEHICLE_RoutingModel() (_swig_ret Operations_researchRoutingModelVisitTypePolicy) {
	var swig_r Operations_researchRoutingModelVisitTypePolicy
	swig_r = (Operations_researchRoutingModelVisitTypePolicy)(C._wrap_ADDED_TYPE_REMOVED_FROM_VEHICLE_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelADDED_TYPE_REMOVED_FROM_VEHICLE Operations_researchRoutingModelVisitTypePolicy = _swig_getRoutingModel_ADDED_TYPE_REMOVED_FROM_VEHICLE_RoutingModel()
func _swig_getRoutingModel_TYPE_ON_VEHICLE_UP_TO_VISIT_RoutingModel() (_swig_ret Operations_researchRoutingModelVisitTypePolicy) {
	var swig_r Operations_researchRoutingModelVisitTypePolicy
	swig_r = (Operations_researchRoutingModelVisitTypePolicy)(C._wrap_TYPE_ON_VEHICLE_UP_TO_VISIT_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelTYPE_ON_VEHICLE_UP_TO_VISIT Operations_researchRoutingModelVisitTypePolicy = _swig_getRoutingModel_TYPE_ON_VEHICLE_UP_TO_VISIT_RoutingModel()
func _swig_getRoutingModel_TYPE_SIMULTANEOUSLY_ADDED_AND_REMOVED_RoutingModel() (_swig_ret Operations_researchRoutingModelVisitTypePolicy) {
	var swig_r Operations_researchRoutingModelVisitTypePolicy
	swig_r = (Operations_researchRoutingModelVisitTypePolicy)(C._wrap_TYPE_SIMULTANEOUSLY_ADDED_AND_REMOVED_RoutingModel_constraintsolver_e5a2167dd134d32d())
	return swig_r
}

var RoutingModelTYPE_SIMULTANEOUSLY_ADDED_AND_REMOVED Operations_researchRoutingModelVisitTypePolicy = _swig_getRoutingModel_TYPE_SIMULTANEOUSLY_ADDED_AND_REMOVED_RoutingModel()
func (arg1 SwigcptrRoutingModel) SetVisitType(arg2 int64, arg3 int, arg4 Operations_researchRoutingModelVisitTypePolicy) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RoutingModel_SetVisitType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1098(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (arg1 SwigcptrRoutingModel) GetVisitType(arg2 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingModel_GetVisitType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1099(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetSingleNodesOfType(arg2 int) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_RoutingModel_GetSingleNodesOfType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) GetPairIndicesOfType(arg2 int) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_RoutingModel_GetPairIndicesOfType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) GetVisitTypePolicy(arg2 int64) (_swig_ret Operations_researchRoutingModelVisitTypePolicy) {
	var swig_r Operations_researchRoutingModelVisitTypePolicy
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Operations_researchRoutingModelVisitTypePolicy)(C._wrap_RoutingModel_GetVisitTypePolicy_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1102(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetNumberOfVisitTypes() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_GetNumberOfVisitTypes_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddRequiredTypeAlternativesWhenAddingType(arg2 int, arg3 Absl_flat_hash_set_Sl_int_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_RoutingModel_AddRequiredTypeAlternativesWhenAddingType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) AddRequiredTypeAlternativesWhenRemovingType(arg2 int, arg3 Absl_flat_hash_set_Sl_int_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_RoutingModel_AddRequiredTypeAlternativesWhenRemovingType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) GetRequiredTypeAlternativesWhenAddingType(arg2 int) (_swig_ret Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_) {
	var swig_r Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_)(SwigcptrStd_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_(C._wrap_RoutingModel_GetRequiredTypeAlternativesWhenAddingType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetRequiredTypeAlternativesWhenRemovingType(arg2 int) (_swig_ret Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_) {
	var swig_r Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_)(SwigcptrStd_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_(C._wrap_RoutingModel_GetRequiredTypeAlternativesWhenRemovingType_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) UnperformedPenalty(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingModel_UnperformedPenalty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1104(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) UnperformedPenaltyOrValue(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_RoutingModel_UnperformedPenaltyOrValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1106(_swig_i_1), C.swig_type_1107(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetDepot() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RoutingModel_GetDepot_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SetMaximumNumberOfActiveVehicles(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RoutingModel_SetMaximumNumberOfActiveVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) GetMaximumNumberOfActiveVehicles() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_GetMaximumNumberOfActiveVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SetArcCostEvaluatorOfAllVehicles(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RoutingModel_SetArcCostEvaluatorOfAllVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) SetArcCostEvaluatorOfVehicle(arg2 int, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingModel_SetArcCostEvaluatorOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) SetFixedCostOfAllVehicles(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RoutingModel_SetFixedCostOfAllVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1109(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) SetFixedCostOfVehicle(arg2 int64, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingModel_SetFixedCostOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1110(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) GetFixedCostOfVehicle(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingModel_GetFixedCostOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SetPathEnergyCostOfVehicle(arg2 string, arg3 string, arg4 int64, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_RoutingModel_SetPathEnergyCostOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1112)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_1113)(unsafe.Pointer(&_swig_i_2)), C.swig_type_1114(_swig_i_3), C.swig_intgo(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrRoutingModel) SetAmortizedCostFactorsOfAllVehicles(arg2 int64, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingModel_SetAmortizedCostFactorsOfAllVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1115(_swig_i_1), C.swig_type_1116(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) SetAmortizedCostFactorsOfVehicle(arg2 int64, arg3 int64, arg4 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RoutingModel_SetAmortizedCostFactorsOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1117(_swig_i_1), C.swig_type_1118(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (arg1 SwigcptrRoutingModel) GetAmortizedLinearCostFactorOfVehicles() (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RoutingModel_GetAmortizedLinearCostFactorOfVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetAmortizedQuadraticCostFactorOfVehicles() (_swig_ret []int64) {
	var swig_r []int64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RoutingModel_GetAmortizedQuadraticCostFactorOfVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]int64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SetVehicleUsedWhenEmpty(arg2 bool, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingModel_SetVehicleUsedWhenEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) IsVehicleUsedWhenEmpty(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingModel_IsVehicleUsedWhenEmpty_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SetFirstSolutionEvaluator(arg2 RoutingTransitCallback2) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_SetFirstSolutionEvaluator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) AddLocalSearchOperator(arg2 LocalSearchOperator) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_AddLocalSearchOperator_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) AddSearchMonitor(arg2 SearchMonitor) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_AddSearchMonitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) AddAtSolutionCallback__SWIG_0(arg2 AtSolutionCallback, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RoutingModel_AddAtSolutionCallback__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) AddAtSolutionCallback__SWIG_1(arg2 AtSolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_AddAtSolutionCallback__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrRoutingModel) AddAtSolutionCallback(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddAtSolutionCallback__SWIG_1(a[0].(AtSolutionCallback))
		return
	}
	if argc == 2 {
		p.AddAtSolutionCallback__SWIG_0(a[0].(AtSolutionCallback), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) AddVariableMinimizedByFinalizer(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_AddVariableMinimizedByFinalizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) AddVariableMaximizedByFinalizer(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_AddVariableMaximizedByFinalizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) AddWeightedVariableMinimizedByFinalizer(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RoutingModel_AddWeightedVariableMinimizedByFinalizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_1121(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) AddWeightedVariableMaximizedByFinalizer(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RoutingModel_AddWeightedVariableMaximizedByFinalizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_1122(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) AddVariableTargetToFinalizer(arg2 IntVar, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RoutingModel_AddVariableTargetToFinalizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_1123(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) AddWeightedVariableTargetToFinalizer(arg2 IntVar, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RoutingModel_AddWeightedVariableTargetToFinalizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_1124(_swig_i_2), C.swig_type_1125(_swig_i_3))
}

func (arg1 SwigcptrRoutingModel) CloseModel() {
	_swig_i_0 := arg1
	C._wrap_RoutingModel_CloseModel_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRoutingModel) CloseModelWithParameters(arg2 RoutingSearchParameters) {
	_swig_i_0 := arg1
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	C._wrap_RoutingModel_CloseModelWithParameters_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1126)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func (arg1 SwigcptrRoutingModel) Solve__SWIG_0(arg2 Assignment) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_Solve__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) Solve__SWIG_1() (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_Solve__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrRoutingModel) Solve(a ...interface{}) Assignment {
	argc := len(a)
	if argc == 0 {
		return p.Solve__SWIG_1()
	}
	if argc == 1 {
		return p.Solve__SWIG_0(a[0].(Assignment))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) SolveFromAssignmentWithParameters(arg2 Assignment, arg3 RoutingSearchParameters) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []byte
{
  // go
  bytes, err := proto.Marshal(&arg3)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_2 = bytes
}
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_SolveFromAssignmentWithParameters_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_1127)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) FastSolveFromAssignmentWithParameters__SWIG_0(arg2 Assignment, arg3 RoutingSearchParameters, arg4 bool, arg5 Absl_flat_hash_set_Sl_operations_research_IntVar_Sm__Sg_) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []byte
{
  // go
  bytes, err := proto.Marshal(&arg3)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_2 = bytes
}
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_FastSolveFromAssignmentWithParameters__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_1128)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) FastSolveFromAssignmentWithParameters__SWIG_1(arg2 Assignment, arg3 RoutingSearchParameters, arg4 bool) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []byte
{
  // go
  bytes, err := proto.Marshal(&arg3)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_2 = bytes
}
	_swig_i_3 := arg4
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_FastSolveFromAssignmentWithParameters__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_1129)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrRoutingModel) FastSolveFromAssignmentWithParameters(a ...interface{}) Assignment {
	argc := len(a)
	if argc == 3 {
		return p.FastSolveFromAssignmentWithParameters__SWIG_1(a[0].(Assignment), a[1].(RoutingSearchParameters), a[2].(bool))
	}
	if argc == 4 {
		return p.FastSolveFromAssignmentWithParameters__SWIG_0(a[0].(Assignment), a[1].(RoutingSearchParameters), a[2].(bool), a[3].(Absl_flat_hash_set_Sl_operations_research_IntVar_Sm__Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) SolveFromAssignmentsWithParameters__SWIG_0(arg2 Std_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_, arg3 RoutingSearchParameters, arg4 Std_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []byte
{
  // go
  bytes, err := proto.Marshal(&arg3)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_2 = bytes
}
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_SolveFromAssignmentsWithParameters__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_1130)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SolveFromAssignmentsWithParameters__SWIG_1(arg2 Std_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_, arg3 RoutingSearchParameters) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	var _swig_i_2 []byte
{
  // go
  bytes, err := proto.Marshal(&arg3)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_2 = bytes
}
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_SolveFromAssignmentsWithParameters__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_1131)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	return swig_r
}

func (p SwigcptrRoutingModel) SolveFromAssignmentsWithParameters(a ...interface{}) Assignment {
	argc := len(a)
	if argc == 2 {
		return p.SolveFromAssignmentsWithParameters__SWIG_1(a[0].(Std_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_), a[1].(RoutingSearchParameters))
	}
	if argc == 3 {
		return p.SolveFromAssignmentsWithParameters__SWIG_0(a[0].(Std_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_), a[1].(RoutingSearchParameters), a[2].(Std_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) SolveWithIteratedLocalSearch(arg2 RoutingSearchParameters) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_SolveWithIteratedLocalSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1132)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SetAssignmentFromOtherModelAssignment(arg2 Assignment, arg3 RoutingModel, arg4 Assignment) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_RoutingModel_SetAssignmentFromOtherModelAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (arg1 SwigcptrRoutingModel) ComputeLowerBound() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RoutingModel_ComputeLowerBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ObjectiveLowerBound() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RoutingModel_ObjectiveLowerBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetStatus() (_swig_ret Operations_researchRoutingModelStatus) {
	var swig_r Operations_researchRoutingModelStatus
	_swig_i_0 := arg1
	swig_r = (Operations_researchRoutingModelStatus)(C._wrap_RoutingModel_GetStatus_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) EnableDeepSerialization() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingModel_EnableDeepSerialization_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ApplyLocks(arg2 []int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingModel_ApplyLocks_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1135)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ApplyLocksToAllVehicles(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RoutingModel_ApplyLocksToAllVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) PreAssignment() (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_PreAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) MutablePreAssignment() (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_MutablePreAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) WriteAssignment(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingModel_WriteAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1136)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ReadAssignment(arg2 string) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_ReadAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1137)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) RestoreAssignment(arg2 Assignment) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_RestoreAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ReadAssignmentFromRoutes(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_, arg3 bool) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_ReadAssignmentFromRoutes_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) RoutesToAssignment(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_, arg3 bool, arg4 bool, arg5 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (bool)(C._wrap_RoutingModel_RoutesToAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2), C._Bool(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AssignmentToRoutes(arg2 Assignment, arg3 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_RoutingModel_AssignmentToRoutes_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrRoutingModel) CompactAssignment(arg2 Assignment) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_CompactAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) CompactAndCheckAssignment(arg2 Assignment) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_CompactAndCheckAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AddToAssignment(arg2 IntVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_AddToAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) AddIntervalToAssignment(arg2 IntervalVar) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_AddIntervalToAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) GetOrCreateNodeNeighborsByCostClass__SWIG_0(arg2 float64, arg3 int64, arg4 *float64, arg5 bool) (_swig_ret Operations_research_RoutingModel_NodeNeighborsByCostClass) {
	var swig_r Operations_research_RoutingModel_NodeNeighborsByCostClass
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Operations_research_RoutingModel_NodeNeighborsByCostClass)(SwigcptrOperations_research_RoutingModel_NodeNeighborsByCostClass(C._wrap_RoutingModel_GetOrCreateNodeNeighborsByCostClass__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_type_1138(_swig_i_2), C.swig_voidp(_swig_i_3), C._Bool(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetOrCreateNodeNeighborsByCostClass__SWIG_1(arg2 float64, arg3 int64, arg4 *float64) (_swig_ret Operations_research_RoutingModel_NodeNeighborsByCostClass) {
	var swig_r Operations_research_RoutingModel_NodeNeighborsByCostClass
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Operations_research_RoutingModel_NodeNeighborsByCostClass)(SwigcptrOperations_research_RoutingModel_NodeNeighborsByCostClass(C._wrap_RoutingModel_GetOrCreateNodeNeighborsByCostClass__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_type_1139(_swig_i_2), C.swig_voidp(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetOrCreateNodeNeighborsByCostClass__SWIG_2(arg2 int, arg3 bool) (_swig_ret Operations_research_RoutingModel_NodeNeighborsByCostClass) {
	var swig_r Operations_research_RoutingModel_NodeNeighborsByCostClass
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Operations_research_RoutingModel_NodeNeighborsByCostClass)(SwigcptrOperations_research_RoutingModel_NodeNeighborsByCostClass(C._wrap_RoutingModel_GetOrCreateNodeNeighborsByCostClass__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetOrCreateNodeNeighborsByCostClass__SWIG_3(arg2 int) (_swig_ret Operations_research_RoutingModel_NodeNeighborsByCostClass) {
	var swig_r Operations_research_RoutingModel_NodeNeighborsByCostClass
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Operations_research_RoutingModel_NodeNeighborsByCostClass)(SwigcptrOperations_research_RoutingModel_NodeNeighborsByCostClass(C._wrap_RoutingModel_GetOrCreateNodeNeighborsByCostClass__SWIG_3_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (p SwigcptrRoutingModel) GetOrCreateNodeNeighborsByCostClass(a ...interface{}) Operations_research_RoutingModel_NodeNeighborsByCostClass {
	argc := len(a)
	if argc == 1 {
		return p.GetOrCreateNodeNeighborsByCostClass__SWIG_3(a[0].(int))
	}
	if argc == 2 {
		return p.GetOrCreateNodeNeighborsByCostClass__SWIG_2(a[0].(int), a[1].(bool))
	}
	if argc == 3 {
		return p.GetOrCreateNodeNeighborsByCostClass__SWIG_1(a[0].(float64), a[1].(int64), a[2].(*float64))
	}
	if argc == 4 {
		return p.GetOrCreateNodeNeighborsByCostClass__SWIG_0(a[0].(float64), a[1].(int64), a[2].(*float64), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) AddLocalSearchFilter(arg2 LocalSearchFilter) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_AddLocalSearchFilter_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) Start(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingModel_Start_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) End(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingModel_End_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) IsStart(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingModel_IsStart_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1142(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) IsEnd(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingModel_IsEnd_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1143(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) VehicleIndex(arg2 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingModel_VehicleIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1144(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) Next(arg2 Assignment, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_RoutingModel_Next_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_1146(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) IsVehicleUsed(arg2 Assignment, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RoutingModel_IsVehicleUsed_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) Nexts() (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := arg1
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_RoutingModel_Nexts_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) VehicleVars() (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := arg1
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_RoutingModel_VehicleVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ResourceVars(arg2 int) (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_RoutingModel_ResourceVars_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) NextVar(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingModel_NextVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1147(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ActiveVar(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingModel_ActiveVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1148(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ActiveVehicleVar(arg2 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingModel_ActiveVehicleVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) VehicleRouteConsideredVar(arg2 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingModel_VehicleRouteConsideredVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) VehicleVar(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingModel_VehicleVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1149(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ResourceVar(arg2 int, arg3 int) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingModel_ResourceVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) CostVar() (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingModel_CostVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetArcCostForVehicle(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_RoutingModel_GetArcCostForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1151(_swig_i_1), C.swig_type_1152(_swig_i_2), C.swig_type_1153(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) CostsAreHomogeneousAcrossVehicles() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingModel_CostsAreHomogeneousAcrossVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetHomogeneousCost(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_RoutingModel_GetHomogeneousCost_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1155(_swig_i_1), C.swig_type_1156(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetArcCostForFirstSolution(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_RoutingModel_GetArcCostForFirstSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1158(_swig_i_1), C.swig_type_1159(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetArcCostForClass(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_RoutingModel_GetArcCostForClass_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1161(_swig_i_1), C.swig_type_1162(_swig_i_2), C.swig_type_1163(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetCostClassIndexOfVehicle(arg2 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingModel_GetCostClassIndexOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1164(_swig_i_1)))
	var swig_r_1 int
{
  return int(swig_r);
}
	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) HasVehicleWithCostClassIndex(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	var _swig_i_1 int
{
  _swig_i_1 = arg2
}
	swig_r = (bool)(C._wrap_RoutingModel_HasVehicleWithCostClassIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetCostClassesCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_GetCostClassesCount_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetNonZeroCostClassesCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_GetNonZeroCostClassesCount_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetVehicleClassIndexOfVehicle(arg2 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingModel_GetVehicleClassIndexOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1165(_swig_i_1)))
	var swig_r_1 int
{
  return int(swig_r);
}
	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) GetVehicleOfClass(arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	var _swig_i_1 int
{
  _swig_i_1 = arg2
}
	swig_r = (int)(C._wrap_RoutingModel_GetVehicleOfClass_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetVehicleClassesCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_GetVehicleClassesCount_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetSameVehicleIndicesOfIndex(arg2 int) (_swig_ret []int) {
	var swig_r []C.int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_RoutingModel_GetSameVehicleIndicesOfIndex_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*[]C.int)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 []int

    swig_r_1 = swigCopyintSliceOut(&swig_r)

	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) GetVehicleTypeContainer() (_swig_ret Operations_research_RoutingModel_VehicleTypeContainer) {
	var swig_r Operations_research_RoutingModel_VehicleTypeContainer
	_swig_i_0 := arg1
	swig_r = (Operations_research_RoutingModel_VehicleTypeContainer)(SwigcptrOperations_research_RoutingModel_VehicleTypeContainer(C._wrap_RoutingModel_GetVehicleTypeContainer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) ArcIsMoreConstrainedThanArc(arg2 int64, arg3 int64, arg4 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_RoutingModel_ArcIsMoreConstrainedThanArc_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1167(_swig_i_1), C.swig_type_1168(_swig_i_2), C.swig_type_1169(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) DebugOutputAssignment(arg2 Assignment, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r_p := C._wrap_RoutingModel_DebugOutputAssignment_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_1171)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRoutingModel) CheckIfAssignmentIsFeasible(arg2 Assignment, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RoutingModel_CheckIfAssignmentIsFeasible_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) Solver() (_swig_ret Solver) {
	var swig_r Solver
	_swig_i_0 := arg1
	swig_r = (Solver)(SwigcptrSolver(C._wrap_RoutingModel_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) CheckLimit__SWIG_0(arg2 Absl_Duration) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (bool)(C._wrap_RoutingModel_CheckLimit__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) CheckLimit__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingModel_CheckLimit__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrRoutingModel) CheckLimit(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.CheckLimit__SWIG_1()
	}
	if argc == 1 {
		return p.CheckLimit__SWIG_0(a[0].(Absl_Duration))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingModel) UpdateTimeLimit(arg2 Absl_Duration) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RoutingModel_UpdateTimeLimit_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRoutingModel) TimeBuffer() (_swig_ret Absl_Duration) {
	var swig_r Absl_Duration
	_swig_i_0 := arg1
	swig_r = (Absl_Duration)(SwigcptrAbsl_Duration(C._wrap_RoutingModel_TimeBuffer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetMutableCPSatInterrupt() (_swig_ret Std_atomic_Sl_bool_Sg_) {
	var swig_r Std_atomic_Sl_bool_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_atomic_Sl_bool_Sg_)(SwigcptrStd_atomic_Sl_bool_Sg_(C._wrap_RoutingModel_GetMutableCPSatInterrupt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetMutableCPInterrupt() (_swig_ret Std_atomic_Sl_bool_Sg_) {
	var swig_r Std_atomic_Sl_bool_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_atomic_Sl_bool_Sg_)(SwigcptrStd_atomic_Sl_bool_Sg_(C._wrap_RoutingModel_GetMutableCPInterrupt_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) CancelSearch() {
	_swig_i_0 := arg1
	C._wrap_RoutingModel_CancelSearch_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRoutingModel) Nodes() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_Nodes_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) Vehicles() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RoutingModel_Vehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RoutingModel_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetNumberOfDecisionsInFirstSolution(arg2 RoutingSearchParameters) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	swig_r = (int64)(C._wrap_RoutingModel_GetNumberOfDecisionsInFirstSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1174)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetNumberOfRejectsInFirstSolution(arg2 RoutingSearchParameters) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	swig_r = (int64)(C._wrap_RoutingModel_GetNumberOfRejectsInFirstSolution_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1176)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func (arg1 SwigcptrRoutingModel) IsMatchingModel() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingModel_IsMatchingModel_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) AreRoutesInterdependent(arg2 *RoutingSearchParameters) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingModel_AreRoutesInterdependent_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) MakeGuidedSlackFinalizer(arg2 RoutingDimension, arg3 RoutingTransitCallback1) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_RoutingModel_MakeGuidedSlackFinalizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) MakeSelfDependentDimensionFinalizer(arg2 RoutingDimension) (_swig_ret DecisionBuilder) {
	var swig_r DecisionBuilder
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DecisionBuilder)(SwigcptrDecisionBuilder(C._wrap_RoutingModel_MakeSelfDependentDimensionFinalizer_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) GetPathsMetadata() (_swig_ret PathsMetadata) {
	var swig_r PathsMetadata
	_swig_i_0 := arg1
	swig_r = (PathsMetadata)(SwigcptrPathsMetadata(C._wrap_RoutingModel_GetPathsMetadata_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingModel) SolveWithParameters(arg2 RoutingSearchParameters) (_swig_ret Assignment) {
	var swig_r Assignment
	_swig_i_0 := arg1
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	swig_r = (Assignment)(SwigcptrAssignment(C._wrap_RoutingModel_SolveWithParameters_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1177)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

type RoutingModel interface {
	Swigcptr() uintptr
	SwigIsRoutingModel()
	RegisterUnaryTransitVector(arg2 []int64) (_swig_ret int)
	RegisterUnaryTransitCallback(a ...interface{}) int
	RegisterTransitMatrix(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_) (_swig_ret int)
	RegisterTransitCallback(a ...interface{}) int
	AddDimension(arg2 int, arg3 int64, arg4 int64, arg5 bool, arg6 string) (_swig_ret bool)
	AddDimensionWithVehicleTransits(arg2 []int, arg3 int64, arg4 int64, arg5 bool, arg6 string) (_swig_ret bool)
	AddDimensionWithVehicleCapacity(arg2 int, arg3 int64, arg4 []int64, arg5 bool, arg6 string) (_swig_ret bool)
	AddDimensionWithVehicleTransitAndCapacity(arg2 []int, arg3 int64, arg4 []int64, arg5 bool, arg6 string) (_swig_ret bool)
	AddConstantDimensionWithSlack(arg2 int64, arg3 int64, arg4 int64, arg5 bool, arg6 string) (_swig_ret Std_pair_Sl_int_Sc_bool_Sg_)
	AddConstantDimension(arg2 int64, arg3 int64, arg4 bool, arg5 string) (_swig_ret Std_pair_Sl_int_Sc_bool_Sg_)
	AddVectorDimension(arg2 []int64, arg3 int64, arg4 bool, arg5 string) (_swig_ret Std_pair_Sl_int_Sc_bool_Sg_)
	AddMatrixDimension(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_, arg3 int64, arg4 bool, arg5 string) (_swig_ret Std_pair_Sl_int_Sc_bool_Sg_)
	GetUnaryDimensions() (_swig_ret Std_vector_Sl_operations_research_RoutingDimension_Sm__Sg_)
	GetDimensionsWithGlobalCumulOptimizers() (_swig_ret Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_)
	GetDimensionsWithLocalCumulOptimizers() (_swig_ret Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_)
	HasGlobalCumulOptimizer(arg2 RoutingDimension) (_swig_ret bool)
	HasLocalCumulOptimizer(arg2 RoutingDimension) (_swig_ret bool)
	GetMutableGlobalCumulLPOptimizer(arg2 RoutingDimension) (_swig_ret Operations_research_GlobalDimensionCumulOptimizer)
	GetMutableGlobalCumulMPOptimizer(arg2 RoutingDimension) (_swig_ret Operations_research_GlobalDimensionCumulOptimizer)
	GetMutableLocalCumulLPOptimizer(arg2 RoutingDimension) (_swig_ret Operations_research_LocalDimensionCumulOptimizer)
	HasDimension(arg2 Absl_string_view) (_swig_ret bool)
	GetDimensionOrDie(arg2 string) (_swig_ret RoutingDimension)
	GetMutableDimension(arg2 string) (_swig_ret RoutingDimension)
	SetPrimaryConstrainedDimension(arg2 string)
	GetPrimaryConstrainedDimension() (_swig_ret string)
	AddResourceGroup() (_swig_ret Operations_research_RoutingModel_ResourceGroup)
	GetResourceGroups() (_swig_ret Std_vector_Sl_std_unique_ptr_Sl_operations_research_RoutingModel_ResourceGroup_Sg__Sg_)
	GetResourceGroup(arg2 int) (_swig_ret Operations_research_RoutingModel_ResourceGroup)
	GetDimensionResourceGroupIndices(arg2 RoutingDimension) (_swig_ret []int)
	GetDimensionResourceGroupIndex(arg2 RoutingDimension) (_swig_ret int)
	AddDisjunction(a ...interface{}) int
	GetDisjunctionIndices(arg2 int64) (_swig_ret []int)
	GetDisjunctionNodeIndices(arg2 int) (_swig_ret []int64)
	GetDisjunctionPenalty(arg2 int) (_swig_ret int64)
	GetDisjunctionMaxCardinality(arg2 int) (_swig_ret int64)
	GetNumberOfDisjunctions() (_swig_ret int)
	HasMandatoryDisjunctions() (_swig_ret bool)
	HasMaxCardinalityConstrainedDisjunctions() (_swig_ret bool)
	IgnoreDisjunctionsAlreadyForcedToZero()
	AddSoftSameVehicleConstraint(arg2 []int64, arg3 int64)
	SetAllowedVehiclesForIndex(arg2 []int, arg3 int64)
	IsVehicleAllowedForIndex(arg2 int, arg3 int64) (_swig_ret bool)
	AddPickupAndDelivery(arg2 int64, arg3 int64)
	AddPickupAndDeliverySets(arg2 int, arg3 int)
	GetPickupPositions(arg2 int64) (_swig_ret Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_)
	GetDeliveryPositions(arg2 int64) (_swig_ret Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_)
	IsPickup(arg2 int64) (_swig_ret bool)
	IsDelivery(arg2 int64) (_swig_ret bool)
	SetPickupAndDeliveryPolicyOfAllVehicles(arg2 Operations_researchRoutingModelPickupAndDeliveryPolicy)
	SetPickupAndDeliveryPolicyOfVehicle(arg2 Operations_researchRoutingModelPickupAndDeliveryPolicy, arg3 int)
	GetPickupAndDeliveryPolicyOfVehicle(arg2 int) (_swig_ret Operations_researchRoutingModelPickupAndDeliveryPolicy)
	GetNumOfSingletonNodes() (_swig_ret int)
	SetVisitType(arg2 int64, arg3 int, arg4 Operations_researchRoutingModelVisitTypePolicy)
	GetVisitType(arg2 int64) (_swig_ret int)
	GetSingleNodesOfType(arg2 int) (_swig_ret []int)
	GetPairIndicesOfType(arg2 int) (_swig_ret []int)
	GetVisitTypePolicy(arg2 int64) (_swig_ret Operations_researchRoutingModelVisitTypePolicy)
	GetNumberOfVisitTypes() (_swig_ret int)
	AddRequiredTypeAlternativesWhenAddingType(arg2 int, arg3 Absl_flat_hash_set_Sl_int_Sg_)
	AddRequiredTypeAlternativesWhenRemovingType(arg2 int, arg3 Absl_flat_hash_set_Sl_int_Sg_)
	GetRequiredTypeAlternativesWhenAddingType(arg2 int) (_swig_ret Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_)
	GetRequiredTypeAlternativesWhenRemovingType(arg2 int) (_swig_ret Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_)
	UnperformedPenalty(arg2 int64) (_swig_ret int64)
	UnperformedPenaltyOrValue(arg2 int64, arg3 int64) (_swig_ret int64)
	GetDepot() (_swig_ret int64)
	SetMaximumNumberOfActiveVehicles(arg2 int)
	GetMaximumNumberOfActiveVehicles() (_swig_ret int)
	SetArcCostEvaluatorOfAllVehicles(arg2 int)
	SetArcCostEvaluatorOfVehicle(arg2 int, arg3 int)
	SetFixedCostOfAllVehicles(arg2 int64)
	SetFixedCostOfVehicle(arg2 int64, arg3 int)
	GetFixedCostOfVehicle(arg2 int) (_swig_ret int64)
	SetPathEnergyCostOfVehicle(arg2 string, arg3 string, arg4 int64, arg5 int)
	SetAmortizedCostFactorsOfAllVehicles(arg2 int64, arg3 int64)
	SetAmortizedCostFactorsOfVehicle(arg2 int64, arg3 int64, arg4 int)
	GetAmortizedLinearCostFactorOfVehicles() (_swig_ret []int64)
	GetAmortizedQuadraticCostFactorOfVehicles() (_swig_ret []int64)
	SetVehicleUsedWhenEmpty(arg2 bool, arg3 int)
	IsVehicleUsedWhenEmpty(arg2 int) (_swig_ret bool)
	SetFirstSolutionEvaluator(arg2 RoutingTransitCallback2)
	AddLocalSearchOperator(arg2 LocalSearchOperator)
	AddSearchMonitor(arg2 SearchMonitor)
	AddAtSolutionCallback(a ...interface{})
	AddVariableMinimizedByFinalizer(arg2 IntVar)
	AddVariableMaximizedByFinalizer(arg2 IntVar)
	AddWeightedVariableMinimizedByFinalizer(arg2 IntVar, arg3 int64)
	AddWeightedVariableMaximizedByFinalizer(arg2 IntVar, arg3 int64)
	AddVariableTargetToFinalizer(arg2 IntVar, arg3 int64)
	AddWeightedVariableTargetToFinalizer(arg2 IntVar, arg3 int64, arg4 int64)
	CloseModel()
	CloseModelWithParameters(arg2 RoutingSearchParameters)
	Solve(a ...interface{}) Assignment
	SolveFromAssignmentWithParameters(arg2 Assignment, arg3 RoutingSearchParameters) (_swig_ret Assignment)
	FastSolveFromAssignmentWithParameters(a ...interface{}) Assignment
	SolveFromAssignmentsWithParameters(a ...interface{}) Assignment
	SolveWithIteratedLocalSearch(arg2 RoutingSearchParameters) (_swig_ret Assignment)
	SetAssignmentFromOtherModelAssignment(arg2 Assignment, arg3 RoutingModel, arg4 Assignment)
	ComputeLowerBound() (_swig_ret int64)
	ObjectiveLowerBound() (_swig_ret int64)
	GetStatus() (_swig_ret Operations_researchRoutingModelStatus)
	EnableDeepSerialization() (_swig_ret bool)
	ApplyLocks(arg2 []int64) (_swig_ret IntVar)
	ApplyLocksToAllVehicles(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_, arg3 bool) (_swig_ret bool)
	PreAssignment() (_swig_ret Assignment)
	MutablePreAssignment() (_swig_ret Assignment)
	WriteAssignment(arg2 string) (_swig_ret bool)
	ReadAssignment(arg2 string) (_swig_ret Assignment)
	RestoreAssignment(arg2 Assignment) (_swig_ret Assignment)
	ReadAssignmentFromRoutes(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_, arg3 bool) (_swig_ret Assignment)
	RoutesToAssignment(arg2 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_, arg3 bool, arg4 bool, arg5 Assignment) (_swig_ret bool)
	AssignmentToRoutes(arg2 Assignment, arg3 Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_)
	CompactAssignment(arg2 Assignment) (_swig_ret Assignment)
	CompactAndCheckAssignment(arg2 Assignment) (_swig_ret Assignment)
	AddToAssignment(arg2 IntVar)
	AddIntervalToAssignment(arg2 IntervalVar)
	GetOrCreateNodeNeighborsByCostClass(a ...interface{}) Operations_research_RoutingModel_NodeNeighborsByCostClass
	AddLocalSearchFilter(arg2 LocalSearchFilter)
	Start(arg2 int) (_swig_ret int64)
	End(arg2 int) (_swig_ret int64)
	IsStart(arg2 int64) (_swig_ret bool)
	IsEnd(arg2 int64) (_swig_ret bool)
	VehicleIndex(arg2 int64) (_swig_ret int)
	Next(arg2 Assignment, arg3 int64) (_swig_ret int64)
	IsVehicleUsed(arg2 Assignment, arg3 int) (_swig_ret bool)
	Nexts() (_swig_ret IntVarVector)
	VehicleVars() (_swig_ret IntVarVector)
	ResourceVars(arg2 int) (_swig_ret IntVarVector)
	NextVar(arg2 int64) (_swig_ret IntVar)
	ActiveVar(arg2 int64) (_swig_ret IntVar)
	ActiveVehicleVar(arg2 int) (_swig_ret IntVar)
	VehicleRouteConsideredVar(arg2 int) (_swig_ret IntVar)
	VehicleVar(arg2 int64) (_swig_ret IntVar)
	ResourceVar(arg2 int, arg3 int) (_swig_ret IntVar)
	CostVar() (_swig_ret IntVar)
	GetArcCostForVehicle(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64)
	CostsAreHomogeneousAcrossVehicles() (_swig_ret bool)
	GetHomogeneousCost(arg2 int64, arg3 int64) (_swig_ret int64)
	GetArcCostForFirstSolution(arg2 int64, arg3 int64) (_swig_ret int64)
	GetArcCostForClass(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64)
	GetCostClassIndexOfVehicle(arg2 int64) (_swig_ret int)
	HasVehicleWithCostClassIndex(arg2 int) (_swig_ret bool)
	GetCostClassesCount() (_swig_ret int)
	GetNonZeroCostClassesCount() (_swig_ret int)
	GetVehicleClassIndexOfVehicle(arg2 int64) (_swig_ret int)
	GetVehicleOfClass(arg2 int) (_swig_ret int)
	GetVehicleClassesCount() (_swig_ret int)
	GetSameVehicleIndicesOfIndex(arg2 int) (_swig_ret []int)
	GetVehicleTypeContainer() (_swig_ret Operations_research_RoutingModel_VehicleTypeContainer)
	ArcIsMoreConstrainedThanArc(arg2 int64, arg3 int64, arg4 int64) (_swig_ret bool)
	DebugOutputAssignment(arg2 Assignment, arg3 string) (_swig_ret string)
	CheckIfAssignmentIsFeasible(arg2 Assignment, arg3 bool) (_swig_ret bool)
	Solver() (_swig_ret Solver)
	CheckLimit(a ...interface{}) bool
	UpdateTimeLimit(arg2 Absl_Duration)
	TimeBuffer() (_swig_ret Absl_Duration)
	GetMutableCPSatInterrupt() (_swig_ret Std_atomic_Sl_bool_Sg_)
	GetMutableCPInterrupt() (_swig_ret Std_atomic_Sl_bool_Sg_)
	CancelSearch()
	Nodes() (_swig_ret int)
	Vehicles() (_swig_ret int)
	Size() (_swig_ret int64)
	GetNumberOfDecisionsInFirstSolution(arg2 RoutingSearchParameters) (_swig_ret int64)
	GetNumberOfRejectsInFirstSolution(arg2 RoutingSearchParameters) (_swig_ret int64)
	IsMatchingModel() (_swig_ret bool)
	AreRoutesInterdependent(arg2 *RoutingSearchParameters) (_swig_ret bool)
	MakeGuidedSlackFinalizer(arg2 RoutingDimension, arg3 RoutingTransitCallback1) (_swig_ret DecisionBuilder)
	MakeSelfDependentDimensionFinalizer(arg2 RoutingDimension) (_swig_ret DecisionBuilder)
	GetPathsMetadata() (_swig_ret PathsMetadata)
	SolveWithParameters(arg2 RoutingSearchParameters) (_swig_ret Assignment)
}

type SwigcptrRoutingModelVisitor uintptr

func (p SwigcptrRoutingModelVisitor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRoutingModelVisitor) SwigIsRoutingModelVisitor() {
}

func GetRoutingModelVisitorKLightElement() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_RoutingModelVisitor_kLightElement_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetRoutingModelVisitorKLightElement2() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_RoutingModelVisitor_kLightElement2_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func GetRoutingModelVisitorKRemoveValues() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_RoutingModelVisitor_kRemoveValues_get_constraintsolver_e5a2167dd134d32d()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewRoutingModelVisitor() (_swig_ret RoutingModelVisitor) {
	var swig_r RoutingModelVisitor
	swig_r = (RoutingModelVisitor)(SwigcptrRoutingModelVisitor(C._wrap_new_RoutingModelVisitor_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func DeleteRoutingModelVisitor(arg1 RoutingModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RoutingModelVisitor_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrRoutingModelVisitor) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_RoutingModelVisitor_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrRoutingModelVisitor) SwigIsBaseObject() {
}

func (p SwigcptrRoutingModelVisitor) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type RoutingModelVisitor interface {
	Swigcptr() uintptr
	SwigIsRoutingModelVisitor()
	ToString() (_swig_ret string)
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrGlobalVehicleBreaksConstraint uintptr

func (p SwigcptrGlobalVehicleBreaksConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGlobalVehicleBreaksConstraint) SwigIsGlobalVehicleBreaksConstraint() {
}

func NewGlobalVehicleBreaksConstraint(arg1 RoutingDimension) (_swig_ret GlobalVehicleBreaksConstraint) {
	var swig_r GlobalVehicleBreaksConstraint
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (GlobalVehicleBreaksConstraint)(SwigcptrGlobalVehicleBreaksConstraint(C._wrap_new_GlobalVehicleBreaksConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrGlobalVehicleBreaksConstraint) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GlobalVehicleBreaksConstraint_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrGlobalVehicleBreaksConstraint) Post() {
	_swig_i_0 := arg1
	C._wrap_GlobalVehicleBreaksConstraint_Post_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrGlobalVehicleBreaksConstraint) InitialPropagateWrapper() {
	_swig_i_0 := arg1
	C._wrap_GlobalVehicleBreaksConstraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func DeleteGlobalVehicleBreaksConstraint(arg1 GlobalVehicleBreaksConstraint) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_GlobalVehicleBreaksConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_GlobalVehicleBreaksConstraint_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) IsCastConstraint() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GlobalVehicleBreaksConstraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_GlobalVehicleBreaksConstraint_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_GlobalVehicleBreaksConstraint_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) FreezeQueue() {
	C._wrap_GlobalVehicleBreaksConstraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) UnfreezeQueue() {
	C._wrap_GlobalVehicleBreaksConstraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_GlobalVehicleBreaksConstraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_GlobalVehicleBreaksConstraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) ResetActionOnFail() {
	C._wrap_GlobalVehicleBreaksConstraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_GlobalVehicleBreaksConstraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_GlobalVehicleBreaksConstraint_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_GlobalVehicleBreaksConstraint_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GlobalVehicleBreaksConstraint_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrGlobalVehicleBreaksConstraint) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_GlobalVehicleBreaksConstraint_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrGlobalVehicleBreaksConstraint) SwigIsConstraint() {
}

func (p SwigcptrGlobalVehicleBreaksConstraint) SwigGetConstraint() Constraint {
	return SwigcptrConstraint(getSwigcptr(p))
}

func (p SwigcptrGlobalVehicleBreaksConstraint) SwigIsPropagationBaseObject() {
}

func (p SwigcptrGlobalVehicleBreaksConstraint) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrGlobalVehicleBreaksConstraint) SwigIsBaseObject() {
}

func (p SwigcptrGlobalVehicleBreaksConstraint) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type GlobalVehicleBreaksConstraint interface {
	Swigcptr() uintptr
	SwigIsGlobalVehicleBreaksConstraint()
	ToString() (_swig_ret string)
	Post()
	InitialPropagateWrapper()
	Accept(arg1 ModelVisitor)
	IsCastConstraint() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsConstraint()
	SwigGetConstraint() Constraint
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrTypeRegulationsChecker uintptr

func (p SwigcptrTypeRegulationsChecker) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTypeRegulationsChecker) SwigIsTypeRegulationsChecker() {
}

func DeleteTypeRegulationsChecker(arg1 TypeRegulationsChecker) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TypeRegulationsChecker_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type TypeRegulationsChecker interface {
	Swigcptr() uintptr
	SwigIsTypeRegulationsChecker()
}

type SwigcptrTypeIncompatibilityChecker uintptr

func (p SwigcptrTypeIncompatibilityChecker) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTypeIncompatibilityChecker) SwigIsTypeIncompatibilityChecker() {
}

func NewTypeIncompatibilityChecker(arg1 RoutingModel, arg2 bool) (_swig_ret TypeIncompatibilityChecker) {
	var swig_r TypeIncompatibilityChecker
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (TypeIncompatibilityChecker)(SwigcptrTypeIncompatibilityChecker(C._wrap_new_TypeIncompatibilityChecker_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func DeleteTypeIncompatibilityChecker(arg1 TypeIncompatibilityChecker) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TypeIncompatibilityChecker_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrTypeIncompatibilityChecker) SwigIsTypeRegulationsChecker() {
}

func (p SwigcptrTypeIncompatibilityChecker) SwigGetTypeRegulationsChecker() TypeRegulationsChecker {
	return SwigcptrTypeRegulationsChecker(getSwigcptr(p))
}

type TypeIncompatibilityChecker interface {
	Swigcptr() uintptr
	SwigIsTypeIncompatibilityChecker()
	SwigIsTypeRegulationsChecker()
	SwigGetTypeRegulationsChecker() TypeRegulationsChecker
}

type SwigcptrTypeRequirementChecker uintptr

func (p SwigcptrTypeRequirementChecker) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTypeRequirementChecker) SwigIsTypeRequirementChecker() {
}

func NewTypeRequirementChecker(arg1 RoutingModel) (_swig_ret TypeRequirementChecker) {
	var swig_r TypeRequirementChecker
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (TypeRequirementChecker)(SwigcptrTypeRequirementChecker(C._wrap_new_TypeRequirementChecker_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteTypeRequirementChecker(arg1 TypeRequirementChecker) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TypeRequirementChecker_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrTypeRequirementChecker) SwigIsTypeRegulationsChecker() {
}

func (p SwigcptrTypeRequirementChecker) SwigGetTypeRegulationsChecker() TypeRegulationsChecker {
	return SwigcptrTypeRegulationsChecker(getSwigcptr(p))
}

type TypeRequirementChecker interface {
	Swigcptr() uintptr
	SwigIsTypeRequirementChecker()
	SwigIsTypeRegulationsChecker()
	SwigGetTypeRegulationsChecker() TypeRegulationsChecker
}

type SwigcptrTypeRegulationsConstraint uintptr

func (p SwigcptrTypeRegulationsConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTypeRegulationsConstraint) SwigIsTypeRegulationsConstraint() {
}

func NewTypeRegulationsConstraint(arg1 RoutingModel) (_swig_ret TypeRegulationsConstraint) {
	var swig_r TypeRegulationsConstraint
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (TypeRegulationsConstraint)(SwigcptrTypeRegulationsConstraint(C._wrap_new_TypeRegulationsConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrTypeRegulationsConstraint) Post() {
	_swig_i_0 := arg1
	C._wrap_TypeRegulationsConstraint_Post_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTypeRegulationsConstraint) InitialPropagateWrapper() {
	_swig_i_0 := arg1
	C._wrap_TypeRegulationsConstraint_InitialPropagateWrapper_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func DeleteTypeRegulationsConstraint(arg1 TypeRegulationsConstraint) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TypeRegulationsConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) ToString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_TypeRegulationsConstraint_ToString_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrTypeRegulationsConstraint) Accept(arg1 ModelVisitor) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_TypeRegulationsConstraint_Accept_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) IsCastConstraint() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_TypeRegulationsConstraint_IsCastConstraint_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrTypeRegulationsConstraint) Var() (_swig_ret IntVar) {
	var swig_r IntVar
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_TypeRegulationsConstraint_Var_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrTypeRegulationsConstraint) Solver() (_swig_ret Solver) {
	var swig_r Solver
	swig_r = (Solver)(SwigcptrSolver(C._wrap_TypeRegulationsConstraint_solver_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrTypeRegulationsConstraint) FreezeQueue() {
	C._wrap_TypeRegulationsConstraint_FreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) UnfreezeQueue() {
	C._wrap_TypeRegulationsConstraint_UnfreezeQueue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) EnqueueDelayedDemon(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_TypeRegulationsConstraint_EnqueueDelayedDemon_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) EnqueueVar(arg1 Demon) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_TypeRegulationsConstraint_EnqueueVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) ResetActionOnFail() {
	C._wrap_TypeRegulationsConstraint_ResetActionOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) SetVariableToCleanOnFail(arg1 IntVar) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_TypeRegulationsConstraint_SetVariableToCleanOnFail_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) Name() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_TypeRegulationsConstraint_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrTypeRegulationsConstraint) SetName(arg1 Absl_string_view) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_TypeRegulationsConstraint_SetName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrTypeRegulationsConstraint) HasName() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_TypeRegulationsConstraint_HasName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrTypeRegulationsConstraint) BaseName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_TypeRegulationsConstraint_BaseName_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrTypeRegulationsConstraint) SwigIsConstraint() {
}

func (p SwigcptrTypeRegulationsConstraint) SwigGetConstraint() Constraint {
	return SwigcptrConstraint(getSwigcptr(p))
}

func (p SwigcptrTypeRegulationsConstraint) SwigIsPropagationBaseObject() {
}

func (p SwigcptrTypeRegulationsConstraint) SwigGetPropagationBaseObject() PropagationBaseObject {
	return SwigcptrPropagationBaseObject(getSwigcptr(p))
}

func (p SwigcptrTypeRegulationsConstraint) SwigIsBaseObject() {
}

func (p SwigcptrTypeRegulationsConstraint) SwigGetBaseObject() BaseObject {
	return SwigcptrBaseObject(getSwigcptr(p))
}

type TypeRegulationsConstraint interface {
	Swigcptr() uintptr
	SwigIsTypeRegulationsConstraint()
	Post()
	InitialPropagateWrapper()
	ToString() (_swig_ret string)
	Accept(arg1 ModelVisitor)
	IsCastConstraint() (_swig_ret bool)
	Var() (_swig_ret IntVar)
	Solver() (_swig_ret Solver)
	FreezeQueue()
	UnfreezeQueue()
	EnqueueDelayedDemon(arg1 Demon)
	EnqueueVar(arg1 Demon)
	ResetActionOnFail()
	SetVariableToCleanOnFail(arg1 IntVar)
	Name() (_swig_ret string)
	SetName(arg1 Absl_string_view)
	HasName() (_swig_ret bool)
	BaseName() (_swig_ret string)
	SwigIsConstraint()
	SwigGetConstraint() Constraint
	SwigIsPropagationBaseObject()
	SwigGetPropagationBaseObject() PropagationBaseObject
	SwigIsBaseObject()
	SwigGetBaseObject() BaseObject
}

type SwigcptrBoundCost uintptr

func (p SwigcptrBoundCost) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBoundCost) SwigIsBoundCost() {
}

func (arg1 SwigcptrBoundCost) SetBound(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BoundCost_bound_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1188(_swig_i_1))
}

func (arg1 SwigcptrBoundCost) GetBound() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_BoundCost_bound_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBoundCost) SetCost(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BoundCost_cost_set_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1190(_swig_i_1))
}

func (arg1 SwigcptrBoundCost) GetCost() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_BoundCost_cost_get_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewBoundCost__SWIG_0() (_swig_ret BoundCost) {
	var swig_r BoundCost
	swig_r = (BoundCost)(SwigcptrBoundCost(C._wrap_new_BoundCost__SWIG_0_constraintsolver_e5a2167dd134d32d()))
	return swig_r
}

func NewBoundCost__SWIG_1(arg1 int64, arg2 int64) (_swig_ret BoundCost) {
	var swig_r BoundCost
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BoundCost)(SwigcptrBoundCost(C._wrap_new_BoundCost__SWIG_1_constraintsolver_e5a2167dd134d32d(C.swig_type_1192(_swig_i_0), C.swig_type_1193(_swig_i_1))))
	return swig_r
}

func NewBoundCost(a ...interface{}) BoundCost {
	argc := len(a)
	if argc == 0 {
		return NewBoundCost__SWIG_0()
	}
	if argc == 2 {
		return NewBoundCost__SWIG_1(a[0].(int64), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func DeleteBoundCost(arg1 BoundCost) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_BoundCost_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type BoundCost interface {
	Swigcptr() uintptr
	SwigIsBoundCost()
	SetBound(arg2 int64)
	GetBound() (_swig_ret int64)
	SetCost(arg2 int64)
	GetCost() (_swig_ret int64)
}

type SwigcptrSimpleBoundCosts uintptr

func (p SwigcptrSimpleBoundCosts) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSimpleBoundCosts) SwigIsSimpleBoundCosts() {
}

func NewSimpleBoundCosts(arg1 int, arg2 BoundCost) (_swig_ret SimpleBoundCosts) {
	var swig_r SimpleBoundCosts
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (SimpleBoundCosts)(SwigcptrSimpleBoundCosts(C._wrap_new_SimpleBoundCosts_constraintsolver_e5a2167dd134d32d(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSimpleBoundCosts) BoundCost(arg2 int) (_swig_ret BoundCost) {
	var swig_r BoundCost
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BoundCost)(SwigcptrBoundCost(C._wrap_SimpleBoundCosts_BoundCost_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSimpleBoundCosts) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SimpleBoundCosts_Size_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteSimpleBoundCosts(arg1 SimpleBoundCosts) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SimpleBoundCosts_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

type SimpleBoundCosts interface {
	Swigcptr() uintptr
	SwigIsSimpleBoundCosts()
	BoundCost(arg2 int) (_swig_ret BoundCost)
	Size() (_swig_ret int)
}

type SwigcptrRoutingDimension uintptr

func (p SwigcptrRoutingDimension) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRoutingDimension) SwigIsRoutingDimension() {
}

func DeleteRoutingDimension(arg1 RoutingDimension) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RoutingDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRoutingDimension) Model() (_swig_ret RoutingModel) {
	var swig_r RoutingModel
	_swig_i_0 := arg1
	swig_r = (RoutingModel)(SwigcptrRoutingModel(C._wrap_RoutingDimension_Model_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetTransitValue(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_RoutingDimension_GetTransitValue_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1195(_swig_i_1), C.swig_type_1196(_swig_i_2), C.swig_type_1197(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetTransitValueFromClass(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_RoutingDimension_GetTransitValueFromClass_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1199(_swig_i_1), C.swig_type_1200(_swig_i_2), C.swig_type_1201(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) CumulVar(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingDimension_CumulVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1202(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) TransitVar(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingDimension_TransitVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1203(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) FixedTransitVar(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingDimension_FixedTransitVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1204(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) SlackVar(arg2 int64) (_swig_ret IntVar) {
	var swig_r IntVar
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntVar)(SwigcptrIntVar(C._wrap_RoutingDimension_SlackVar_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1205(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) Cumuls() (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := arg1
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_RoutingDimension_Cumuls_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) FixedTransits() (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := arg1
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_RoutingDimension_FixedTransits_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) Transits() (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := arg1
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_RoutingDimension_Transits_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) Slacks() (_swig_ret IntVarVector) {
	var swig_r IntVarVector
	_swig_i_0 := arg1
	swig_r = (IntVarVector)(SwigcptrIntVarVector(C._wrap_RoutingDimension_Slacks_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) SetSpanUpperBoundForVehicle(arg2 int64, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingDimension_SetSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1206(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingDimension) SetSpanCostCoefficientForVehicle(arg2 int64, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingDimension_SetSpanCostCoefficientForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1207(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingDimension) SetSpanCostCoefficientForAllVehicles(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RoutingDimension_SetSpanCostCoefficientForAllVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1208(_swig_i_1))
}

func (arg1 SwigcptrRoutingDimension) SetSlackCostCoefficientForVehicle(arg2 int64, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RoutingDimension_SetSlackCostCoefficientForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1209(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingDimension) SetSlackCostCoefficientForAllVehicles(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RoutingDimension_SetSlackCostCoefficientForAllVehicles_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1210(_swig_i_1))
}

func (arg1 SwigcptrRoutingDimension) SetGlobalSpanCostCoefficient(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RoutingDimension_SetGlobalSpanCostCoefficient_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1211(_swig_i_1))
}

func (arg1 SwigcptrRoutingDimension) SetCumulVarSoftUpperBound(arg2 int64, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RoutingDimension_SetCumulVarSoftUpperBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1212(_swig_i_1), C.swig_type_1213(_swig_i_2), C.swig_type_1214(_swig_i_3))
}

func (arg1 SwigcptrRoutingDimension) HasCumulVarSoftUpperBound(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingDimension_HasCumulVarSoftUpperBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1215(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetCumulVarSoftUpperBound(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_GetCumulVarSoftUpperBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1217(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetCumulVarSoftUpperBoundCoefficient(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_GetCumulVarSoftUpperBoundCoefficient_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1219(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) SetCumulVarSoftLowerBound(arg2 int64, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RoutingDimension_SetCumulVarSoftLowerBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1220(_swig_i_1), C.swig_type_1221(_swig_i_2), C.swig_type_1222(_swig_i_3))
}

func (arg1 SwigcptrRoutingDimension) HasCumulVarSoftLowerBound(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RoutingDimension_HasCumulVarSoftLowerBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1223(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetCumulVarSoftLowerBound(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_GetCumulVarSoftLowerBound_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1225(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetCumulVarSoftLowerBoundCoefficient(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_GetCumulVarSoftLowerBoundCoefficient_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1227(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) SetBreakIntervalsOfVehicle__SWIG_0(arg2 IntervalVarVector, arg3 int, arg4 int, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_RoutingDimension_SetBreakIntervalsOfVehicle__SWIG_0_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrRoutingDimension) SetBreakIntervalsOfVehicle__SWIG_1(arg2 IntervalVarVector, arg3 int, arg4 []int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RoutingDimension_SetBreakIntervalsOfVehicle__SWIG_1_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_1228)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrRoutingDimension) SetBreakDistanceDurationOfVehicle(arg2 int64, arg3 int64, arg4 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RoutingDimension_SetBreakDistanceDurationOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1229(_swig_i_1), C.swig_type_1230(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (arg1 SwigcptrRoutingDimension) InitializeBreaks() {
	_swig_i_0 := arg1
	C._wrap_RoutingDimension_InitializeBreaks_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRoutingDimension) HasBreakConstraints() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingDimension_HasBreakConstraints_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) SetBreakIntervalsOfVehicle__SWIG_2(arg2 IntervalVarVector, arg3 int, arg4 []int64, arg5 RoutingTransitCallback2) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	C._wrap_RoutingDimension_SetBreakIntervalsOfVehicle__SWIG_2_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_1231)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (p SwigcptrRoutingDimension) SetBreakIntervalsOfVehicle(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.SetBreakIntervalsOfVehicle__SWIG_1(a[0].(IntervalVarVector), a[1].(int), a[2].([]int64))
		return
	}
	if argc == 4 {
		if _, ok := a[2].([]int64); !ok {
			goto check_2
		}
		if _, ok := a[3].(RoutingTransitCallback2); !ok {
			goto check_2
		}
		p.SetBreakIntervalsOfVehicle__SWIG_2(a[0].(IntervalVarVector), a[1].(int), a[2].([]int64), a[3].(RoutingTransitCallback2))
		return
	}
check_2:
	if argc == 4 {
		p.SetBreakIntervalsOfVehicle__SWIG_0(a[0].(IntervalVarVector), a[1].(int), a[2].(int), a[3].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRoutingDimension) GetBreakIntervalsOfVehicle(arg2 int) (_swig_ret IntervalVarVector) {
	var swig_r IntervalVarVector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (IntervalVarVector)(SwigcptrIntervalVarVector(C._wrap_RoutingDimension_GetBreakIntervalsOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetPreTravelEvaluatorOfVehicle(arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingDimension_GetPreTravelEvaluatorOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetPostTravelEvaluatorOfVehicle(arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RoutingDimension_GetPostTravelEvaluatorOfVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) BaseDimension() (_swig_ret RoutingDimension) {
	var swig_r RoutingDimension
	_swig_i_0 := arg1
	swig_r = (RoutingDimension)(SwigcptrRoutingDimension(C._wrap_RoutingDimension_BaseDimension_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) ShortestTransitionSlack(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_ShortestTransitionSlack_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1233(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) Name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RoutingDimension_Name_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRoutingDimension) SetPickupToDeliveryLimitFunctionForPair(arg2 Std_function_Sl_long_SS_long_Sp_int_Sc_int_SP__Sg_, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RoutingDimension_SetPickupToDeliveryLimitFunctionForPair_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingDimension) HasPickupToDeliveryLimits() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingDimension_HasPickupToDeliveryLimits_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) AddNodePrecedence(arg2 int64, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RoutingDimension_AddNodePrecedence_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_type_1235(_swig_i_1), C.swig_type_1236(_swig_i_2), C.swig_type_1237(_swig_i_3))
}

func (arg1 SwigcptrRoutingDimension) GetSpanUpperBoundForVehicle(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_GetSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetSpanCostCoefficientForVehicle(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_GetSpanCostCoefficientForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetSlackCostCoefficientForVehicle(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_GetSlackCostCoefficientForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GlobalSpanCostCoefficient() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RoutingDimension_GlobalSpanCostCoefficient_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetGlobalOptimizerOffset() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RoutingDimension_GetGlobalOptimizerOffset_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetLocalOptimizerOffsetForVehicle(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_RoutingDimension_GetLocalOptimizerOffsetForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) SetSoftSpanUpperBoundForVehicle(arg2 BoundCost, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RoutingDimension_SetSoftSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingDimension) HasSoftSpanUpperBounds() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingDimension_HasSoftSpanUpperBounds_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetSoftSpanUpperBoundForVehicle(arg2 int) (_swig_ret BoundCost) {
	var swig_r BoundCost
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BoundCost)(SwigcptrBoundCost(C._wrap_RoutingDimension_GetSoftSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) SetQuadraticCostSoftSpanUpperBoundForVehicle(arg2 BoundCost, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RoutingDimension_SetQuadraticCostSoftSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRoutingDimension) HasQuadraticCostSoftSpanUpperBounds() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RoutingDimension_HasQuadraticCostSoftSpanUpperBounds_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRoutingDimension) GetQuadraticCostSoftSpanUpperBoundForVehicle(arg2 int) (_swig_ret BoundCost) {
	var swig_r BoundCost
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BoundCost)(SwigcptrBoundCost(C._wrap_RoutingDimension_GetQuadraticCostSoftSpanUpperBoundForVehicle_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

type RoutingDimension interface {
	Swigcptr() uintptr
	SwigIsRoutingDimension()
	Model() (_swig_ret RoutingModel)
	GetTransitValue(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64)
	GetTransitValueFromClass(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64)
	CumulVar(arg2 int64) (_swig_ret IntVar)
	TransitVar(arg2 int64) (_swig_ret IntVar)
	FixedTransitVar(arg2 int64) (_swig_ret IntVar)
	SlackVar(arg2 int64) (_swig_ret IntVar)
	Cumuls() (_swig_ret IntVarVector)
	FixedTransits() (_swig_ret IntVarVector)
	Transits() (_swig_ret IntVarVector)
	Slacks() (_swig_ret IntVarVector)
	SetSpanUpperBoundForVehicle(arg2 int64, arg3 int)
	SetSpanCostCoefficientForVehicle(arg2 int64, arg3 int)
	SetSpanCostCoefficientForAllVehicles(arg2 int64)
	SetSlackCostCoefficientForVehicle(arg2 int64, arg3 int)
	SetSlackCostCoefficientForAllVehicles(arg2 int64)
	SetGlobalSpanCostCoefficient(arg2 int64)
	SetCumulVarSoftUpperBound(arg2 int64, arg3 int64, arg4 int64)
	HasCumulVarSoftUpperBound(arg2 int64) (_swig_ret bool)
	GetCumulVarSoftUpperBound(arg2 int64) (_swig_ret int64)
	GetCumulVarSoftUpperBoundCoefficient(arg2 int64) (_swig_ret int64)
	SetCumulVarSoftLowerBound(arg2 int64, arg3 int64, arg4 int64)
	HasCumulVarSoftLowerBound(arg2 int64) (_swig_ret bool)
	GetCumulVarSoftLowerBound(arg2 int64) (_swig_ret int64)
	GetCumulVarSoftLowerBoundCoefficient(arg2 int64) (_swig_ret int64)
	SetBreakDistanceDurationOfVehicle(arg2 int64, arg3 int64, arg4 int)
	InitializeBreaks()
	HasBreakConstraints() (_swig_ret bool)
	SetBreakIntervalsOfVehicle(a ...interface{})
	GetBreakIntervalsOfVehicle(arg2 int) (_swig_ret IntervalVarVector)
	GetPreTravelEvaluatorOfVehicle(arg2 int) (_swig_ret int)
	GetPostTravelEvaluatorOfVehicle(arg2 int) (_swig_ret int)
	BaseDimension() (_swig_ret RoutingDimension)
	ShortestTransitionSlack(arg2 int64) (_swig_ret int64)
	Name() (_swig_ret string)
	SetPickupToDeliveryLimitFunctionForPair(arg2 Std_function_Sl_long_SS_long_Sp_int_Sc_int_SP__Sg_, arg3 int)
	HasPickupToDeliveryLimits() (_swig_ret bool)
	AddNodePrecedence(arg2 int64, arg3 int64, arg4 int64)
	GetSpanUpperBoundForVehicle(arg2 int) (_swig_ret int64)
	GetSpanCostCoefficientForVehicle(arg2 int) (_swig_ret int64)
	GetSlackCostCoefficientForVehicle(arg2 int) (_swig_ret int64)
	GlobalSpanCostCoefficient() (_swig_ret int64)
	GetGlobalOptimizerOffset() (_swig_ret int64)
	GetLocalOptimizerOffsetForVehicle(arg2 int) (_swig_ret int64)
	SetSoftSpanUpperBoundForVehicle(arg2 BoundCost, arg3 int)
	HasSoftSpanUpperBounds() (_swig_ret bool)
	GetSoftSpanUpperBoundForVehicle(arg2 int) (_swig_ret BoundCost)
	SetQuadraticCostSoftSpanUpperBoundForVehicle(arg2 BoundCost, arg3 int)
	HasQuadraticCostSoftSpanUpperBounds() (_swig_ret bool)
	GetQuadraticCostSoftSpanUpperBoundForVehicle(arg2 int) (_swig_ret BoundCost)
}

func SolveModelWithSat(arg1 RoutingModel, arg2 RoutingSearchParameters, arg3 Assignment, arg4 Assignment) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	var _swig_i_1 []byte
{
  // go
  bytes, err := proto.Marshal(&arg2)
  if err != nil {
    panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
  }
  _swig_i_1 = bytes
}
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (bool)(C._wrap_SolveModelWithSat_constraintsolver_e5a2167dd134d32d(C.uintptr_t(_swig_i_0), *(*C.swig_type_1244)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}


type SwigcptrStd_pair_Sl_int_Sc_bool_Sg_ uintptr
type Std_pair_Sl_int_Sc_bool_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_pair_Sl_int_Sc_bool_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_LocalSearchFilter uintptr
type SwigDirector_LocalSearchFilter interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_LocalSearchFilter) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_IntVarLocalSearchFilter uintptr
type SwigDirector_IntVarLocalSearchFilter interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_IntVarLocalSearchFilter) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAbsl_Span_Sl_int_SS_const_Sg_ uintptr
type Absl_Span_Sl_int_SS_const_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrAbsl_Span_Sl_int_SS_const_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_Demon uintptr
type SwigDirector_Demon interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_Demon) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAbsl_Span_Sl_int64_t_SS_const_Sg_ uintptr
type Absl_Span_Sl_int64_t_SS_const_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrAbsl_Span_Sl_int64_t_SS_const_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_SearchLimit uintptr
type SwigDirector_SearchLimit interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_SearchLimit) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOperations_research_RoutingModel_ResourceGroup uintptr
type Operations_research_RoutingModel_ResourceGroup interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOperations_research_RoutingModel_ResourceGroup) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_long_SS_long_Sp_int_Sc_int_SP__Sg_ uintptr
type Std_function_Sl_long_SS_long_Sp_int_Sc_int_SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_long_SS_long_Sp_int_Sc_int_SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_bool_Sg_ uintptr
type Std_vector_Sl_bool_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_bool_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_operations_research_RoutingDimension_Sm__Sg_ uintptr
type Std_vector_Sl_operations_research_RoutingDimension_Sm__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_operations_research_RoutingDimension_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_unique_ptr_Sl_operations_research_RoutingModel_ResourceGroup_Sg__Sg_ uintptr
type Std_vector_Sl_std_unique_ptr_Sl_operations_research_RoutingModel_ResourceGroup_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_unique_ptr_Sl_operations_research_RoutingModel_ResourceGroup_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_LocalSearchOperator uintptr
type SwigDirector_LocalSearchOperator interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_LocalSearchOperator) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_string_Sg_ uintptr
type Std_vector_Sl_std_string_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_string_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_OptimizeVar uintptr
type SwigDirector_OptimizeVar interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_OptimizeVar) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_SolutionCollector uintptr
type SwigDirector_SolutionCollector interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_SolutionCollector) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAbsl_Duration uintptr
type Absl_Duration interface {
	Swigcptr() uintptr;
}
func (p SwigcptrAbsl_Duration) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_ uintptr
type Std_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_std_vector_Sl_int_Sg_const_SA__Sp_int_Sc_int_SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_Constraint uintptr
type SwigDirector_Constraint interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_Constraint) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_ uintptr
type Std_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_absl_flat_hash_set_Sl_int_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_bool_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_ uintptr
type Std_function_Sl_bool_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_bool_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_bool_Sp_long_SS_long_SP__Sg_ uintptr
type Std_function_Sl_bool_Sp_long_SS_long_SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_bool_Sp_long_SS_long_SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_BaseLns uintptr
type SwigDirector_BaseLns interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_BaseLns) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_operations_research_Solver_Sm__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_operations_research_Solver_Sm__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_void_Sp_operations_research_Solver_Sm__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOperations_research_GlobalDimensionCumulOptimizer uintptr
type Operations_research_GlobalDimensionCumulOptimizer interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOperations_research_GlobalDimensionCumulOptimizer) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_Decision uintptr
type SwigDirector_Decision interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_Decision) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAbsl_flat_hash_set_Sl_int_Sg_ uintptr
type Absl_flat_hash_set_Sl_int_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrAbsl_flat_hash_set_Sl_int_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOperations_research_RoutingModel_NodeNeighborsByCostClass uintptr
type Operations_research_RoutingModel_NodeNeighborsByCostClass interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOperations_research_RoutingModel_NodeNeighborsByCostClass) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAbsl_flat_hash_set_Sl_operations_research_IntVar_Sm__Sg_ uintptr
type Absl_flat_hash_set_Sl_operations_research_IntVar_Sm__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrAbsl_flat_hash_set_Sl_operations_research_IntVar_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_ uintptr
type Std_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_long_SS_long_Sp_long_SS_long_Sc_long_SS_long_Sc_long_SS_long_SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_double_Sg_ uintptr
type Std_vector_Sl_double_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_double_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOperations_research_LocalDimensionCumulOptimizer uintptr
type Operations_research_LocalDimensionCumulOptimizer interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOperations_research_LocalDimensionCumulOptimizer) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_atomic_Sl_bool_Sg_ uintptr
type Std_atomic_Sl_bool_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_atomic_Sl_bool_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_ uintptr
type Std_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_vector_Sl_long_SS_long_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_DecisionBuilder uintptr
type SwigDirector_DecisionBuilder interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_DecisionBuilder) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_std_string_Sp__SP__Sg_ uintptr
type Std_function_Sl_std_string_Sp__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_std_string_Sp__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_RegularLimit uintptr
type SwigDirector_RegularLimit interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_RegularLimit) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_ uintptr
type Std_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_operations_research_RoutingModel_PickupDeliveryPosition_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_ uintptr
type Std_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_operations_research_RoutingDimension_SS_const_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_operations_research_LocalSearchFilterManager_FilterEvent_Sg_ uintptr
type Std_vector_Sl_operations_research_LocalSearchFilterManager_FilterEvent_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_operations_research_LocalSearchFilterManager_FilterEvent_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_vector_Sl_int_Sg__Sg_ uintptr
type Std_vector_Sl_std_vector_Sl_int_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_vector_Sl_int_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOperations_research_RoutingModel_VehicleTypeContainer uintptr
type Operations_research_RoutingModel_VehicleTypeContainer interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOperations_research_RoutingModel_VehicleTypeContainer) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_PathOperator uintptr
type SwigDirector_PathOperator interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_PathOperator) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_ChangeValue uintptr
type SwigDirector_ChangeValue interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_ChangeValue) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_SearchMonitor uintptr
type SwigDirector_SearchMonitor interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_SearchMonitor) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_bool_Sp__SP__Sg_ uintptr
type Std_function_Sl_bool_Sp__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_bool_Sp__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_ uintptr
type Std_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_operations_research_Assignment_SS_const_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAbsl_string_view uintptr
type Absl_string_view interface {
	Swigcptr() uintptr;
}
func (p SwigcptrAbsl_string_view) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_IntVarLocalSearchOperator uintptr
type SwigDirector_IntVarLocalSearchOperator interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_IntVarLocalSearchOperator) Swigcptr() uintptr {
	return uintptr(p)
}



var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}


